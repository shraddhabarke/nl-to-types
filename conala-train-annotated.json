[
    {
      "intent": "How to convert a list of multiple integers into a single integer?",
      "rewritten_intent": "Concatenate elements of a list 'x' of multiple integers to a single integer",
      "snippet": "sum(d * 10 ** i for i, d in enumerate(x[::-1]))",
      "question_id": 41067960
    },
    {
      "intent": "How to convert a list of multiple integers into a single integer?",
      "rewritten_intent": "convert a list of integers into a single integer",
      "snippet": "r = int(''.join(map(str, x)))",
      "question_id": 41067960
    },
    {
      "intent": "how to convert a datetime string back to datetime object?",
      "rewritten_intent": "convert a DateTime string back to a DateTime object of format '%Y-%m-%d %H:%M:%S.%f'",
      "snippet": "datetime.strptime('2010-11-13 10:33:54.227806', '%Y-%m-%d %H:%M:%S.%f')",
      "question_id": 4170655
    },
    {
      "intent": "Averaging the values in a dictionary based on the key",
      "rewritten_intent": "get the average of a list values for each key in dictionary `d`)",
      "snippet": "[(i, sum(j) / len(j)) for i, j in list(d.items())]",
      "question_id": 29565452
    },
    {
      "intent": "zip lists in python",
      "rewritten_intent": "zip two lists `[1, 2]` and `[3, 4]` into a list of two tuples containing elements at the same index in each list",
      "snippet": "zip([1, 2], [3, 4])",
      "question_id": 13704860
    },
    {
      "intent": "Prepend the same string to all items in a list",
      "rewritten_intent": "prepend string 'hello' to all items in list 'a'",
      "snippet": "['hello{0}'.format(i) for i in a]",
      "question_id": 13331419
    },
    {
      "intent": "regex for repeating words in a string in Python",
      "rewritten_intent": "regex for repeating words in a string `s`",
      "snippet": "re.sub('(?<!\\\\S)((\\\\S+)(?:\\\\s+\\\\2))(?:\\\\s+\\\\2)+(?!\\\\S)', '\\\\1', s)",
      "question_id": 25474338
    },
    
    {
      "intent": "swap values in a tuple/list inside a list in python?",
      "rewritten_intent": "swap values in a tuple/list inside a list `mylist`",
      "snippet": "map(lambda t: (t[1], t[0]), mylist)",
      "question_id": 13384841
    },
    {
      "intent": "swap values in a tuple/list inside a list in python?",
      "rewritten_intent": "Swap values in a tuple/list in list `mylist`",
      "snippet": "[(t[1], t[0]) for t in mylist]",
      "question_id": 13384841
    },
    {
      "intent": "Python splitting string by parentheses",
      "rewritten_intent": "find all occurrences of the pattern '\\\\[[^\\\\]]*\\\\]|\\\\([^\\\\)]*\\\\)|\"[^\"]*\"|\\\\S+' within `strs`",
      "snippet": "re.findall('\\\\[[^\\\\]]*\\\\]|\\\\([^\\\\)]*\\\\)|\"[^\"]*\"|\\\\S+', strs)",
      "question_id": 17352321
    },
    {
      "intent": "What's the most memory efficient way to generate the combinations of a set in python?",
      "rewritten_intent": "generate the combinations of 3 from a set `{1, 2, 3, 4}`",
      "snippet": "print(list(itertools.combinations({1, 2, 3, 4}, 3)))",
      "question_id": 10115967
    },
    {
      "intent": "How do I turn a python datetime into a string, with readable format date?",
      "rewritten_intent": "Convert a datetime object `my_datetime` into readable format `%B %d, %Y`",
      "snippet": "my_datetime.strftime('%B %d, %Y')",
      "question_id": 2158347
    },
    {
      "intent": "Parse string to int when string contains a number + extra characters",
      "rewritten_intent": "parse string `s` to int when string contains a number",
      "snippet": "int(''.join(c for c in s if c.isdigit()))",
      "question_id": 17888152
    },
    {
      "intent": "adding new key inside a new key and assigning value in python dictionary",
      "rewritten_intent": "add dictionary `{'class': {'section': 5}}` to key 'Test' of dictionary `dic`",
      "snippet": "dic['Test'].update({'class': {'section': 5}})",
      "question_id": 37855490
    },
    {
      "intent": "Transforming the string representation of a dictionary into a real dictionary",
      "rewritten_intent": "transforming the string `s` into dictionary",
      "snippet": "dict(map(int, x.split(':')) for x in s.split(','))",
      "question_id": 4127344
    },

    {
      "intent": "python convert list to dictionary",
      "rewritten_intent": "build a dictionary containing the conversion of each list in list `[['two', 2], ['one', 1]]` to a key/value pair as its items",
      "snippet": "dict([['two', 2], ['one', 1]])",
      "question_id": 6900955
    },
    {
      "intent": "python convert list to dictionary",
      "rewritten_intent": "convert list `l` to dictionary having each two adjacent elements as key/value pair",
      "snippet": "dict(zip(l[::2], l[1::2]))",
      "question_id": 6900955
    },
    {
      "intent": "how to set global const variables in python",
      "rewritten_intent": "assign float 9.8 to variable `GRAVITY`",
      "snippet": "GRAVITY = 9.8",
      "question_id": 18224991
    },
    {
      "intent": "How to use regular expression to separate numbers and characters in strings like \"30M1000N20M\"",
      "rewritten_intent": "separate numbers from characters in string \"30m1000n20m\"",
      "snippet": "re.findall('(([0-9]+)([A-Z]))', '20M10000N80M')",
      "question_id": 15103484
    },
    {
      "intent": "How to use regular expression to separate numbers and characters in strings like \"30M1000N20M\"",
      "rewritten_intent": "separate numbers and characters in string '20M10000N80M'",
      "snippet": "re.findall('([0-9]+|[A-Z])', '20M10000N80M')",
      "question_id": 15103484
    },
    {
      "intent": "How to use regular expression to separate numbers and characters in strings like \"30M1000N20M\"",
      "rewritten_intent": "separate numbers and characters in string '20M10000N80M'",
      "snippet": "re.findall('([0-9]+)([A-Z])', '20M10000N80M')",
      "question_id": 15103484
    },
    {
      "intent": "Extracting words from a string, removing punctuation and returning a list with separated words in Python",
      "rewritten_intent": "Get a list of  words from a string `Hello world, my name is...James the 2nd!` removing punctuation",
      "snippet": "re.compile('\\\\w+').findall('Hello world, my name is...James the 2nd!')",
      "question_id": 7633274
    },
    {
      "intent": "Convert string into datetime.time object",
      "rewritten_intent": "Convert string '03:55' into datetime.time object",
      "snippet": "datetime.datetime.strptime('03:55', '%H:%M').time()",
      "question_id": 14295673
    },
    {
      "intent": "Map two lists into a dictionary in Python",
      "rewritten_intent": "map two lists `keys` and `values` into a dictionary",
      "snippet": "new_dict = {k: v for k, v in zip(keys, values)}",
      "question_id": 209840
    },
    {
      "intent": "Map two lists into a dictionary in Python",
      "rewritten_intent": "map two lists `keys` and `values` into a dictionary",
      "snippet": "dict((k, v) for k, v in zip(keys, values))",
      "question_id": 209840
    },
    {
      "intent": "Map two lists into a dictionary in Python",
      "rewritten_intent": "map two lists `keys` and `values` into a dictionary",
      "snippet": "dict([(k, v) for k, v in zip(keys, values)])",
      "question_id": 209840
    },
    {
      "intent": "Get the string within brackets in Python",
      "rewritten_intent": "find the string matches within parenthesis from a string `s` using regex",
      "snippet": "m = re.search('\\\\[(\\\\w+)\\\\]', s)",
      "question_id": 8569201
    },
    {
      "intent": "How do i add two lists' elements into one list?",
      "rewritten_intent": "append the sum of each tuple pair in the grouped list `list1` and list `list2` elements to list `list3`",
      "snippet": "list3 = [(a + b) for a, b in zip(list1, list2)]",
      "question_id": 11703064
    },
    {
      "intent": "How to sort in decreasing value first then increasing in second value",
      "rewritten_intent": "sort list `student_tuples` by second element of each tuple in ascending and third element of each tuple in descending",
      "snippet": "print(sorted(student_tuples, key=lambda t: (-t[2], t[0])))",
      "question_id": 16537636
    },
    {
      "intent": "Repeating elements in list comprehension",
      "rewritten_intent": "get list of duplicated elements in range of 3",
      "snippet": "[y for x in range(3) for y in [x, x]]",
      "question_id": 3925465
    },
    {
      "intent": "How do you divide each element in a list by an int?",
      "rewritten_intent": "divide each element in list `myList` by integer `myInt`",
      "snippet": "myList[:] = [(x / myInt) for x in myList]",
      "question_id": 8244915
    },
    {
      "intent": "python: dots in the name of variable in a format string",
      "rewritten_intent": null,
      "snippet": "\"\"\"Name: {0[person.name]}\"\"\".format({'person.name': 'Joe'})",
        "question_id": 7934620
    },
    {
      "intent": "Python: most efficient way to convert date to datetime",
      "rewritten_intent": "convert date `my_date` to datetime",
      "snippet": "datetime.datetime.combine(my_date, datetime.time.min)",
      "question_id": 15661013
    },
    {
      "intent": "Tuple to string",
      "rewritten_intent": "convert tuple `tst` to string `tst2`",
      "snippet": "tst2 = str(tst)",
      "question_id": 3886669
    },
    {
      "intent": "Is there a generator version of `string.split()` in Python?",
      "rewritten_intent": "split string `string` on whitespaces using a generator",
      "snippet": "return (x.group(0) for x in re.finditer(\"[A-Za-z']+\", string))",
      "question_id": 3862010
    },
    {
      "intent": "Using Python String Formatting with Lists",
      "rewritten_intent": "Unpack each value in list `x` to its placeholder '%' in string '%.2f'",
      "snippet": "\"\"\", \"\"\".join(['%.2f'] * len(x))",
      "question_id": 7568627
    },
    {
      "intent": "How to use regex with optional characters in python?",
      "rewritten_intent": "match regex pattern '(\\\\d+(\\\\.\\\\d+)?)' with string '3434.35353'",
      "snippet": "print(re.match('(\\\\d+(\\\\.\\\\d+)?)', '3434.35353').group(1))",
      "question_id": 9891814
    },
    {
      "intent": "Python: filter list of list with another list",
      "rewritten_intent": "create a list `result` containing elements form list `list_a` if first element of list `list_a` is in list `list_b`",
      "snippet": "result = [x for x in list_a if x[0] in list_b]",
      "question_id": 18448469
    },
    {
      "intent": "Generate all possible strings from a list of token",
      "rewritten_intent": "generate all possible string permutations of each two elements in list `['hel', 'lo', 'bye']`",
      "snippet": "print([''.join(a) for a in combinations(['hel', 'lo', 'bye'], 2)])",
      "question_id": 4059550
    },
    {
      "intent": "python how to search an item in a nested list",
      "rewritten_intent": "get a list of items form nested list `li` where third element of each item contains string 'ar'",
      "snippet": "[x for x in li if 'ar' in x[2]]",
      "question_id": 6889785
    },
    {
      "intent": "Python - How to sort a list of lists by the fourth element in each list?",
      "rewritten_intent": "Sort lists in the list `unsorted_list` by the element at index 3 of each list",
      "snippet": "unsorted_list.sort(key=lambda x: x[3])",
      "question_id": 17555218
    },
    {
      "intent": "Sort a Python dictionary by value",
      "rewritten_intent": "Sort dictionary `x` by value in ascending order",
      "snippet": "sorted(list(x.items()), key=operator.itemgetter(1))",
      "question_id": 613183
    },
    {
      "intent": "Sort a Python dictionary by value",
      "rewritten_intent": "Sort dictionary `dict1` by value in ascending order",
      "snippet": "sorted(dict1, key=dict1.get)",
      "question_id": 613183
    },
    {
      "intent": "Sort a Python dictionary by value",
      "rewritten_intent": "Sort dictionary `d` by value in descending order",
      "snippet": "sorted(d, key=d.get, reverse=True)",
      "question_id": 613183
    },
    {
      "intent": "Sort a Python dictionary by value",
      "rewritten_intent": "Sort dictionary `d` by value in ascending order",
      "snippet": "sorted(list(d.items()), key=(lambda x: x[1]))",
      "question_id": 613183
    },
    {
      "intent": "How do I move the last item in a list to the front in python?",
      "rewritten_intent": "move the last item in list `a` to the beginning",
      "snippet": "a = a[-1:] + a[:-1]",
      "question_id": 6490560
    },
    {
      "intent": "python - convert datetime to varchar/string",
      "rewritten_intent": "Parse DateTime object `datetimevariable` using format '%Y-%m-%d'",
      "snippet": "datetimevariable.strftime('%Y-%m-%d')",
      "question_id": 40173569
    },
    {
      "intent": "What's the most pythonic way of normalizing lineends in a string?",
      "rewritten_intent": "Normalize line ends in a string 'mixed'",
      "snippet": "mixed.replace('\\r\\n', '\\n').replace('\\r', '\\n')",
      "question_id": 1749466
    },
    {
      "intent": "In Python, how do I index a list with another list?",
      "rewritten_intent": "index a list `L` with another list `Idx`",
      "snippet": "T = [L[i] for i in Idx]",
      "question_id": 1012185
    },
    {
      "intent": "Summing 2nd list items in a list of lists of lists",
      "rewritten_intent": "Get a list of lists with summing the values of the second element from each list of lists `data`",
      "snippet": "[[sum([x[1] for x in i])] for i in data]",
      "question_id": 37619348
    },
    {
      "intent": "Summing 2nd list items in a list of lists of lists",
      "rewritten_intent": "summing the second item in a list of lists of lists",
      "snippet": "[sum([x[1] for x in i]) for i in data]",
      "question_id": 37619348
    },
    {
      "intent": "How to convert datetime.date.today() to UTC time?",
      "rewritten_intent": "return a DateTime object with the current UTC date",
      "snippet": "today = datetime.datetime.utcnow().date()",
      "question_id": 27587127
    },
    {
      "intent": "How to perform element-wise multiplication of two lists in Python?",
      "rewritten_intent": "create a list containing the multiplication of each elements at the same index of list `lista` and list `listb`",
      "snippet": "[(a * b) for a, b in zip(lista, listb)]",
      "question_id": 10271484
    },
    {
      "intent": "Capturing emoticons using regular expression in python",
      "rewritten_intent": "fetch smilies matching regex pattern '(?::|;|=)(?:-)?(?:\\\\)|\\\\(|D|P)' in string `s`",
      "snippet": "re.findall('(?::|;|=)(?:-)?(?:\\\\)|\\\\(|D|P)', s)",
      "question_id": 14571103
    },
    {
      "intent": "Capturing emoticons using regular expression in python",
      "rewritten_intent": "match the pattern '[:;][)(](?![)(])' to the string `str`",
      "snippet": "re.match('[:;][)(](?![)(])', str)",
      "question_id": 14571103
    },
    {
      "intent": "List of zeros in python",
      "rewritten_intent": "create a list `listofzeros` of `n` zeros",
      "snippet": "listofzeros = [0] * n",
      "question_id": 8528178
    },
    {
      "intent": "python: how to convert a string to utf-8",
      "rewritten_intent": "decode the string 'stringnamehere'  to UTF-8",
      "snippet": "stringnamehere.decode('utf-8', 'ignore')",
      "question_id": 4182603
    },
    {
      "intent": "Python regex - Ignore parenthesis as indexing?",
      "rewritten_intent": "Match regex pattern '((?:A|B|C)D)' on string 'BDE'",
      "snippet": "re.findall('((?:A|B|C)D)', 'BDE')",
      "question_id": 11985628
    },
    {
      "intent": "Python dict how to create key or append an element to key?",
      "rewritten_intent": "Create a key `key` if it does not exist in dict `dic` and append element `value` to value.",
      "snippet": "dic.setdefault(key, []).append(value)",
      "question_id": 12905999
    },
    {
      "intent": "Python \"extend\" for a dictionary",
      "rewritten_intent": "extend dictionary `a` with key/value pairs of dictionary `b`",
      "snippet": "a.update(b)",
      "question_id": 577234
    },
    {
      "intent": "Removing key values pairs from a list of dictionaries",
      "rewritten_intent": "removing key values pairs with key 'mykey1' from a list of dictionaries `mylist`",
      "snippet": "[{k: v for k, v in d.items() if k != 'mykey1'} for d in mylist]",
      "question_id": 13254241
    },
    {
      "intent": "Removing key values pairs from a list of dictionaries",
      "rewritten_intent": null,
      "snippet": "[dict((k, v) for k, v in d.items() if k != 'mykey1') for d in mylist]",
      "question_id": 13254241
    },
    {
      "intent": "Find dictionary items whose key matches a substring",
      "rewritten_intent": "create a list of values from the dictionary `programs` that have a key with a case insensitive match to 'new york'",
      "snippet": "[value for key, value in list(programs.items()) if 'new york' in key.lower()]",
      "question_id": 10484261
    },
    {
      "intent": "Regex for getting all digits in a string after a character",
      "rewritten_intent": "get all digits in a string `s` after a '[' character",
      "snippet": "re.findall('\\\\d+(?=[^[]+$)', s)",
      "question_id": 34338341
    },

    {
      "intent": "In Python, find out number of differences between two ordered lists",
      "rewritten_intent": "find out the number of non-matched elements at the same index of list `a` and list `b`",
      "snippet": "sum(1 for i, j in zip(a, b) if i != j)",
      "question_id": 14914615
    },
    {
      "intent": "When the key is a tuple in dictionary in Python",
      "rewritten_intent": "make all keys lowercase in dictionary `d`",
      "snippet": "d = {(a.lower(), b): v for (a, b), v in list(d.items())}",
      "question_id": 21833383
    },
    {
      "intent": "Sorting a list of tuples with multiple conditions",
      "rewritten_intent": "sort list `list_` based on first element of each tuple and by the length of the second element of each tuple",
      "snippet": "list_.sort(key=lambda x: [x[0], len(x[1]), x[1]])",
      "question_id": 19643099
    },
    {
      "intent": "trim whitespace",
      "rewritten_intent": "trim whitespace in string `s`",
      "snippet": "s.strip()",
      "question_id": 1185524
    },
    {
      "intent": "trim whitespace (including tabs)",
      "rewritten_intent": "trim whitespace (including tabs) in `s` on the left side",
      "snippet": "s = s.lstrip()",
      "question_id": 1185524
    },
    {
      "intent": "trim whitespace (including tabs)",
      "rewritten_intent": "trim whitespace (including tabs) in `s` on the right side",
      "snippet": "s = s.rstrip()",
      "question_id": 1185524
    },
    {
      "intent": "trim whitespace (including tabs)",
      "rewritten_intent": "trim characters ' \\t\\n\\r' in `s`",
      "snippet": "s = s.strip(' \\t\\n\\r')",
      "question_id": 1185524
    },
    {
      "intent": "trim whitespace (including tabs)",
      "rewritten_intent": "trim whitespaces (including tabs) in string `s`",
      "snippet": "print(re.sub('[\\\\s+]', '', s))",
      "question_id": 1185524
    },

    {
      "intent": "rreplace - How to replace the last occurence of an expression in a string?",
      "rewritten_intent": "replace the last occurence of an expression '</div>' with '</bad>' in a string `s`",
      "snippet": "re.sub('(.*)</div>', '\\\\1</bad>', s)",
      "question_id": 2556108
    },
    {
      "intent": "How do I compare values in a dictionary?",
      "rewritten_intent": "get the maximum of 'salary' and 'bonus' values in a dictionary",
      "snippet": "print(max(d, key=lambda x: (d[x]['salary'], d[x]['bonus'])))",
      "question_id": 42211584
    },

    {
      "intent": "Python regex split case insensitive in 2.6",
      "rewritten_intent": "split string 'fooxyzbar' based on case-insensitive matching using string 'XYZ'",
      "snippet": "re.compile('XYZ', re.IGNORECASE).split('fooxyzbar')",
      "question_id": 8993904
    },
    {
      "intent": "List comprehension - converting strings in one list, to integers in another",
      "rewritten_intent": "get list of sums of neighboring integers in string `example`",
      "snippet": "[sum(map(int, s)) for s in example.split()]",
      "question_id": 40498088
    },
    {
      "intent": "How to find duplicate elements in array using for loop in Python?",
      "rewritten_intent": "Get all the keys from dictionary `y` whose value is `1`",
      "snippet": "[i for i in y if y[i] == 1]",
      "question_id": 1920145
    },
    {
      "intent": "Converting byte string in unicode string",
      "rewritten_intent": "converting byte string `c` in unicode string",
      "snippet": "c.decode('unicode_escape')",
      "question_id": 13837848
    },
    {
      "intent": "add new item to dictionary",
      "rewritten_intent": "add key \"item3\" and value \"3\" to dictionary `default_data `",
      "snippet": "default_data['item3'] = 3",
      "question_id": 6416131
    },
    {
      "intent": "add new item to dictionary",
      "rewritten_intent": "add key \"item3\" and value \"3\" to dictionary `default_data `",
      "snippet": "default_data.update({'item3': 3, })",
      "question_id": 6416131
    },
    {
      "intent": "add new item to dictionary",
      "rewritten_intent": "add key value pairs 'item4' , 4 and 'item5' , 5 to dictionary `default_data`",
      "snippet": "default_data.update({'item4': 4, 'item5': 5, })",
      "question_id": 6416131
    },
    {
      "intent": "Index the first and the last n elements of a list",
      "rewritten_intent": "Get the first and last 3 elements of list `l`",
      "snippet": "l[:3] + l[-3:]",
      "question_id": 40016359
    },
    {
      "intent": "Merging a list with a list of lists",
      "rewritten_intent": "For each index `x` from 0 to 3, append the element at index `x` of list `b` to the list at index `x` of list a.",
      "snippet": "[a[x].append(b[x]) for x in range(3)]",
      "question_id": 18872717
    },
    {
      "intent": "Regex Python adding characters after a certain word",
      "rewritten_intent": "add character '@' after word 'get' in string `text`",
      "snippet": "text = re.sub('(\\\\bget\\\\b)', '\\\\1@', text)",
      "question_id": 20735384
    },
    {
      "intent": "Python: updating a large dictionary using another large dictionary",
      "rewritten_intent": "update dictionary `b`, overwriting values where keys are identical, with contents of dictionary `d`",
      "snippet": "b.update(d)",
      "question_id": 12717716
    },


    {
      "intent": "Concatenating Unicode with string: print '\u00a3' + '1' works, but print '\u00a3' + u'1' throws UnicodeDecodeError",
      "rewritten_intent": "add unicode string '1' to UTF-8 decoded string '\\xc2\\xa3'",
      "snippet": "print('\\xc2\\xa3'.decode('utf8') + '1')",
      "question_id": 31771758
    },
    {
      "intent": "How to convert the following string in python?",
      "rewritten_intent": "lower-case the string obtained by replacing the occurrences of regex pattern '(?<=[a-z])([A-Z])' in string `s` with eplacement '-\\\\1'",
      "snippet": "re.sub('(?<=[a-z])([A-Z])', '-\\\\1', s).lower()",
      "question_id": 39414085
    },
    {
      "intent": "Python Decimals format",
      "rewritten_intent": "format a string `num` using string formatting",
      "snippet": "\"\"\"{0:.3g}\"\"\".format(num)",
      "question_id": 2389846
    },
    {
      "intent": "Python: converting radians to degrees",
      "rewritten_intent": "convert radians 1 to degrees",
      "snippet": "math.cos(math.radians(1))",
      "question_id": 9875964
    },
    {
      "intent": "count how many of an object type there are in a list Python",
      "rewritten_intent": "count the number of integers in list `a`",
      "snippet": "sum(isinstance(x, int) for x in a)",
      "question_id": 25355705
    },
    {
      "intent": "Python: Getting rid of \\u200b from a string using regular expressions",
      "rewritten_intent": "replacing  '\\u200b' with '*' in a string  using regular expressions",
      "snippet": "'used\\u200b'.replace('\\u200b', '*')",
      "question_id": 31522361
    },

    {
      "intent": "sum of squares in a list in one line?",
      "rewritten_intent": "sum of squares values in a list `l`",
      "snippet": "sum(i * i for i in l)",
      "question_id": 26894227
    },
    {
      "intent": "sum of squares in a list in one line?",
      "rewritten_intent": "calculate the sum of the squares of each value in list `l`",
      "snippet": "sum(map(lambda x: x * x, l))",
      "question_id": 26894227
    },
    {
      "intent": "Create a dictionary with list comprehension",
      "rewritten_intent": "Create a dictionary `d` from list `iterable`",
      "snippet": "d = dict(((key, value) for (key, value) in iterable))",
      "question_id": 1747817
    },
    {
      "intent": "Create a dictionary with list comprehension",
      "rewritten_intent": "Create a dictionary `d` from list `iterable`",
      "snippet": "d = {key: value for (key, value) in iterable}",
      "question_id": 1747817
    },
    {
      "intent": "Create a dictionary with list comprehension",
      "rewritten_intent": "Create a dictionary `d` from list of key value pairs `iterable`",
      "snippet": "d = {k: v for (k, v) in iterable}",
      "question_id": 1747817
    },

    {
      "intent": "Return a random word from a word list in python",
      "rewritten_intent": "return a random word from a word list 'words'",
      "snippet": "print(random.choice(words))",
      "question_id": 1456617
    },
    {
      "intent": "Find Max in Nested Dictionary",
      "rewritten_intent": "Find a max value of the key `count` in a nested dictionary `d`",
      "snippet": "max(d, key=lambda x: d[x]['count'])",
      "question_id": 12829889
    },
    {
      "intent": "How to replace empty string with zero in comma-separated string?",
      "rewritten_intent": "get list of string elements in string `data` delimited by commas, putting `0` in place of empty strings",
      "snippet": "[(int(x) if x else 0) for x in data.split(',')]",
      "question_id": 2606976
    },
    {
      "intent": "How to replace empty string with zero in comma-separated string?",
      "rewritten_intent": "split string `s` into a list of strings based on ',' then replace empty strings with zero",
      "snippet": "\"\"\",\"\"\".join(x or '0' for x in s.split(','))",
      "question_id": 2606976
    },
    {
      "intent": "How can I check if a date is the same day as datetime.today()?",
      "rewritten_intent": "check if date `yourdatetime` is equal to today's date",
      "snippet": "yourdatetime.date() == datetime.today().date()",
      "question_id": 6407362
    },
    {
      "intent": "How do I print bold text in Python?",
      "rewritten_intent": "print bold text 'Hello'",
      "snippet": "print('\\x1b[1m' + 'Hello')",
      "question_id": 8924173
    },
    {
      "intent": "Renaming multiple files in python",
      "rewritten_intent": "remove 20 symbols in front of '.' in string 'unique12345678901234567890.mkv'",
      "snippet": "re.sub('.{20}(.mkv)', '\\\\1', 'unique12345678901234567890.mkv')",
      "question_id": 4358701
    },
    {
      "intent": "Can I get a list of the variables that reference an other in Python 2.7?",
      "rewritten_intent": "Define a list with string values `['a', 'c', 'b', 'obj']`",
      "snippet": "['a', 'c', 'b', 'obj']",
      "question_id": 17589590
    },
    {
      "intent": "Substitute multiple whitespace with single whitespace in Python",
      "rewritten_intent": "substitute multiple whitespace with single whitespace in string `mystring`",
      "snippet": "\"\"\" \"\"\".join(mystring.split())",
      "question_id": 2077897
    },
    {
      "intent": "How to print floating point numbers as it is without any truncation in python?",
      "rewritten_intent": "print a floating point number 2.345e-67 without any truncation",
      "snippet": "print('{:.100f}'.format(2.345e-67))",
      "question_id": 20048987
    },
    {
      "intent": "Check if a given key already exists in a dictionary",
      "rewritten_intent": "Check if key 'key1' in `dict`",
      "snippet": "('key1' in dict)",
      "question_id": 1602934
    },
    {
      "intent": "Check if a given key already exists in a dictionary",
      "rewritten_intent": "Check if key 'a' in `d`",
      "snippet": "('a' in d)",
      "question_id": 1602934
    },
    {
      "intent": "Check if a given key already exists in a dictionary",
      "rewritten_intent": "Check if key 'c' in `d`",
      "snippet": "('c' in d)",
      "question_id": 1602934
    },
    {
      "intent": "Format string - spaces between every three digit",
      "rewritten_intent": "insert ' ' between every three digit before '.' and replace ',' with '.' in 12345678.46",
      "snippet": "format(12345678.46, ',').replace(',', ' ').replace('.', ',')",
      "question_id": 17484631
    },
    {
      "intent": "Sorting a defaultdict by value in python",
      "rewritten_intent": "reverse sort items in default dictionary `cityPopulation` by the third item in each key's list of values",
      "snippet": "sorted(iter(cityPopulation.items()), key=lambda k_v: k_v[1][2], reverse=True)",
      "question_id": 10194713
    },
    {
      "intent": "Sorting a defaultdict by value in python",
      "rewritten_intent": "Sort dictionary `u` in ascending order based on second elements of its values",
      "snippet": "sorted(list(u.items()), key=lambda v: v[1])",
      "question_id": 10194713
    },
    {
      "intent": "Sorting a defaultdict by value in python",
      "rewritten_intent": "reverse sort dictionary `d` based on its values",
      "snippet": "sorted(list(d.items()), key=lambda k_v: k_v[1], reverse=True)",
      "question_id": 10194713
    },
    {
      "intent": "Sorting a defaultdict by value in python",
      "rewritten_intent": "sorting a defaultdict `d` by value",
      "snippet": "sorted(list(d.items()), key=lambda k_v: k_v[1])",
      "question_id": 10194713
    },
    {
      "intent": "Divide the values of two dictionaries in python",
      "rewritten_intent": "divide the values with same keys of two dictionary `d1` and `d2`",
      "snippet": "{k: (float(d2[k]) / d1[k]) for k in d2}",
      "question_id": 11840111
    },
    {
      "intent": "Divide the values of two dictionaries in python",
      "rewritten_intent": "divide the value for each key `k` in dict `d2` by the value for the same key `k` in dict `d1`",
      "snippet": "{k: (d2[k] / d1[k]) for k in list(d1.keys()) & d2}",
      "question_id": 11840111
    },
    {
      "intent": "Divide the values of two dictionaries in python",
      "rewritten_intent": "divide values associated with each key in dictionary `d1` from values associated with the same key in dictionary `d2`",
      "snippet": "dict((k, float(d2[k]) / d1[k]) for k in d2)",
      "question_id": 11840111
    },
 
    {
      "intent": "How to remove a key from a python dictionary?",
      "rewritten_intent": "remove a key 'key' from a dictionary `my_dict`",
      "snippet": "my_dict.pop('key', None)",
      "question_id": 11277432
    },
    {
      "intent": "How do I remove whitespace from the end of a string in Python?",
      "rewritten_intent": "remove white spaces from the end of string \"    xyz     \"",
      "snippet": "\"\"\"    xyz     \"\"\".rstrip()",
      "question_id": 2372573
    },
    {
      "intent": "sorting a graph by its edge weight. python",
      "rewritten_intent": "sort list `lst` in descending order based on the second item of each tuple in it",
      "snippet": "lst.sort(key=lambda x: x[2], reverse=True)",
      "question_id": 11584773
    },
    {
      "intent": "How to find all occurrences of an element in a list?",
      "rewritten_intent": null,
      "snippet": "indices = [i for i, x in enumerate(my_list) if x == 'whatever']",
      "question_id": 6294179
    },
    {
      "intent": "How to count the number of a specific character at the end of a string ignoring duplicates?",
      "rewritten_intent": "count the number of trailing question marks in string `my_text`",
      "snippet": "len(my_text) - len(my_text.rstrip('?'))",
      "question_id": 42178481
    },
    {
      "intent": "Switch every pair of characters in a string",
      "rewritten_intent": "switch positions of each two adjacent characters in string `a`",
      "snippet": "print(''.join(''.join(i) for i in zip(a2, a1)) + a[-1] if len(a) % 2 else '')",
      "question_id": 30628176
    },
    {
      "intent": "Elegant way to convert list to hex string",
      "rewritten_intent": "Convert list of booleans `walls` into a hex string",
      "snippet": "hex(int(''.join([str(int(b)) for b in walls]), 2))",
      "question_id": 17731822
    },
    {
      "intent": "Elegant way to convert list to hex string",
      "rewritten_intent": "convert the sum of list `walls` into a hex presentation",
      "snippet": "hex(sum(b << i for i, b in enumerate(reversed(walls))))",
      "question_id": 17731822
    },
    {
      "intent": "Print multiple arguments in python",
      "rewritten_intent": "print a string using multiple strings `name` and `score`",
      "snippet": "print('Total score for %s is %s  ' % (name, score))",
      "question_id": 15286401
    },
    {
      "intent": "Python regex findall alternation behavior",
      "rewritten_intent": "find all digits in string '6,7)' and put them to a list",
      "snippet": "re.findall('\\\\d|\\\\d,\\\\d\\\\)', '6,7)')",
      "question_id": 31465002
    },
    {
      "intent": "Regex to match 'lol' to 'lolllll' and 'omg' to 'omggg', etc",
      "rewritten_intent": "Write a regex statement to match 'lol' to 'lolllll'.",
      "snippet": "re.sub('l+', 'l', 'lollll')",
      "question_id": 3895874
    },
    {
      "intent": "Process escape sequences in a string",
      "rewritten_intent": "decode escape sequences in string `myString`",
      "snippet": "myString.decode('string_escape')",
      "question_id": 4020539
    },
    {
      "intent": "Finding key from value in Python dictionary:",
      "rewritten_intent": "Find all keys from a dictionary `d` whose values are `desired_value`",
      "snippet": "[k for k, v in d.items() if v == desired_value]",
      "question_id": 7657457
    },
    {
      "intent": "Extract all keys from a list of dictionaries",
      "rewritten_intent": "create a set containing all keys' names from dictionary `LoD`",
      "snippet": "{k for d in LoD for k in list(d.keys())}",
      "question_id": 11399384
    },
    {
      "intent": "Extract all keys from a list of dictionaries",
      "rewritten_intent": "create a set containing all keys names from list of dictionaries `LoD`",
      "snippet": "set([i for s in [list(d.keys()) for d in LoD] for i in s])",
      "question_id": 11399384
    },
    {
      "intent": "Extract all keys from a list of dictionaries",
      "rewritten_intent": "extract all keys from a list of dictionaries `LoD`",
      "snippet": "[i for s in [list(d.keys()) for d in LoD] for i in s]",
      "question_id": 11399384
    },
    {
      "intent": "Is there a more elegant way for unpacking keys and values of a dictionary into two lists, without losing consistence?",
      "rewritten_intent": "unpack keys and values of a dictionary `d` into two lists",
      "snippet": "keys, values = zip(*list(d.items()))",
      "question_id": 6612769
    },
    {
      "intent": "Convert a string to integer with decimal in Python",
      "rewritten_intent": "convert a string `s` containing a decimal to an integer",
      "snippet": "int(Decimal(s))",
      "question_id": 1094717
    },
    {
      "intent": "Convert a string to integer with decimal in Python",
      "rewritten_intent": null,
      "snippet": "int(s.split('.')[0])",
      "question_id": 1094717
    },
    {
      "intent": "How to make a copy of a 2D array in Python?",
      "rewritten_intent": "make a row-by-row copy `y` of array `x`",
      "snippet": "y = [row[:] for row in x]",
      "question_id": 6532881
    },
    {
      "intent": "Check if a Python list item contains a string inside another string",
      "rewritten_intent": "get a list of items from the list `some_list` that contain string 'abc'",
      "snippet": "matching = [s for s in some_list if 'abc' in s]",
      "question_id": 4843158
    },
    {
      "intent": "How do I create a LIST of unique random numbers?",
      "rewritten_intent": null,
      "snippet": "random.sample(list(range(100)), 10)",
      "question_id": 9755538
    },
    {
      "intent": "Splitting on last delimiter in Python string?",
      "rewritten_intent": "split a string `s` on last delimiter",
      "snippet": "s.rsplit(',', 1)",
      "question_id": 15012228
    },
    {
      "intent": "Python check if all elements of a list are the same type",
      "rewritten_intent": "Check if all elements in list `lst` are tupples of long and int",
      "snippet": "all(isinstance(x, int) for x in lst)",
      "question_id": 13252333
    },
    {
      "intent": "Python check if all elements of a list are the same type",
      "rewritten_intent": "check if all elements in a list 'lst' are the same type 'int'",
      "snippet": "all(isinstance(x, int) for x in lst)",
      "question_id": 13252333
    },
    {
      "intent": "Python . How to get rid of '\\r' in string?",
      "rewritten_intent": "strip a string `line` of all carriage returns and newlines",
      "snippet": "line.strip()",
      "question_id": 13656519
    },
    {
      "intent": "How do I convert a datetime.date object into datetime.datetime in python?",
      "rewritten_intent": "convert Date object `dateobject` into a DateTime object",
      "snippet": "datetime.datetime.combine(dateobject, datetime.time())",
      "question_id": 11619169
    },
    {
      "intent": "How to check if one of the following items is in a list?",
      "rewritten_intent": "check if any item from list `b` is in list `a`",
      "snippet": "print(any(x in a for x in b))",
      "question_id": 740287
    },
    {
      "intent": "Regex for removing data in parenthesis",
      "rewritten_intent": "Remove anything in parenthesis from string `item` with a regex",
      "snippet": "item = re.sub(' ?\\\\([^)]+\\\\)', '', item)",
      "question_id": 19794051
    },
    {
      "intent": "Regex for removing data in parenthesis",
      "rewritten_intent": "Remove word characters in parenthesis from string `item` with a regex",
      "snippet": "item = re.sub(' ?\\\\(\\\\w+\\\\)', '', item)",
      "question_id": 19794051
    },
    {
      "intent": "Regex for removing data in parenthesis",
      "rewritten_intent": "Remove all data inside parenthesis in string `item`",
      "snippet": "item = re.sub(' \\\\(\\\\w+\\\\)', '', item)",
      "question_id": 19794051
    },
    {
      "intent": "Checking if any elements in one list are in another",
      "rewritten_intent": "check if any elements in one list `list1` are in another list `list2`",
      "snippet": "len(set(list1).intersection(list2)) > 0",
      "question_id": 16138015
    },
    {
      "intent": "convert hex to decimal",
      "rewritten_intent": "convert hex string `s` to decimal",
      "snippet": "i = int(s, 16)",
      "question_id": 9210525
    },
    {
      "intent": "convert hex to decimal",
      "rewritten_intent": "convert hex string \"0xff\" to decimal",
      "snippet": "int('0xff', 16)",
      "question_id": 9210525
    },
    {
      "intent": "convert hex to decimal",
      "rewritten_intent": "convert hex string \"FFFF\" to decimal",
      "snippet": "int('FFFF', 16)",
      "question_id": 9210525
    },
    {
      "intent": "convert hex to decimal",
      "rewritten_intent": "convert hex string '0xdeadbeef' to decimal",
      "snippet": "ast.literal_eval('0xdeadbeef')",
      "question_id": 9210525
    },
    {
      "intent": "convert hex to decimal",
      "rewritten_intent": "convert hex string 'deadbeef' to decimal",
      "snippet": "int('deadbeef', 16)",
      "question_id": 9210525
    },
    {
      "intent": "Replace non-ascii chars from a unicode string in Python",
      "rewritten_intent": "replace non-ascii chars from a unicode string u'm\\xfasica'",
      "snippet": "unicodedata.normalize('NFKD', 'm\\xfasica').encode('ascii', 'ignore')",
      "question_id": 3704731
    },
    {
      "intent": "How to use Unicode characters in a python string",
      "rewritten_intent": "print a character that has unicode value `\\u25b2`",
      "snippet": "print('\\u25b2'.encode('utf-8'))",
      "question_id": 16658068
    },
    {
      "intent": "Creating a dictionary from a string",
      "rewritten_intent": "Create a dictionary from string `e` separated by `-` and `,`",
      "snippet": "dict((k, int(v)) for k, v in (e.split(' - ') for e in s.split(',')))",
      "question_id": 4627981
    },
    {
      "intent": "How to check if all elements in a tuple or list are in another?",
      "rewritten_intent": "check if all elements in a tuple `(1, 6)` are in another `(1, 2, 3, 4, 5)`",
      "snippet": "all(i in (1, 2, 3, 4, 5) for i in (1, 6))",
      "question_id": 34468983
    },
    {
      "intent": "Formatting text to be justified in Python 3.3 with .format() method",
      "rewritten_intent": "right align string `mystring` with a width of 7",
      "snippet": "\"\"\"{:>7s}\"\"\".format(mystring)",
      "question_id": 16159228
    },
    {
      "intent": "Remove all values within one list from another list in python",
      "rewritten_intent": "remove all values within one list `[2, 3, 7]` from another list `a`",
      "snippet": "[x for x in a if x not in [2, 3, 7]]",
      "question_id": 2514961
    },
    {
      "intent": "How to remove all the punctuation in a string? (Python)",
      "rewritten_intent": "remove the punctuation '!', '.', ':' from a string `asking`",
      "snippet": "out = ''.join(c for c in asking if c not in ('!', '.', ':'))",
      "question_id": 16050952
    },
    {
      "intent": "empty a list",
      "rewritten_intent": "empty a list `lst`",
      "snippet": "del lst[:]",
      "question_id": 1400608
    },
    {
      "intent": "empty a list",
      "rewritten_intent": "empty a list `lst`",
      "snippet": "del lst1[:]",
      "question_id": 1400608
    },
    {
      "intent": "empty a list",
      "rewritten_intent": "empty a list `lst`",
      "snippet": "lst[:] = []",
      "question_id": 1400608
    },
    {
      "intent": "empty a list",
      "rewritten_intent": "empty a list `alist`",
      "snippet": "alist[:] = []",
      "question_id": 1400608
    },
    {
      "intent": "Subtracting the current and previous item in a list",
      "rewritten_intent": "create a list containing the subtraction of each item in list `L` from the item prior to it",
      "snippet": "[(y - x) for x, y in zip(L, L[1:])]",
      "question_id": 4029436
    },
    {
      "intent": "Convert a list of characters into a string",
      "rewritten_intent": "convert a list of characters `['a', 'b', 'c', 'd']` into a string",
      "snippet": "\"\"\"\"\"\".join(['a', 'b', 'c', 'd'])",
      "question_id": 4481724
    },
    {
      "intent": "sort a dictionary by key",
      "rewritten_intent": "sort dictionary `d` by key",
      "snippet": "od = collections.OrderedDict(sorted(d.items()))",
      "question_id": 9001509
    },
    {
      "intent": "sort a dictionary by key",
      "rewritten_intent": "sort a dictionary `d` by key",
      "snippet": "OrderedDict(sorted(list(d.items()), key=(lambda t: t[0])))",
      "question_id": 9001509
    },
    {
      "intent": "Python remove anything that is not a letter or number",
      "rewritten_intent": "replace everything that is not an alphabet or a digit with '' in 's'.",
      "snippet": "re.sub('[\\\\W_]+', '', s)",
      "question_id": 6323296
    },
    {
      "intent": "Python Nested List Comprehension with two Lists",
      "rewritten_intent": "create a list of aggregation of each element from list `l2` to all elements of list `l1`",
      "snippet": "[(x + y) for x in l2 for y in l1]",
      "question_id": 16568056
    },
    {
      "intent": "convert string to dict using list comprehension in python",
      "rewritten_intent": "convert string `x'  to dictionary splitted by `=` using list comprehension",
      "snippet": "dict([x.split('=') for x in s.split()])",
      "question_id": 1246444
    },
    {
      "intent": "Remove object from a list of objects in python",
      "rewritten_intent": "remove index 2 element from a list `my_list`",
      "snippet": "my_list.pop(2)",
      "question_id": 9754729
    },
    {
      "intent": "How to delete a character from a string using python?",
      "rewritten_intent": "Delete character \"M\" from a string `s` using python",
      "snippet": "s = s.replace('M', '')",
      "question_id": 3559559
    },
    {
      "intent": "How to delete a character from a string using python?",
      "rewritten_intent": null,
      "snippet": "newstr = oldstr.replace('M', '')",
      "question_id": 3559559
    },
    {
      "intent": "How can I sum the product of two list items using for loop in python?",
      "rewritten_intent": "get the sum of the products of each pair of corresponding elements in lists `a` and `b`",
      "snippet": "sum(x * y for x, y in zip(a, b))",
      "question_id": 41821112
    },
    {
      "intent": "How can I sum the product of two list items using for loop in python?",
      "rewritten_intent": "sum the products of each two elements at the same index of list `a` and list `b`",
      "snippet": "list(x * y for x, y in list(zip(a, b)))",
      "question_id": 41821112
    },
    {
      "intent": "How can I sum the product of two list items using for loop in python?",
      "rewritten_intent": "sum the product of each two items at the same index of list `a` and list `b`",
      "snippet": "sum(i * j for i, j in zip(a, b))",
      "question_id": 41821112
    },
    {
      "intent": "How can I sum the product of two list items using for loop in python?",
      "rewritten_intent": "sum the product of elements of two lists named `a` and `b`",
      "snippet": "sum(x * y for x, y in list(zip(a, b)))",
      "question_id": 41821112
    },
    {
      "intent": "How to add an integer to each element in a list?",
      "rewritten_intent": "Add 1 to each integer value in list `my_list`",
      "snippet": "new_list = [(x + 1) for x in my_list]",
      "question_id": 9304408
    },
    {
      "intent": "Return list of items in list greater than some value",
      "rewritten_intent": "get a list of all items in list `j` with values greater than `5`",
      "snippet": "[x for x in j if x >= 5]",
      "question_id": 4587915
    },
    {
      "intent": "split elements of a list in python",
      "rewritten_intent": "split strings in list `l` on the first occurring tab `\\t` and enter only the first resulting substring in a new list",
      "snippet": "[i.split('\\t', 1)[0] for i in l]",
      "question_id": 6696027
    },
    {
      "intent": "split elements of a list in python",
      "rewritten_intent": "Split each string in list `myList` on the tab character",
      "snippet": "myList = [i.split('\\t')[0] for i in myList]",
      "question_id": 6696027
    },
    {
      "intent": "Summing elements in a list",
      "rewritten_intent": "Sum numbers in a list 'your_list'",
      "snippet": "sum(your_list)",
      "question_id": 11344827
    },
    {
      "intent": "Python: comprehension to compose two dictionaries",
      "rewritten_intent": "Compose keys from dictionary `d1` with respective values in dictionary `d2`",
      "snippet": "result = {k: d2.get(v) for k, v in list(d1.items())}",
      "question_id": 17846545
    },
    {
      "intent": "datetime.datetime.now() + 1",
      "rewritten_intent": "add one day and three hours to the present time from datetime.now()",
      "snippet": "datetime.datetime.now() + datetime.timedelta(days=1, hours=3)",
      "question_id": 6310475
    },
    {
      "intent": "Convert binary string to list of integers using Python",
      "rewritten_intent": null,
      "snippet": "[int(s[i:i + 3], 2) for i in range(0, len(s), 3)]",
      "question_id": 1386811
    },
    {
      "intent": "switching keys and values in a dictionary in python",
      "rewritten_intent": "switch keys and values in a dictionary `my_dict`",
      "snippet": "dict((v, k) for k, v in my_dict.items())",
      "question_id": 8305518
    },
    {
      "intent": "Specific sort a list of numbers separated by dots",
      "rewritten_intent": "sort a list `L` by number after second '.'",
      "snippet": "print(sorted(L, key=lambda x: int(x.split('.')[2])))",
      "question_id": 21361604
    },
    {
      "intent": "How to find a value in a list of python dictionaries?",
      "rewritten_intent": "Check if the value of the key \"name\" is \"Test\" in a list of dictionaries `label`",
      "snippet": "any(d['name'] == 'Test' for d in label)",
      "question_id": 17149561
    },
    {
      "intent": "How can I remove all instances of an element from a list in Python?",
      "rewritten_intent": "remove all instances of [1, 1] from list `a`",
      "snippet": "a[:] = [x for x in a if x != [1, 1]]",
      "question_id": 2186656
    },
    {
      "intent": "How can I remove all instances of an element from a list in Python?",
      "rewritten_intent": "remove all instances of `[1, 1]` from a list `a`",
      "snippet": "[x for x in a if x != [1, 1]]",
      "question_id": 2186656
    },
    {
      "intent": "Convert a list to a dictionary in Python",
      "rewritten_intent": "convert a list 'a' to a dictionary where each even element represents the key to the dictionary, and the following odd element is the value",
      "snippet": "b = {a[i]: a[i + 1] for i in range(0, len(a), 2)}",
      "question_id": 4576115
    },
    {
      "intent": "How to check whether elements appears in the list only once in python?",
      "rewritten_intent": "check whether elements in list `a` appear only once",
      "snippet": "len(set(a)) == len(a)",
      "question_id": 3899782
    },
    {
      "intent": "How to sort a dictionary in python by value when the value is a list and I want to sort it by the first index of that list",
      "rewritten_intent": null,
      "snippet": "sorted(list(data.items()), key=lambda x: x[1][0])",
      "question_id": 42765620
    },
    {
      "intent": "Pythons fastest way of randomising case of a string",
      "rewritten_intent": "randomly switch letters' cases in string `s`",
      "snippet": "\"\"\"\"\"\".join(x.upper() if random.randint(0, 1) else x for x in s)",
      "question_id": 8344905
    },
    {
      "intent": "Replace the single quote (') character from a string",
      "rewritten_intent": "replace single quote character in string \"didn't\" with empty string ''",
      "snippet": "\"\"\"didn't\"\"\".replace(\"'\", '')",
      "question_id": 3151146
    },
    {
      "intent": "remove all whitespace in a string",
      "rewritten_intent": "remove all whitespace in a string `sentence`",
      "snippet": "sentence.replace(' ', '')",
      "question_id": 8270092
    },
    {
      "intent": "remove all whitespace in a string",
      "rewritten_intent": "remove all whitespace in a string `sentence`",
      "snippet": "pattern = re.compile('\\\\s+')\nsentence = re.sub(pattern, '', sentence)",
      "question_id": 8270092
    },
    {
      "intent": "remove all whitespace in a string",
      "rewritten_intent": "remove whitespace in string `sentence` from beginning and end",
      "snippet": "sentence.strip()",
      "question_id": 8270092
    },
    {
      "intent": "remove all whitespace in a string",
      "rewritten_intent": "remove all whitespaces in string `sentence`",
      "snippet": "sentence = re.sub('\\\\s+', '', sentence, flags=re.UNICODE)",
      "question_id": 8270092
    },
    {
      "intent": "remove all whitespace in a string",
      "rewritten_intent": "remove all whitespaces in a string `sentence`",
      "snippet": "sentence = ''.join(sentence.split())",
      "question_id": 8270092
    },
    {
      "intent": "Sum all values of a counter in Python",
      "rewritten_intent": "sum all the values in a counter variable `my_counter`",
      "snippet": "sum(my_counter.values())",
      "question_id": 32511444
    },
    {
      "intent": "Python: define multiple variables of same type?",
      "rewritten_intent": "create list `levels` containing 3 empty dictionaries",
      "snippet": "levels = [{}, {}, {}]",
      "question_id": 4411811
    },
    {
      "intent": "Find the sum of subsets of a list in python",
      "rewritten_intent": "find the sums of length 7 subsets of a list `daily`",
      "snippet": "weekly = [sum(visitors[x:x + 7]) for x in range(0, len(daily), 7)]",
      "question_id": 6133434
    },
    {
      "intent": "Delete an element from a dictionary",
      "rewritten_intent": "Delete an element `key` from a dictionary `d`",
      "snippet": "del d[key]",
      "question_id": 5844672
    },
    {
      "intent": "Delete an element from a dictionary",
      "rewritten_intent": "Delete an element 0 from a dictionary `a`",
      "snippet": "{i: a[i] for i in a if (i != 0)}",
      "question_id": 5844672
    },
    {
      "intent": "Delete an element from a dictionary",
      "rewritten_intent": "Delete an element \"hello\" from a dictionary `lol`",
      "snippet": "lol.pop('hello')",
      "question_id": 5844672
    },
    {
      "intent": "Delete an element from a dictionary",
      "rewritten_intent": "Delete an element with key `key` dictionary `r`",
      "snippet": "del r[key]",
      "question_id": 5844672
    },
    {
      "intent": "How to use map to lowercase strings in a dictionary?",
      "rewritten_intent": "lowercase string values with key 'content' in a list of dictionaries `messages`",
      "snippet": "[{'content': x['content'].lower()} for x in messages]",
      "question_id": 42353686
    },
    {
      "intent": "convert list into string with spaces in python",
      "rewritten_intent": "convert a list `my_list` into string with values separated by spaces",
      "snippet": "\"\"\" \"\"\".join(my_list)",
      "question_id": 12309976
    },
    {
      "intent": "Regex. Match words that contain special characters or 'http://'",
      "rewritten_intent": "replace each occurrence of the pattern '(http://\\\\S+|\\\\S*[^\\\\w\\\\s]\\\\S*)' within `a` with ''",
      "snippet": "re.sub('(http://\\\\S+|\\\\S*[^\\\\w\\\\s]\\\\S*)', '', a)",
      "question_id": 4695143
    },
    {
      "intent": "How to check for palindrome using Python logic",
      "rewritten_intent": "check if string `str` is palindrome",
      "snippet": "str(n) == str(n)[::-1]",
      "question_id": 17331290
    },
    {
      "intent": "How to remove all characters before a specific character in Python?",
      "rewritten_intent": "remove all characters from string `stri` upto character 'I'",
      "snippet": "re.sub('.*I', 'I', stri)",
      "question_id": 30945784
    },
    {
      "intent": "Python parse comma-separated number into int",
      "rewritten_intent": "parse a comma-separated string number '1,000,000' into int",
      "snippet": "int('1,000,000'.replace(',', ''))",
      "question_id": 2953746
    },
    {
      "intent": "What's the best way to aggregate the boolean values of a Python dictionary?",
      "rewritten_intent": "check if all boolean values in a python dictionary `dict` are true",
      "snippet": "all(dict.values())",
      "question_id": 2806611
    },
    {
      "intent": "reverse a list",
      "rewritten_intent": "reverse a list `L`",
      "snippet": "L[::(-1)]",
      "question_id": 3940128
    },
    {
      "intent": "reverse a list",
      "rewritten_intent": "reverse a list `array`",
      "snippet": "reversed(array)",
      "question_id": 3940128
    },
    {
      "intent": "reverse a list",
      "rewritten_intent": "reverse a list `L`",
      "snippet": "L.reverse()",
      "question_id": 3940128
    },
    {
      "intent": "reverse a list",
      "rewritten_intent": "reverse a list `array`",
      "snippet": "list(reversed(array))",
      "question_id": 3940128
    },
    {
      "intent": "How to index nested lists in Python?",
      "rewritten_intent": "get first element of each tuple in list `A`",
      "snippet": "[tup[0] for tup in A]",
      "question_id": 31302904
    },
    {
      "intent": "Replacing characters in a file",
      "rewritten_intent": "replace character 'a' with character 'e' and character 's' with character '3' in file `contents`",
      "snippet": "newcontents = contents.replace('a', 'e').replace('s', '3')",
      "question_id": 10562778
    },
    {
      "intent": "Python - Find the greatest number in a set of numbers",
      "rewritten_intent": "Find the greatest number in set `(1, 2, 3)`",
      "snippet": "print(max(1, 2, 3))",
      "question_id": 3090175
    },
    {
      "intent": "Remove strings from a list that contains numbers in python",
      "rewritten_intent": "From a list of strings `my_list`, remove the values that contains numbers.",
      "snippet": "[x for x in my_list if not any(c.isdigit() for c in x)]",
      "question_id": 16084642
    },
    {
      "intent": "python How do you sort list by occurrence with out removing elements from the list?",
      "rewritten_intent": "sort list `lst` based on each element's number of occurrences",
      "snippet": "sorted(lst, key=lambda x: (-1 * c[x], lst.index(x)))",
      "question_id": 42394627
    },
    {
      "intent": "Find max length of each column in a list of lists",
      "rewritten_intent": "Get the value with the maximum length in each column in array `foo`",
      "snippet": "[max(len(str(x)) for x in line) for line in zip(*foo)]",
      "question_id": 6018916
    },
    {
      "intent": "python: append values to a set",
      "rewritten_intent": "append values `[3, 4]` to a set `a`",
      "snippet": "a.update([3, 4])",
      "question_id": 3392354
    },
    {
      "intent": "Js Date object to python datetime",
      "rewritten_intent": "convert js date object 'Tue, 22 Nov 2011 06:00:00 GMT' to python datetime",
      "snippet": "datetime.strptime('Tue, 22 Nov 2011 06:00:00 GMT', '%a, %d %b %Y %H:%M:%S %Z')",
      "question_id": 8153631
    },
    {
      "intent": "Python: Converting from binary to String",
      "rewritten_intent": "Convert a binary value '1633837924' to string",
      "snippet": "struct.pack('<I', 1633837924)",
      "question_id": 33769531
    },
    {
      "intent": "Inserting a string into a list without getting split into characters",
      "rewritten_intent": "append string `foo` to list `list`",
      "snippet": "list.append('foo')",
      "question_id": 8243188
    },
    {
      "intent": "Inserting a string into a list without getting split into characters",
      "rewritten_intent": "insert string `foo` at position `0` of list `list`",
      "snippet": "list.insert(0, 'foo')",
      "question_id": 8243188
    },
    {
      "intent": "Case insensitive dictionary search with Python",
      "rewritten_intent": "convert keys in dictionary `thedict` into case insensitive",
      "snippet": "theset = set(k.lower() for k in thedict)",
      "question_id": 3296499
    },
    {
      "intent": "How to pad with n characters in Python",
      "rewritten_intent": "pad 'dog' up to a length of 5 characters with 'x'",
      "snippet": "\"\"\"{s:{c}^{n}}\"\"\".format(s='dog', n=5, c='x')",
      "question_id": 4008546
    },
    {
      "intent": "How to check if type of a variable is string?",
      "rewritten_intent": "check if type of variable `s` is a string",
      "snippet": "isinstance(s, str)",
      "question_id": 4843173
    },
    {
      "intent": "How to check if type of a variable is string?",
      "rewritten_intent": "check if type of a variable `s` is string",
      "snippet": "isinstance(s, str)",
      "question_id": 4843173
    },
    {
      "intent": "How do I merge a list of dicts into a single dict?",
      "rewritten_intent": "Convert list of dictionaries `L` into a flat dictionary",
      "snippet": "dict(pair for d in L for pair in list(d.items()))",
      "question_id": 3494906
    },
    {
      "intent": "How do I merge a list of dicts into a single dict?",
      "rewritten_intent": "merge a list of dictionaries in list `L` into a single dict",
      "snippet": "{k: v for d in L for k, v in list(d.items())}",
      "question_id": 3494906
    },
    {
      "intent": "Running Python code contained in a string",
      "rewritten_intent": "run the code contained in string \"print('Hello')\"",
      "snippet": "eval(\"print('Hello')\")",
      "question_id": 1015142
    },
    {
      "intent": "Creating a list of dictionaries in python",
      "rewritten_intent": "creating a list of dictionaries [{'A': 1, 'C': 4, 'B': 2, 'D': 4}, {'A': 1, 'C': 4, 'B': 1, 'D': 5}]",
      "snippet": "[{'A': 1, 'C': 4, 'B': 2, 'D': 4}, {'A': 1, 'C': 4, 'B': 1, 'D': 5}]",
      "question_id": 35883459
    },
    {
      "intent": "Creating a list of dictionaries in python",
      "rewritten_intent": null,
      "snippet": "[{'A': 1, 'C': 4, 'B': 2, 'D': 4}, {'A': 1, 'C': 4, 'B': 1, 'D': 5}]",
      "question_id": 35883459
    },
    {
      "intent": "how to get all possible combination of items from 2-dimensional list in python?",
      "rewritten_intent": "get all possible combination of items from 2-dimensional list `a`",
      "snippet": "list(itertools.product(*a))",
      "question_id": 8249836
    },
    {
      "intent": "Python turning a list into a list of tuples",
      "rewritten_intent": "create list `done` containing permutations of each element in list `[a, b, c, d]` with variable `x` as tuples",
      "snippet": "done = [(el, x) for el in [a, b, c, d]]",
      "question_id": 9962293
    },
    {
      "intent": "Replacing instances of a character in a string",
      "rewritten_intent": "Replace `;` with `:` in a string `line`",
      "snippet": "line = line.replace(';', ':')",
      "question_id": 12723751
    },
    {
      "intent": "Change a string of integers separated by spaces to a list of int",
      "rewritten_intent": "change a string of integers `x` separated by spaces to a list of int",
      "snippet": "x = map(int, x.split())",
      "question_id": 19555472
    },
    {
      "intent": "Change a string of integers separated by spaces to a list of int",
      "rewritten_intent": "convert a string of integers `x` separated by spaces to a list of integers",
      "snippet": "x = [int(i) for i in x.split()]",
      "question_id": 19555472
    },
    {
      "intent": "Python / Remove special character from string",
      "rewritten_intent": null,
      "snippet": "re.sub('[^a-zA-Z0-9-_*.]', '', my_string)",
      "question_id": 25991612
    },
    {
      "intent": "Removing backslashes from a string in Python",
      "rewritten_intent": "replace backslashes in string `result` with empty string ''",
      "snippet": "result = result.replace('\\\\', '')",
      "question_id": 3160752
    },
    {
      "intent": "Removing backslashes from a string in Python",
      "rewritten_intent": "remove backslashes from string `result`",
      "snippet": "result.replace('\\\\', '')",
      "question_id": 3160752
    },
    {
      "intent": "How do I convert datetime to date (in Python)?",
      "rewritten_intent": "convert datetime object to date object in python",
      "snippet": "datetime.datetime.now().date()",
      "question_id": 3743222
    },
    {
      "intent": "How do I convert datetime to date (in Python)?",
      "rewritten_intent": null,
      "snippet": "datetime.datetime.now().date()",
      "question_id": 3743222
    },
    {
      "intent": "How can I split and parse a string in Python?",
      "rewritten_intent": null,
      "snippet": "\"\"\"2.7.0_bf4fda703454\"\"\".split('_')",
      "question_id": 5749195
    },
    {
      "intent": "Python - Move elements in a list of dictionaries to the end of the list",
      "rewritten_intent": "move dictionaries in list `lst` to the end of the list if value of key 'language' in each dictionary is not equal to 'en'",
      "snippet": "sorted(lst, key=lambda x: x['language'] != 'en')",
      "question_id": 42364593
    },
    {
      "intent": "How to check if all values of a dictionary are 0, in Python?",
      "rewritten_intent": "check if all values of a dictionary `your_dict` are zero `0`",
      "snippet": "all(value == 0 for value in list(your_dict.values()))",
      "question_id": 35253971
    },
    {
      "intent": "Python datetime to microtime",
      "rewritten_intent": "Convert a datetime object `dt` to microtime",
      "snippet": "time.mktime(dt.timetuple()) + dt.microsecond / 1000000.0",
      "question_id": 7238226
    },
    {
      "intent": "sort a list of lists by a specific index of the inner list",
      "rewritten_intent": "sort a list of lists `L` by index 2 of the inner list",
      "snippet": "sorted(L, key=itemgetter(2))",
      "question_id": 4174941
    },
    {
      "intent": "sort a list of lists by a specific index of the inner list",
      "rewritten_intent": "sort a list of lists `l` by index 2 of the inner list",
      "snippet": "l.sort(key=(lambda x: x[2]))",
      "question_id": 4174941
    },
    {
      "intent": "sort a list of lists by a specific index",
      "rewritten_intent": "sort list `l` by index 2 of the item",
      "snippet": "sorted(l, key=(lambda x: x[2]))",
      "question_id": 4174941
    },
    {
      "intent": "sort a list of lists by a specific index",
      "rewritten_intent": "sort a list of lists `list_to_sort` by indices 2,0,1 of the inner list",
      "snippet": "sorted_list = sorted(list_to_sort, key=itemgetter(2, 0, 1))",
      "question_id": 4174941
    },
    {
      "intent": "How to account for accent characters for regex in Python?",
      "rewritten_intent": "match a sharp, followed by letters (including accent characters) in string `str1` using a regex",
      "snippet": "hashtags = re.findall('#(\\\\w+)', str1, re.UNICODE)",
      "question_id": 18663644
    },
    {
      "intent": "Get the immediate minimum among a list of numbers in python",
      "rewritten_intent": "get the next value greatest to `2` from a list of numbers `num_list`",
      "snippet": "min([x for x in num_list if x > 2])",
      "question_id": 29471884
    },
    {
      "intent": "How do I sort a list with positives coming before negatives with values sorted respectively?",
      "rewritten_intent": "sort list `lst` with positives coming before negatives with values sorted respectively",
      "snippet": "sorted(lst, key=lambda x: (x < 0, x))",
      "question_id": 40620804
    },
    {
      "intent": "How do I calculate the date six months from the current date",
      "rewritten_intent": "get the date 6 months from today",
      "snippet": "six_months = (date.today() + relativedelta(months=(+ 6)))",
      "question_id": 546321
    },
    {
      "intent": "How do I calculate the date six months from the current date",
      "rewritten_intent": "get the date 1 month from today",
      "snippet": "(date(2010, 12, 31) + relativedelta(months=(+ 1)))",
      "question_id": 546321
    },
    {
      "intent": "How do I calculate the date six months from the current date",
      "rewritten_intent": "get the date 2 months from today",
      "snippet": "(date(2010, 12, 31) + relativedelta(months=(+ 2)))",
      "question_id": 546321
    },
    {
      "intent": "calculate the date six months from the current date",
      "rewritten_intent": "calculate the date six months from the current date",
      "snippet": "print((datetime.date.today() + datetime.timedelta(((6 * 365) / 12))).isoformat())",
      "question_id": 546321
    },
    {
      "intent": "Finding The Biggest Key In A Python Dictionary",
      "rewritten_intent": "get a list of keys of dictionary `things` sorted by the value of nested dictionary key 'weight'",
      "snippet": "sorted(list(things.keys()), key=lambda x: things[x]['weight'], reverse=True)",
      "question_id": 42352887
    },
    {
      "intent": "python list comprehension with multiple 'if's",
      "rewritten_intent": "list comprehension that produces integers between 11 and 19",
      "snippet": "[i for i in range(100) if i > 10 if i < 20]",
      "question_id": 15248272
    },
    {
      "intent": "Removing letters from a list of both numbers and letters",
      "rewritten_intent": "Get only digits from a string `strs`",
      "snippet": "\"\"\"\"\"\".join([c for c in strs if c.isdigit()])",
      "question_id": 18116235
    },
    {
      "intent": "splitting a string based on tab in the file",
      "rewritten_intent": "split a string `yas` based on tab '\\t'",
      "snippet": "re.split('\\\\t+', yas.rstrip('\\t'))",
      "question_id": 17038426
    },
    {
      "intent": "remove (chomp) a newline",
      "rewritten_intent": "remove trailing newline in string \"test string\\n\"",
      "snippet": "'test string\\n'.rstrip()",
      "question_id": 275018
    },
    {
      "intent": "remove (chomp) a newline",
      "rewritten_intent": "remove trailing newline in string 'test string \\n\\n'",
      "snippet": "'test string \\n\\n'.rstrip('\\n')",
      "question_id": 275018
    },
    {
      "intent": "remove (chomp) a newline",
      "rewritten_intent": "remove newline in string `s`",
      "snippet": "s.strip()",
      "question_id": 275018
    },
    {
      "intent": "remove (chomp) a newline",
      "rewritten_intent": "remove newline in string `s` on the right side",
      "snippet": "s.rstrip()",
      "question_id": 275018
    },
    {
      "intent": "remove (chomp) a newline",
      "rewritten_intent": "remove newline in string `s` on the left side",
      "snippet": "s.lstrip()",
      "question_id": 275018
    },
    {
      "intent": "remove (chomp) a newline",
      "rewritten_intent": "remove newline in string 'Mac EOL\\r'",
      "snippet": "'Mac EOL\\r'.rstrip('\\r\\n')",
      "question_id": 275018
    },
    {
      "intent": "remove (chomp) a newline",
      "rewritten_intent": "remove newline in string 'Windows EOL\\r\\n' on the right side",
      "snippet": "'Windows EOL\\r\\n'.rstrip('\\r\\n')",
      "question_id": 275018
    },
    {
      "intent": "remove (chomp) a newline",
      "rewritten_intent": "remove newline in string 'Unix EOL\\n' on the right side",
      "snippet": "'Unix EOL\\n'.rstrip('\\r\\n')",
      "question_id": 275018
    },
    {
      "intent": "remove (chomp) a newline",
      "rewritten_intent": "remove newline in string \"Hello\\n\\n\\n\" on the right side",
      "snippet": "'Hello\\n\\n\\n'.rstrip('\\n')",
      "question_id": 275018
    },
    {
      "intent": "Python - split sentence after words but with maximum of n characters in result",
      "rewritten_intent": "split string `text` into chunks of 16 characters each",
      "snippet": "re.findall('.{,16}\\\\b', text)",
      "question_id": 18551752
    },
    {
      "intent": "NumPy List Comprehension Syntax",
      "rewritten_intent": "Get a list comprehension in list of lists `X`",
      "snippet": "[[X[i][j] for j in range(len(X[i]))] for i in range(len(X))]",
      "question_id": 21360028
    },
    {
      "intent": "Convert unicode string to byte string",
      "rewritten_intent": "convert unicode string '\\xd0\\xbc\\xd0\\xb0\\xd1\\x80\\xd0\\xba\\xd0\\xb0' to byte string",
      "snippet": "'\\xd0\\xbc\\xd0\\xb0\\xd1\\x80\\xd0\\xba\\xd0\\xb0'.encode('latin-1')",
      "question_id": 11174790
    },
    {
      "intent": "Converting integer to string",
      "rewritten_intent": "convert `i` to string",
      "snippet": "str(i)",
      "question_id": 961632
    },
    {
      "intent": "Converting integer to string",
      "rewritten_intent": "convert `a` to string",
      "snippet": "a.__str__()",
      "question_id": 961632
    },
    {
      "intent": "Converting integer to string",
      "rewritten_intent": "convert `a` to string",
      "snippet": "str(a)",
      "question_id": 961632
    },
    {
      "intent": "Method to sort a list of lists?",
      "rewritten_intent": "sort list of lists `L` by the second item in each list",
      "snippet": "L.sort(key=operator.itemgetter(1))",
      "question_id": 5201191
    },
    {
      "intent": "How do I add space between two variables after a print in Python",
      "rewritten_intent": "Print variable `count` and variable `conv` with space string '    ' in between",
      "snippet": "print(str(count) + '    ' + str(conv))",
      "question_id": 9969684
    },
    {
      "intent": "Python sum of ASCII values of all characters in a string",
      "rewritten_intent": "python sum of ascii values of all characters in a string `string`",
      "snippet": "sum(map(ord, string))",
      "question_id": 12492137
    },
    {
      "intent": "How to apply itertools.product to elements of a list of lists?",
      "rewritten_intent": "apply itertools.product to elements of a list of lists `arrays`",
      "snippet": "list(itertools.product(*arrays))",
      "question_id": 3034014
    },
    {
      "intent": "print number with commas as thousands separators",
      "rewritten_intent": "print number `value` as thousands separators",
      "snippet": "'{:,}'.format(value)",
      "question_id": 1823058
    },
    {
      "intent": "Accessing a value in a tuple that is in a list",
      "rewritten_intent": "get the value at index 1 for each tuple in the list of tuples `L`",
      "snippet": "[x[1] for x in L]",
      "question_id": 4800811
    },
    {
      "intent": "splitting unicode string into words",
      "rewritten_intent": "split unicode string \"\u0440\u0430\u0437 \u0434\u0432\u0430 \u0442\u0440\u0438\" into words",
      "snippet": "'\\u0440\\u0430\\u0437 \\u0434\\u0432\\u0430 \\u0442\\u0440\\u0438'.split()",
      "question_id": 7286879
    },
    {
      "intent": "Python - Choose a dictionary in list which key is closer to a global value",
      "rewritten_intent": "get a dictionary in list `dicts` which key 'ratio' is closer to a global value 1.77672955975",
      "snippet": "min(dicts, key=lambda x: (abs(1.77672955975 - x['ratio']), -x['pixels']))",
      "question_id": 42442428
    },
    {
      "intent": "Use of findall and parenthesis in Python",
      "rewritten_intent": "Find all words containing letters between A and Z in string `formula`",
      "snippet": "re.findall('\\\\b[A-Z]', formula)",
      "question_id": 13840883
    },
    {
      "intent": "How to define two-dimensional array in python",
      "rewritten_intent": "create a list `matrix` containing 5 lists, each of 5 items  all set to 0",
      "snippet": "matrix = [([0] * 5) for i in range(5)]",
      "question_id": 6667201
    },
    {
      "intent": "Getting today's date in YYYY-MM-DD in Python?",
      "rewritten_intent": "Getting today's date in YYYY-MM-DD",
      "snippet": "datetime.datetime.today().strftime('%Y-%m-%d')",
      "question_id": 32490629
    },
    {
      "intent": "python sorting dictionary by length of values",
      "rewritten_intent": "sort a dictionary `d` by length of its values and print as string",
      "snippet": "print(' '.join(sorted(d, key=lambda k: len(d[k]), reverse=True)))",
      "question_id": 16868457
    },
    {
      "intent": "convert list of tuples to multiple lists in Python",
      "rewritten_intent": "convert tuple elements in list `[(1,2),(3,4),(5,6),]` into lists",
      "snippet": "map(list, zip(*[(1, 2), (3, 4), (5, 6)]))",
      "question_id": 8081545
    },
    {
      "intent": "convert list of tuples to multiple lists in Python",
      "rewritten_intent": null,
      "snippet": "map(list, zip(*[(1, 2), (3, 4), (5, 6)]))",
      "question_id": 8081545
    },
    {
      "intent": "convert list of tuples to multiple lists in Python",
      "rewritten_intent": null,
      "snippet": "zip(*[(1, 2), (3, 4), (5, 6)])",
      "question_id": 8081545
    },
    {
      "intent": "Create a list of tuples with adjacent list elements if a condition is true",
      "rewritten_intent": "create a list of tuples which contains number 9 and the number before it, for each occurrence of 9 in the list 'myList'",
      "snippet": "[(x, y) for x, y in zip(myList, myList[1:]) if y == 9]",
      "question_id": 38251245
    },
    {
      "intent": "Efficient way to convert a list to dictionary",
      "rewritten_intent": "Convert a list `['A:1', 'B:2', 'C:3', 'D:4']` to dictionary",
      "snippet": "dict(map(lambda s: s.split(':'), ['A:1', 'B:2', 'C:3', 'D:4']))",
      "question_id": 16374540
    },
    {
      "intent": "How can I check if a string contains ANY letters from the alphabet?",
      "rewritten_intent": "check if string `the_string` contains any upper or lower-case ASCII letters",
      "snippet": "re.search('[a-zA-Z]', the_string)",
      "question_id": 9072844
    },
    {
      "intent": "Removing all non-numeric characters from string in Python",
      "rewritten_intent": "remove all non-numeric characters from string `sdkjh987978asd098as0980a98sd `",
      "snippet": "re.sub('[^0-9]', '', 'sdkjh987978asd098as0980a98sd')",
      "question_id": 1249388
    },
    {
      "intent": "List comprehension with if statement",
      "rewritten_intent": "get items from list `a` that don't appear in list `b`",
      "snippet": "[y for y in a if y not in b]",
      "question_id": 15474933
    },
    {
      "intent": "How to unzip a list of tuples into individual lists?",
      "rewritten_intent": "Unzip a list of tuples `l` into a list of lists",
      "snippet": "zip(*l)",
      "question_id": 12974474
    },
    {
      "intent": "How do I combine two lists into a dictionary in Python?",
      "rewritten_intent": "combine two lists `[1, 2, 3, 4]` and `['a', 'b', 'c', 'd']` into a dictionary",
      "snippet": "dict(zip([1, 2, 3, 4], ['a', 'b', 'c', 'd']))",
      "question_id": 7271385
    },
    {
      "intent": "How do I combine two lists into a dictionary in Python?",
      "rewritten_intent": "combine two lists `[1, 2, 3, 4]` and `['a', 'b', 'c', 'd']` into a dictionary",
      "snippet": "dict(zip([1, 2, 3, 4], ['a', 'b', 'c', 'd']))",
      "question_id": 7271385
    },
    {
      "intent": "How to remove ^M from a text file and replace it with the next line",
      "rewritten_intent": "replace carriage return in string `somestring` with empty string ''",
      "snippet": "somestring.replace('\\\\r', '')",
      "question_id": 11755208
    },
    {
      "intent": "Converting string into datetime",
      "rewritten_intent": "parse string \"Jun 1 2005  1:33PM\" into datetime by format \"%b %d %Y %I:%M%p\"",
      "snippet": "datetime.strptime('Jun 1 2005  1:33PM', '%b %d %Y %I:%M%p')",
      "question_id": 466345
    },
    {
      "intent": "Python - Remove dictionary from list if key is equal to value",
      "rewritten_intent": "remove dictionary from list `a` if the value associated with its key 'link' is in list `b`",
      "snippet": "a = [x for x in a if x['link'] not in b]",
      "question_id": 42260840
    },
    {
      "intent": "Python - Create list with numbers between 2 values?",
      "rewritten_intent": "create a list of integers between 2 values `11` and `17`",
      "snippet": "list(range(11, 17))",
      "question_id": 18265935
    },
    {
      "intent": "Sorting or Finding Max Value by the second element in a nested list. Python",
      "rewritten_intent": "Find the list in a list of lists `alkaline_earth_values` with the max value of the second element.",
      "snippet": "max(alkaline_earth_values, key=lambda x: x[1])",
      "question_id": 4800419
    },
    {
      "intent": "How to remove leading and trailing zeros in a string? Python",
      "rewritten_intent": "remove leading and trailing zeros in the string 'your_Strip'",
      "snippet": "your_string.strip('0')",
      "question_id": 13142347
    },
    {
      "intent": "Generating all unique pair permutations",
      "rewritten_intent": "generate a list of all unique pairs of integers in `range(9)`",
      "snippet": "list(permutations(list(range(9)), 2))",
      "question_id": 14169122
    },
    {
      "intent": "Python regular expression matching a multiline block of text",
      "rewritten_intent": "create a regular expression that matches the pattern '^(.+)(?:\\\\n|\\\\r\\\\n?)((?:(?:\\\\n|\\\\r\\\\n?).+)+)' over multiple lines of text",
      "snippet": "re.compile('^(.+)(?:\\\\n|\\\\r\\\\n?)((?:(?:\\\\n|\\\\r\\\\n?).+)+)', re.MULTILINE)",
      "question_id": 587345
    },
    {
      "intent": "Python regular expression matching a multiline block of text",
      "rewritten_intent": "regular expression \"^(.+)\\\\n((?:\\\\n.+)+)\" matching a multiline block of text",
      "snippet": "re.compile('^(.+)\\\\n((?:\\\\n.+)+)', re.MULTILINE)",
      "question_id": 587345
    },
    {
      "intent": "Sort a multidimensional list by a variable number of keys",
      "rewritten_intent": "sort a multidimensional list `a` by second and third column",
      "snippet": "a.sort(key=operator.itemgetter(2, 3))",
      "question_id": 1683775
    },
    {
      "intent": "Add another tuple to a tuple",
      "rewritten_intent": "Add a tuple with value `another_choice` to a tuple `my_choices`",
      "snippet": "final_choices = ((another_choice,) + my_choices)",
      "question_id": 3523048
    },
    {
      "intent": "Add another tuple to a tuple",
      "rewritten_intent": "Add a tuple with value `another_choice` to a tuple `my_choices`",
      "snippet": "final_choices = ((another_choice,) + my_choices)",
      "question_id": 3523048
    },
    {
      "intent": "split string on a number of different characters",
      "rewritten_intent": "split string 'a b.c' on space \" \" and dot character \".\"",
      "snippet": "re.split('[ .]', 'a b.c')",
      "question_id": 373459
    },
    {
      "intent": "What's the best way to generate random strings of a specific length in Python?",
      "rewritten_intent": "generate random upper-case ascii string of 12 characters length",
      "snippet": "print(''.join(choice(ascii_uppercase) for i in range(12)))",
      "question_id": 18319101
    },
    {
      "intent": "How to merge the elements in a list sequentially in python",
      "rewritten_intent": "merge the elements in a list `lst` sequentially",
      "snippet": "[''.join(seq) for seq in zip(lst, lst[1:])]",
      "question_id": 39646401
    },
    {
      "intent": "python: sort a list of lists by an item in the sublist",
      "rewritten_intent": "Sort list `li` in descending order based on the second element of each list inside list`li`",
      "snippet": "sorted(li, key=operator.itemgetter(1), reverse=True)",
      "question_id": 18142090
    },
    {
      "intent": "Regex punctuation split [Python]",
      "rewritten_intent": "split string 'Words, words, words.' on punctuation",
      "snippet": "re.split('\\\\W+', 'Words, words, words.')",
      "question_id": 19894478
    },
    {
      "intent": "Limit the number of sentences in a string",
      "rewritten_intent": "Extract first two substrings in string `phrase` that end in `.`, `?` or `!`",
      "snippet": "re.match('(.*?[.?!](?:\\\\s+.*?[.?!]){0,1})', phrase).group(1)",
      "question_id": 3329386
    },
    {
      "intent": "Split string into strings of repeating elements",
      "rewritten_intent": "split string `s` into strings of repeating elements",
      "snippet": "print([a for a, b in re.findall('((\\\\w)\\\\2*)', s)])",
      "question_id": 9505526
    },
    {
      "intent": "How does this function to remove duplicate characters from a string in python work?",
      "rewritten_intent": "Create new string with unique characters from `s` seperated by ' '",
      "snippet": "print(' '.join(OrderedDict.fromkeys(s)))",
      "question_id": 29360607
    },
    {
      "intent": "How does this function to remove duplicate characters from a string in python work?",
      "rewritten_intent": "create a set from string `s` to remove duplicate characters",
      "snippet": "print(' '.join(set(s)))",
      "question_id": 29360607
    },
    {
      "intent": "How to find the count of a word in a string?",
      "rewritten_intent": "find the count of a word 'Hello' in a string `input_string`",
      "snippet": "input_string.count('Hello')",
      "question_id": 11300383
    },
    {
      "intent": "Python: reduce (list of strings) -> string",
      "rewritten_intent": "reduce the first element of list of strings `data` to a string, separated by '.'",
      "snippet": "print('.'.join([item[0] for item in data]))",
      "question_id": 27436748
    },
    {
      "intent": "list of ints into a list of tuples python",
      "rewritten_intent": "convert a flat list into a list of tuples of every two items in the list, in order",
      "snippet": "print(zip(my_list[0::2], my_list[1::2]))",
      "question_id": 15852295
    },
    {
      "intent": "list of ints into a list of tuples python",
      "rewritten_intent": "group a list of ints into a list of tuples of each 2 elements",
      "snippet": "my_new_list = zip(my_list[0::2], my_list[1::2])",
      "question_id": 15852295
    },
    {
      "intent": "Python datetime to string without microsecond component",
      "rewritten_intent": "Formate current date and time to a string using pattern '%Y-%m-%d %H:%M:%S'",
      "snippet": "datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')",
      "question_id": 7999935
    },
    {
      "intent": "How to retrieve only arabic texts from a string using regular expression?",
      "rewritten_intent": "retrieve arabic texts from string `my_string`",
      "snippet": "print(re.findall('[\\\\u0600-\\\\u06FF]+', my_string))",
      "question_id": 36661837
    },
    {
      "intent": "Accessing elements of python dictionary",
      "rewritten_intent": "access value associated with key 'American' of key 'Apple' from dictionary `dict`",
      "snippet": "dict['Apple']['American']",
      "question_id": 5404665
    },
    {
      "intent": "How do I insert a list at the front of another list?",
      "rewritten_intent": "insert a list `k` at the front of list `a`",
      "snippet": "a.insert(0, k)",
      "question_id": 8785554
    },
    {
      "intent": "How do I insert a list at the front of another list?",
      "rewritten_intent": "insert elements of list `k` into list `a` at position `n`",
      "snippet": "a = a[:n] + k + a[n:]",
      "question_id": 8785554
    },
    {
      "intent": "Removing one list from another",
      "rewritten_intent": "remove elements in list `b` from list `a`",
      "snippet": "[x for x in a if x not in b]",
      "question_id": 9053260
    },
    {
      "intent": "How do I transform a multi-level list into a list of strings in Python?",
      "rewritten_intent": "join elements of each tuple in list `a` into one string",
      "snippet": "[''.join(x) for x in a]",
      "question_id": 35015693
    },
    {
      "intent": "How do I transform a multi-level list into a list of strings in Python?",
      "rewritten_intent": "join items of each tuple in list of tuples `a` into a list of strings",
      "snippet": "list(map(''.join, a))",
      "question_id": 35015693
    },
    {
      "intent": "Matching blank lines with regular expressions",
      "rewritten_intent": "match blank lines in `s` with regular expressions",
      "snippet": "re.split('\\n\\\\s*\\n', s)",
      "question_id": 1197600
    },
    {
      "intent": "Merging items in a list - Python",
      "rewritten_intent": "merge a list of integers `[1, 2, 3, 4, 5]` into a single integer",
      "snippet": "from functools import reduce\nreduce(lambda x, y: 10 * x + y, [1, 2, 3, 4, 5])",
      "question_id": 4299741
    },
    {
      "intent": "Convert float to comma-separated string",
      "rewritten_intent": "Convert float 24322.34 to comma-separated string",
      "snippet": "\"\"\"{0:,.2f}\"\"\".format(24322.34)",
      "question_id": 10677350
    },
    {
      "intent": "How to round integers in python",
      "rewritten_intent": "round 1123.456789 to be an integer",
      "snippet": "print(round(1123.456789, -1))",
      "question_id": 3348825
    },
    {
      "intent": "Sorting list based on values from another list?",
      "rewritten_intent": "sort list `X` based on values from another list `Y`",
      "snippet": "[x for y, x in sorted(zip(Y, X))]",
      "question_id": 6618515
    },
    {
      "intent": "Sorting list based on values from another list?",
      "rewritten_intent": "sorting list 'X' based on values from another list 'Y'",
      "snippet": "[x for y, x in sorted(zip(Y, X))]",
      "question_id": 6618515
    },
    {
      "intent": "How to get week number in Python?",
      "rewritten_intent": "get equivalent week number from a date `2010/6/16` using  isocalendar",
      "snippet": "datetime.date(2010, 6, 16).isocalendar()[1]",
      "question_id": 2600775
    },
    {
      "intent": "convert string to lowercase",
      "rewritten_intent": "convert string `s` to lowercase",
      "snippet": "s.lower()",
      "question_id": 6797984
    },
    {
      "intent": "Output first 100 characters in a string",
      "rewritten_intent": "output first 100 characters in a string `my_string`",
      "snippet": "print(my_string[0:100])",
      "question_id": 3486384
    },
    {
      "intent": "Python - How to calculate equal parts of two dictionaries?",
      "rewritten_intent": "get set intersection between dictionaries `d1` and `d2`",
      "snippet": "dict((x, set(y) & set(d1.get(x, ()))) for x, y in d2.items())",
      "question_id": 638360
    },
    {
      "intent": "syntax for creating a dictionary into another dictionary in python",
      "rewritten_intent": "create a dictionary `{'spam': 5, 'ham': 6}` into another dictionary `d` field 'dict3'",
      "snippet": "d['dict3'] = {'spam': 5, 'ham': 6}",
      "question_id": 3817529
    },
    {
      "intent": "How to merge two Python dictionaries in a single expression?",
      "rewritten_intent": "merge dictionaries form array `dicts` in a single expression",
      "snippet": "dict((k, v) for d in dicts for k, v in list(d.items()))",
      "question_id": 38987
    },
    {
      "intent": "Counting the number of True Booleans in a Python List",
      "rewritten_intent": "counting the number of true booleans in a python list `[True, True, False, False, False, True]`",
      "snippet": "sum([True, True, False, False, False, True])",
      "question_id": 12765833
    },
    {
      "intent": "python string format() with dict with integer keys",
      "rewritten_intent": "format string with dict `{'5': 'you'}` with integer keys",
      "snippet": "'hello there %(5)s' % {'5': 'you'}",
      "question_id": 20677660
    },
    {
      "intent": "Python - converting a string of numbers into a list of int",
      "rewritten_intent": "Convert a string of numbers `example_string` separated by `,` into a list of integers",
      "snippet": "map(int, example_string.split(','))",
      "question_id": 19334374
    },
    {
      "intent": "Python - converting a string of numbers into a list of int",
      "rewritten_intent": "Convert a string of numbers 'example_string' separated by comma into a list of numbers",
      "snippet": "[int(s) for s in example_string.split(',')]",
      "question_id": 19334374
    },
    {
      "intent": "Python list of tuples to list of int",
      "rewritten_intent": "Flatten list `x`",
      "snippet": "x = [i[0] for i in x]",
      "question_id": 15096021
    },
    {
      "intent": "Python list of tuples to list of int",
      "rewritten_intent": "convert list `x` into a flat list",
      "snippet": "y = map(operator.itemgetter(0), x)",
      "question_id": 15096021
    },
    {
      "intent": "Python list of tuples to list of int",
      "rewritten_intent": "get a list `y` of the first element of every tuple in list `x`",
      "snippet": "y = [i[0] for i in x]",
      "question_id": 15096021
    },
    {
      "intent": "How do I extract all the values of a specific key from a list of dictionaries?",
      "rewritten_intent": "extract all the values of a specific key named 'values' from a list of dictionaries",
      "snippet": "results = [item['value'] for item in test_data]",
      "question_id": 25148611
    },
    {
      "intent": "ISO Time (ISO 8601) in Python",
      "rewritten_intent": "get current datetime in ISO format",
      "snippet": "datetime.datetime.now().isoformat()",
      "question_id": 2150739
    },
    {
      "intent": "ISO Time (ISO 8601) in Python",
      "rewritten_intent": "get UTC datetime in ISO format",
      "snippet": "datetime.datetime.utcnow().isoformat()",
      "question_id": 2150739
    },
    {
      "intent": "How to search a list of tuples in Python",
      "rewritten_intent": "get the indices of tuples in list of tuples `L` where the first value is 53",
      "snippet": "[i for i, v in enumerate(L) if v[0] == 53]",
      "question_id": 2917372
    },
    {
      "intent": "convert a string of bytes into an int (python)",
      "rewritten_intent": "convert string of bytes `y\\xcc\\xa6\\xbb` into an int",
      "snippet": "struct.unpack('<L', 'y\\xcc\\xa6\\xbb')[0]",
      "question_id": 444591
    },
    {
      "intent": "what's a good way to combinate through a set?",
      "rewritten_intent": "create a list with permutations of string 'abcd'",
      "snippet": "list(powerset('abcd'))",
      "question_id": 1482308
    },
    {
      "intent": "Converting from a string to boolean in Python?",
      "rewritten_intent": "Convert string to boolean from defined set of strings",
      "snippet": "s in ['true', '1', 't', 'y', 'yes', 'yeah', 'yup', 'certainly', 'uh-huh']",
      "question_id": 715417
    },
    {
      "intent": "Counting array elements in Python",
      "rewritten_intent": "count the number of elements in array `myArray`",
      "snippet": "len(myArray)",
      "question_id": 187455
    },
    {
      "intent": "How do I use a regular expression to match a name?",
      "rewritten_intent": "Match regex '[a-zA-Z][\\\\w-]*\\\\Z' on string 'A\\n'",
      "snippet": "re.match('[a-zA-Z][\\\\w-]*\\\\Z', 'A\\n')",
      "question_id": 2317134
    },
    {
      "intent": "How do I use a regular expression to match a name?",
      "rewritten_intent": "match regex '[a-zA-Z][\\\\w-]*$' on string '!A_B'",
      "snippet": "re.match('[a-zA-Z][\\\\w-]*$', '!A_B')",
      "question_id": 2317134
    },
    {
      "intent": "Convert hex string to int",
      "rewritten_intent": "Convert hex string \"deadbeef\" to integer",
      "snippet": "int('deadbeef', 16)",
      "question_id": 209513
    },
    {
      "intent": "Convert hex string to int",
      "rewritten_intent": "Convert hex string \"a\" to integer",
      "snippet": "int('a', 16)",
      "question_id": 209513
    },
    {
      "intent": "Convert hex string to int",
      "rewritten_intent": "Convert hex string \"0xa\" to integer",
      "snippet": "int('0xa', 16)",
      "question_id": 209513
    },
    {
      "intent": "Convert hex string to int",
      "rewritten_intent": "Convert hex string `s` to integer",
      "snippet": "int(s, 16)",
      "question_id": 209513
    },
    {
      "intent": "Convert hex string to int",
      "rewritten_intent": "Convert hex string `hexString` to int",
      "snippet": "int(hexString, 16)",
      "question_id": 209513
    },
    {
      "intent": "How to print variables without spaces between values",
      "rewritten_intent": "print variable `value ` without spaces",
      "snippet": "print('Value is \"' + str(value) + '\"')",
      "question_id": 28669459
    },
    {
      "intent": "How to print variables without spaces between values",
      "rewritten_intent": "Print a string `value` with string formatting",
      "snippet": "print('Value is \"{}\"'.format(value))",
      "question_id": 28669459
    },
    {
      "intent": "Slicing a multidimensional list",
      "rewritten_intent": "Get only first element in each of the innermost of the multidimensional list `listD`",
      "snippet": "[[[x[0]] for x in listD[i]] for i in range(len(listD))]",
      "question_id": 40852575
    },
    {
      "intent": "Sort a string in lexicographic order python",
      "rewritten_intent": "Sort a string `s` in lexicographic order",
      "snippet": "sorted(s, key=str.upper)",
      "question_id": 7371935
    },
    {
      "intent": "Sort a string in lexicographic order python",
      "rewritten_intent": "sort string `s` in lexicographic order",
      "snippet": "sorted(sorted(s), key=str.upper)",
      "question_id": 7371935
    },
    {
      "intent": "Sort a string in lexicographic order python",
      "rewritten_intent": "get a sorted list of the characters of string `s` in lexicographic order, with lowercase letters first",
      "snippet": "sorted(s, key=str.lower)",
      "question_id": 7371935
    },
    {
      "intent": "get keys correspond to a value in dictionary",
      "rewritten_intent": "Reverse key-value pairs in a dictionary `map`",
      "snippet": "dict((v, k) for k, v in map.items())",
      "question_id": 8650415
    },
    {
      "intent": "What is the easiest way to convert list with str into list with int?",
      "rewritten_intent": "convert list of strings `str_list` into list of integers",
      "snippet": "[int(i) for i in str_list]",
      "question_id": 2424412
    },
    {
      "intent": "What is the easiest way to convert list with str into list with int?",
      "rewritten_intent": "convert a list with string `['1', '2', '3']` into list with integers",
      "snippet": "map(int, ['1', '2', '3'])",
      "question_id": 2424412
    },
    {
      "intent": "What is the easiest way to convert list with str into list with int?",
      "rewritten_intent": "convert list with str into list with int",
      "snippet": "list(map(int, ['1', '2', '3']))",
      "question_id": 2424412
    },
    {
      "intent": "remove a substring from the end of a string",
      "rewritten_intent": "remove a substring \".com\" from the end of string `url`",
      "snippet": "if url.endswith('.com'):\n    url = url[:(-4)]",
      "question_id": 1038824
    },
    {
      "intent": "remove a substring from the end of a string",
      "rewritten_intent": "remove a substring \".com\" from the end of string `url`",
      "snippet": "url = re.sub('\\\\.com$', '', url)",
      "question_id": 1038824
    },
    {
      "intent": "remove a substring from the end of a string",
      "rewritten_intent": "remove a substring \".com\" from the end of string `url`",
      "snippet": "print(url.replace('.com', ''))",
      "question_id": 1038824
    },
    {
      "intent": "remove a substring from the end of a string",
      "rewritten_intent": "remove a substring `suffix` from the end of string `text`",
      "snippet": "if (not text.endswith(suffix)):\n    return text\nreturn text[:(len(text) - len(suffix))]",
      "question_id": 1038824
    },
    {
      "intent": "Python - print tuple elements with no brackets",
      "rewritten_intent": "print each first value from a list of tuples `mytuple` with string formatting",
      "snippet": "print(', ,'.join([str(i[0]) for i in mytuple]))",
      "question_id": 19112735
    },
    {
      "intent": "Clamping floating numbers in Python?",
      "rewritten_intent": "clamping floating number `my_value` to be between `min_value` and `max_value`",
      "snippet": "max(min(my_value, max_value), min_value)",
      "question_id": 9775731
    },
    {
      "intent": "Splitting a string into words and punctuation",
      "rewritten_intent": "split a unicode string `text` into a list of words and punctuation characters with a regex",
      "snippet": "re.findall('\\\\w+|[^\\\\w\\\\s]', text, re.UNICODE)",
      "question_id": 367155
    },
    {
      "intent": "Python - find digits in a string",
      "rewritten_intent": "get digits in string `my_string`",
      "snippet": "\"\"\"\"\"\".join(c for c in my_string if c.isdigit())",
      "question_id": 12005558
    },
    {
      "intent": "python split string based on regular expression",
      "rewritten_intent": "split string `str1` on one or more spaces with a regular expression",
      "snippet": "re.split(' +', str1)",
      "question_id": 10974932
    },
    {
      "intent": "python split string based on regular expression",
      "rewritten_intent": null,
      "snippet": "re.findall('\\\\S+', str1)",
      "question_id": 10974932
    },
    {
      "intent": "Convert generator object to a dictionary",
      "rewritten_intent": "convert generator object to a dictionary",
      "snippet": "{i: (i * 2) for i in range(10)}",
      "question_id": 17815945
    },
    {
      "intent": "Convert generator object to a dictionary",
      "rewritten_intent": "convert generator object to a dictionary",
      "snippet": "dict((i, i * 2) for i in range(10))",
      "question_id": 17815945
    },
    {
      "intent": "Python Convert String Literal to Float",
      "rewritten_intent": "split string `s` into float values and write sum to `total`",
      "snippet": "total = sum(float(item) for item in s.split(','))",
      "question_id": 21212706
    },
    {
      "intent": "Python ASCII to binary",
      "rewritten_intent": "Convert ascii value 'P' to binary",
      "snippet": "bin(ord('P'))",
      "question_id": 4523551
    },
    {
      "intent": "Get a string after a specific substring",
      "rewritten_intent": "print a string after a specific substring ', ' in string `my_string `",
      "snippet": "print(my_string.split(', ', 1)[1])",
      "question_id": 12572362
    },
    {
      "intent": "Python RegEx using re.sub with multiple patterns",
      "rewritten_intent": "remove colon character surrounded by vowels letters in string `word`",
      "snippet": "word = re.sub('([aeiou]):(([aeiou][^aeiou]*){3})$', '\\\\1\\\\2', word)",
      "question_id": 33724111
    },
    {
      "intent": "Parsing a tweet to extract hashtags into an array in Python",
      "rewritten_intent": "pars a string 'http://example.org/#comments' to extract hashtags into an array",
      "snippet": "re.findall('#(\\\\w+)', 'http://example.org/#comments')",
      "question_id": 2527892
    },
    {
      "intent": "Python - Fastest way to check if a string contains specific characters in any of the items in a list",
      "rewritten_intent": "do a boolean check if a string `lestring` contains any of the items in list `lelist`",
      "snippet": "any(e in lestring for e in lelist)",
      "question_id": 14411633
    },
    {
      "intent": "Get the number of all keys in a dictionary of dictionaries in Python",
      "rewritten_intent": "get the number of all keys in the nested dictionary `dict_list`",
      "snippet": "len(dict_test) + sum(len(v) for v in dict_test.values())",
      "question_id": 35427814
    },
    {
      "intent": "Python convert decimal to hex",
      "rewritten_intent": "return the conversion of decimal `d` to hex without the '0x' prefix",
      "snippet": "hex(d).split('x')[1]",
      "question_id": 5796238
    },
    {
      "intent": "converting integer to list in python",
      "rewritten_intent": "create a list containing digits of number 123 as its elements",
      "snippet": "list(str(123))",
      "question_id": 13905936
    },
    {
      "intent": "converting integer to list in python",
      "rewritten_intent": "converting integer `num` to list",
      "snippet": "[int(x) for x in str(num)]",
      "question_id": 13905936
    },
    {
      "intent": "Reversing bits of Python integer",
      "rewritten_intent": "revers correlating bits of integer `n`",
      "snippet": "int('{:08b}'.format(n)[::-1], 2)",
      "question_id": 12681945
    },
    {
      "intent": "Iterating over dictionaries using for loops",
      "rewritten_intent": "get keys and items of dictionary `d`",
      "snippet": "list(d.items())",
      "question_id": 3294889
    },
    {
      "intent": "Iterating over dictionaries using for loops",
      "rewritten_intent": "get keys and items of dictionary `d` as a list",
      "snippet": "list(d.items())",
      "question_id": 3294889
    },
    {
      "intent": "Get max key in dictionary",
      "rewritten_intent": "get max key in dictionary `MyCount`",
      "snippet": "max(list(MyCount.keys()), key=int)",
      "question_id": 3108042
    },
    {
      "intent": "Sorting a list of tuples by the addition of second and third element of the tuple",
      "rewritten_intent": "sort list `a` in ascending order based on the addition of the second and third elements of each tuple in it",
      "snippet": "sorted(a, key=lambda x: (sum(x[1:3]), x[0]))",
      "question_id": 40384599
    },
    {
      "intent": "Sorting a list of tuples by the addition of second and third element of the tuple",
      "rewritten_intent": "sort a list of tuples `a` by the sum of second and third element of each tuple",
      "snippet": "sorted(a, key=lambda x: (sum(x[1:3]), x[0]), reverse=True)",
      "question_id": 40384599
    },
    {
      "intent": "Sorting a list of tuples by the addition of second and third element of the tuple",
      "rewritten_intent": "sorting a list of tuples `lst` by the sum of the second elements onwards, and third element of the tuple",
      "snippet": "sorted(lst, key=lambda x: (sum(x[1:]), x[0]))",
      "question_id": 40384599
    },
    {
      "intent": "Sorting a list of tuples by the addition of second and third element of the tuple",
      "rewritten_intent": "sort the list of tuples `lst` by the sum of every value except the first and by the first value in reverse order",
      "snippet": "sorted(lst, key=lambda x: (sum(x[1:]), x[0]), reverse=True)",
      "question_id": 40384599
    },
    {
      "intent": "Python date string to date object",
      "rewritten_intent": "convert date string '24052010' to date object in format '%d%m%Y'",
      "snippet": "datetime.datetime.strptime('24052010', '%d%m%Y').date()",
      "question_id": 2803852
    },
    {
      "intent": "Replace non-ASCII characters with a single space",
      "rewritten_intent": "Replace non-ASCII characters in string `text` with a single space",
      "snippet": "re.sub('[^\\\\x00-\\\\x7F]+', ' ', text)",
      "question_id": 20078816
    },
    {
      "intent": "What does a for loop within a list do in Python?",
      "rewritten_intent": "Get a list `myList` from 1 to 10",
      "snippet": "myList = [i for i in range(10)]",
      "question_id": 11479392
    },
    {
      "intent": "using regular expression to split string in python",
      "rewritten_intent": "use regex pattern '((.+?)\\\\2+)' to split string '44442(2)2(2)44'",
      "snippet": "[m[0] for m in re.compile('((.+?)\\\\2+)').findall('44442(2)2(2)44')]",
      "question_id": 40582103
    },
    {
      "intent": "using regular expression to split string in python",
      "rewritten_intent": "use regular expression '((\\\\d)(?:[()]*\\\\2*[()]*)*)' to split string `s`",
      "snippet": "[i[0] for i in re.findall('((\\\\d)(?:[()]*\\\\2*[()]*)*)', s)]",
      "question_id": 40582103
    },
    {
      "intent": "How to reverse tuples in Python?",
      "rewritten_intent": "Reverse list `x`",
      "snippet": "x[::-1]",
      "question_id": 10201977
    },
    {
      "intent": "Non-consuming regular expression split in Python",
      "rewritten_intent": "Split a string `text` with comma, question mark or exclamation by non-consuming regex using look-behind",
      "snippet": "re.split('(?<=[\\\\.\\\\?!]) ', text)",
      "question_id": 5801945
    },
    {
      "intent": "UTF in Python Regex",
      "rewritten_intent": "create a regular expression object with the pattern '\\xe2\\x80\\x93'",
      "snippet": "re.compile('\\xe2\\x80\\x93')",
      "question_id": 372102
    },
    {
      "intent": "declare an array",
      "rewritten_intent": "declare an array `variable`",
      "snippet": "variable = []",
      "question_id": 1514553
    },
    {
      "intent": "declare an array",
      "rewritten_intent": "declare an array with element 'i'",
      "snippet": "intarray = array('i')",
      "question_id": 1514553
    },
    {
      "intent": "How to reverse the elements in a sublist?",
      "rewritten_intent": "given list `to_reverse`, reverse the all sublists and the list itself",
      "snippet": "[sublist[::-1] for sublist in to_reverse[::-1]]",
      "question_id": 39821166
    },
    {
      "intent": "Replace all non-alphanumeric characters in a string",
      "rewritten_intent": null,
      "snippet": "re.sub('[^0-9a-zA-Z]+', '*', 'h^&ell`.,|o w]{+orld')",
      "question_id": 12985456
    },
    {
      "intent": "Python: unescape special characters without splitting data",
      "rewritten_intent": "unescape special characters without splitting data in array of strings `['I ', u'<', '3s U ', u'&', ' you luvz me']`",
      "snippet": "\"\"\"\"\"\".join(['I ', '<', '3s U ', '&', ' you luvz me'])",
      "question_id": 20876077
    },
    {
      "intent": "python regex get first part of an email address",
      "rewritten_intent": "split string `s` by '@' and get the first element",
      "snippet": "s.split('@')[0]",
      "question_id": 15210485
    },
    {
      "intent": "python getting a list of value from list of dict",
      "rewritten_intent": "generate a list containing values associated with the key 'value' of each dictionary inside list `list_of_dicts`",
      "snippet": "[x['value'] for x in list_of_dicts]",
      "question_id": 7271482
    },
    {
      "intent": "python getting a list of value from list of dict",
      "rewritten_intent": null,
      "snippet": "[d['value'] for d in l]",
      "question_id": 7271482
    },
    {
      "intent": "python getting a list of value from list of dict",
      "rewritten_intent": null,
      "snippet": "[d['value'] for d in l if 'value' in d]",
      "question_id": 7271482
    },
    {
      "intent": "Converting string to tuple and adding to tuple",
      "rewritten_intent": "converting string '(1,2,3,4)' to a tuple",
      "snippet": "ast.literal_eval('(1,2,3,4)')",
      "question_id": 3945856
    },
    {
      "intent": "How to keep a list of lists sorted as it is created",
      "rewritten_intent": "keep a list `dataList` of lists sorted as it is created by second element",
      "snippet": "dataList.sort(key=lambda x: x[1])",
      "question_id": 12324456
    },
    {
      "intent": "Python: Uniqueness for list of lists",
      "rewritten_intent": "remove duplicated items from list of lists `testdata`",
      "snippet": "list(map(list, set(map(lambda i: tuple(i), testdata))))",
      "question_id": 3724551
    },
    {
      "intent": "Python: Uniqueness for list of lists",
      "rewritten_intent": "uniqueness for list of lists `testdata`",
      "snippet": "[list(i) for i in set(tuple(i) for i in testdata)]",
      "question_id": 3724551
    },
    {
      "intent": "How to transform a tuple to a string of values without comma and parentheses",
      "rewritten_intent": "Concat each values in a tuple `(34.2424, -64.2344, 76.3534, 45.2344)` to get a string",
      "snippet": "\"\"\"\"\"\".join(str(i) for i in (34.2424, -64.2344, 76.3534, 45.2344))",
      "question_id": 17426386
    },
    {
      "intent": "What is the simplest way to swap char in a string with Python?",
      "rewritten_intent": "swap each pair of characters in string `s`",
      "snippet": "\"\"\"\"\"\".join([s[x:x + 2][::-1] for x in range(0, len(s), 2)])",
      "question_id": 4605439
    },
    {
      "intent": "delete items from list of list: pythonic way",
      "rewritten_intent": "delete items from list `my_list` if the item exist in list `to_dell`",
      "snippet": "my_list = [[x for x in sublist if x not in to_del] for sublist in my_list]",
      "question_id": 41313232
    },
    {
      "intent": "Find an element in a list of tuples",
      "rewritten_intent": "find all the elements that consists value '1' in a list of tuples 'a'",
      "snippet": "[item for item in a if 1 in item]",
      "question_id": 2191699
    },
    {
      "intent": "Find an element in a list of tuples",
      "rewritten_intent": "find all elements in a list of tuples `a` where the first element of each tuple equals 1",
      "snippet": "[item for item in a if item[0] == 1]",
      "question_id": 2191699
    },
    {
      "intent": "how to uniqify a list of dict in python",
      "rewritten_intent": null,
      "snippet": "[dict(y) for y in set(tuple(x.items()) for x in d)]",
      "question_id": 6280978
    },
    {
      "intent": "Reading hex to double-precision float python",
      "rewritten_intent": "unpack the binary data represented by the hexadecimal string '4081637ef7d0424a' to a float",
      "snippet": "struct.unpack('d', binascii.unhexlify('4081637ef7d0424a'))",
      "question_id": 38831808
    },
    {
      "intent": "How to find all possible sequences of elements in a list?",
      "rewritten_intent": "find all possible sequences of elements in a list `[2, 3, 4]`",
      "snippet": "map(list, permutations([2, 3, 4]))",
      "question_id": 9040939
    },
    {
      "intent": "Sort a list in python based on another sorted list",
      "rewritten_intent": "sort a list `unsorted_list` based on another sorted list `presorted_list`",
      "snippet": "sorted(unsorted_list, key=presorted_list.index)",
      "question_id": 36518800
    },
    {
      "intent": "How to get yesterday in python",
      "rewritten_intent": null,
      "snippet": "datetime.datetime.now() - datetime.timedelta(days=1)",
      "question_id": 19779790
    },
    {
      "intent": "string find",
      "rewritten_intent": "find the index of sub string 'World' in `x`",
      "snippet": "x.find('World')",
      "question_id": 674764
    },
    {
      "intent": "string find",
      "rewritten_intent": "find the index of sub string 'Aloha' in `x`",
      "snippet": "x.find('Aloha')",
      "question_id": 674764
    },
    {
      "intent": "string find",
      "rewritten_intent": "find the index of sub string 'df' in string 'sdfasdf'",
      "snippet": "'sdfasdf'.index('df')",
      "question_id": 674764
    },
    {
      "intent": "string find",
      "rewritten_intent": "find the index of sub string 'a' in string `str`",
      "snippet": "str.find('a')",
      "question_id": 674764
    },
    {
      "intent": "string find",
      "rewritten_intent": "find the index of sub string 'g' in string `str`",
      "snippet": "str.find('g')",
      "question_id": 674764
    },
    {
      "intent": "string find",
      "rewritten_intent": "find the index of sub string 's' in string `str` starting from index 11",
      "snippet": "str.find('s', 11)",
      "question_id": 674764
    },
    {
      "intent": "string find",
      "rewritten_intent": "find the index of sub string 's' in string `str` starting from index 15",
      "snippet": "str.find('s', 15)",
      "question_id": 674764
    },
    {
      "intent": "string find",
      "rewritten_intent": "find the index of sub string 's' in string `str` starting from index 16",
      "snippet": "str.find('s', 16)",
      "question_id": 674764
    },
    {
      "intent": "string find",
      "rewritten_intent": "find the index of sub string 's' in string `str` starting from index 11 and ending at index 14",
      "snippet": "str.find('s', 11, 14)",
      "question_id": 674764
    },
    {
      "intent": "Sort list of date strings",
      "rewritten_intent": "sort list of date strings 'd'",
      "snippet": "sorted(d, key=lambda x: datetime.datetime.strptime(x, '%m-%Y'))",
      "question_id": 17627531
    },
    {
      "intent": "Regular expression in Python sentence extractor",
      "rewritten_intent": "Get all the sentences from a string `text` using regex",
      "snippet": "re.split('\\\\.\\\\s', text)",
      "question_id": 27946742
    },
    {
      "intent": "Regular expression in Python sentence extractor",
      "rewritten_intent": null,
      "snippet": "re.split('\\\\.\\\\s', re.sub('\\\\.\\\\s*$', '', text))",
      "question_id": 27946742
    },
    {
      "intent": "Python - How to cut a string in Python?",
      "rewritten_intent": "get all characters in string 'foobar' up to the fourth index",
      "snippet": "\"\"\"foobar\"\"\"[:4]",
      "question_id": 8247792
    },
    {
      "intent": "Python - How to cut a string in Python?",
      "rewritten_intent": "cut a string by delimiter '&'",
      "snippet": "s.rfind('&')",
      "question_id": 8247792
    },
    {
      "intent": "Python - How to cut a string in Python?",
      "rewritten_intent": "cut a string using delimiter '&'",
      "snippet": "s[:s.rfind('&')]",
      "question_id": 8247792
    },
    {
      "intent": "How can I split a string into tokens?",
      "rewritten_intent": "split string 'x+13.5*10x-4e1' into tokens",
      "snippet": "print([i for i in re.split('([\\\\d.]+|\\\\W+)', 'x+13.5*10x-4e1') if i])",
      "question_id": 18312447
    },
    {
      "intent": "Python: Check if a string contains chinese character?",
      "rewritten_intent": "Find all Chinese characters in string `ipath`",
      "snippet": "re.findall('[\\u4e00-\\u9fff]+', ipath)",
      "question_id": 34587346
    },
    {
      "intent": "String splitting in Python",
      "rewritten_intent": "split string `s` by letter 's'",
      "snippet": "s.split('s')",
      "question_id": 13128565
    },
    {
      "intent": "Elegant way to transform a list of dict into a dict of dicts",
      "rewritten_intent": "convert a list of dictionaries `listofdict into a dictionary of dictionaries",
      "snippet": "dict((d['name'], d) for d in listofdict)",
      "question_id": 8303993
    },
    {
      "intent": "print date in a regular format",
      "rewritten_intent": "print current date and time in a regular format",
      "snippet": "datetime.datetime.now().strftime('%Y-%m-%d %H:%M')",
      "question_id": 311627
    },
    {
      "intent": "print date in a regular format",
      "rewritten_intent": "print current date and time in a regular format",
      "snippet": "time.strftime('%Y-%m-%d %H:%M')",
      "question_id": 311627
    },
    {
      "intent": "Finding consecutive consonants in a word",
      "rewritten_intent": "find consecutive consonants in a word `CONCENTRATION` using regex",
      "snippet": "re.findall('[bcdfghjklmnpqrstvwxyz]+', 'CONCERTATION', re.IGNORECASE)",
      "question_id": 27744882
    },
    {
      "intent": "How do I get a list of indices of non zero elements in a list?",
      "rewritten_intent": "get a list of indices of non zero elements in a list `a`",
      "snippet": "[i for i, e in enumerate(a) if e != 0]",
      "question_id": 4111412
    },
    {
      "intent": "How to get integer values from a string in Python?",
      "rewritten_intent": "get multiple integer values from a string 'string1'",
      "snippet": "map(int, re.findall('\\\\d+', string1))",
      "question_id": 11339210
    },
    {
      "intent": "Parsing non-zero padded timestamps in Python",
      "rewritten_intent": "parse string '2015/01/01 12:12am' to DateTime object using format '%Y/%m/%d %I:%M%p'",
      "snippet": "datetime.strptime('2015/01/01 12:12am', '%Y/%m/%d %I:%M%p')",
      "question_id": 25279993
    },
    {
      "intent": "Find maximum with limited length in a list",
      "rewritten_intent": "find maximum with lookahead = 4 in a list `arr`",
      "snippet": "[max(abs(x) for x in arr[i:i + 4]) for i in range(0, len(arr), 4)]",
      "question_id": 34543513
    },
    {
      "intent": "How to remove all integer values from a list in python",
      "rewritten_intent": "get a list `no_integers` of all the items in list `mylist` that are not of type `int`",
      "snippet": "no_integers = [x for x in mylist if not isinstance(x, int)]",
      "question_id": 3159155
    },
    {
      "intent": "convert dictionaries into string python",
      "rewritten_intent": "concatenate key/value pairs in dictionary `a` with string ', ' into a single string",
      "snippet": "\"\"\", \"\"\".join([(str(k) + ' ' + str(v)) for k, v in list(a.items())])",
      "question_id": 40512124
    },
    {
      "intent": "Detecting non-ascii characters in unicode string",
      "rewritten_intent": "Strip all non-ASCII characters from a unicode string, `\\xa3\\u20ac\\xa3\\u20ac`",
      "snippet": "print(set(re.sub('[\\x00-\\x7f]', '', '\\xa3\\u20ac\\xa3\\u20ac')))",
      "question_id": 16866261
    },
    {
      "intent": "Detecting non-ascii characters in unicode string",
      "rewritten_intent": "Get all non-ascii characters in a unicode string `\\xa3100 is worth more than \\u20ac100`",
      "snippet": "print(re.sub('[\\x00-\\x7f]', '', '\\xa3100 is worth more than \\u20ac100'))",
      "question_id": 16866261
    },
    {
      "intent": "Convert a String representation of a Dictionary to a dictionary?",
      "rewritten_intent": "build a dict of key:value pairs from a string representation of a dict, `{'muffin' : 'lolz', 'foo' : 'kitty'}`",
      "snippet": "ast.literal_eval(\"{'muffin' : 'lolz', 'foo' : 'kitty'}\")",
      "question_id": 988228
    },
    {
      "intent": "Easiest way to remove unicode representations from a string in python 3?",
      "rewritten_intent": "Print string `t` with proper unicode representations",
      "snippet": "print(t.decode('unicode_escape'))",
      "question_id": 13793973
    },
    {
      "intent": "String encoding and decoding from possibly latin1 and utf8",
      "rewritten_intent": "Normalize string `str` from 'cp1252' code to 'utf-8' code",
      "snippet": "print(str.encode('cp1252').decode('utf-8').encode('cp1252').decode('utf-8'))",
      "question_id": 10525301
    },
    {
      "intent": "merge lists into a list of tuples",
      "rewritten_intent": "merge lists `list_a` and `list_b` into a list of tuples",
      "snippet": "zip(list_a, list_b)",
      "question_id": 2407398
    },
    {
      "intent": "merge lists into a list of tuples",
      "rewritten_intent": "merge lists `a` and `a` into a list of tuples",
      "snippet": "list(zip(a, b))",
      "question_id": 2407398
    },
    {
      "intent": "Can I sort text by its numeric value in Python?",
      "rewritten_intent": null,
      "snippet": "sorted(list(mydict.items()), key=lambda a: map(int, a[0].split('.')))",
      "question_id": 1534542
    },
    {
      "intent": "How can I remove text within parentheses with a regex?",
      "rewritten_intent": "remove parentheses and text within it in string `filename`",
      "snippet": "re.sub('\\\\([^)]*\\\\)', '', filename)",
      "question_id": 640001
    },
    {
      "intent": "How can I tell if a string only contains letter AND spaces",
      "rewritten_intent": "Check if string 'a b' only contains letters and spaces",
      "snippet": "\"\"\"a b\"\"\".replace(' ', '').isalpha()",
      "question_id": 29454773
    },
    {
      "intent": "Add SUM of values of two LISTS into new LIST",
      "rewritten_intent": "sum each element `x` in list `first` with element `y` at the same index in list `second`.",
      "snippet": "[(x + y) for x, y in zip(first, second)]",
      "question_id": 14050824
    },
    {
      "intent": "How to sort a Python dictionary by value?",
      "rewritten_intent": "sort a python dictionary `a_dict` by element `1` of the value",
      "snippet": "sorted(list(a_dict.items()), key=lambda item: item[1][1])",
      "question_id": 11932729
    },
    {
      "intent": "How to exclude a character from a regex group?",
      "rewritten_intent": null,
      "snippet": "re.compile('[^a-zA-Z0-9-]+')",
      "question_id": 4108561
    },
    {
      "intent": "Get index of the top n values of a list in python",
      "rewritten_intent": "get index of the biggest 2 values of a list `a`",
      "snippet": "sorted(list(range(len(a))), key=lambda i: a[i])[-2:]",
      "question_id": 13070461
    },
    {
      "intent": "Get index of the top n values of a list in python",
      "rewritten_intent": "get the indexes of the largest `2` values from a list of integers `a`",
      "snippet": "sorted(list(range(len(a))), key=lambda i: a[i], reverse=True)[:2]",
      "question_id": 13070461
    },
    {
      "intent": "How to get the index with the key in Python dictionary?",
      "rewritten_intent": "get index of key 'c' in dictionary `x`",
      "snippet": "list(x.keys()).index('c')",
      "question_id": 14538885
    },
    {
      "intent": "How to print +1 in Python, as +1 (with plus sign) instead of 1?",
      "rewritten_intent": "Print +1 using format '{0:+d}'",
      "snippet": "print('{0:+d}'.format(score))",
      "question_id": 8337004
    },
    {
      "intent": "Remove adjacent duplicate elements from a list",
      "rewritten_intent": "remove adjacent duplicate elements from a list `[1, 2, 2, 3, 2, 2, 4]`",
      "snippet": "[k for k, g in itertools.groupby([1, 2, 2, 3, 2, 2, 4])]",
      "question_id": 3460161
    },
    {
      "intent": "Converting a String to List in Python",
      "rewritten_intent": "split string \"0,1,2\" based on delimiter ','",
      "snippet": "\"\"\"0,1,2\"\"\".split(',')",
      "question_id": 2168123
    },
    {
      "intent": "Converting a String to List in Python",
      "rewritten_intent": "convert the string '0,1,2' to a list of integers",
      "snippet": "[int(x) for x in '0,1,2'.split(',')]",
      "question_id": 2168123
    },
    {
      "intent": "Python: Convert list of key-value tuples into dictionary?",
      "rewritten_intent": "convert list of key-value tuples `[('A', 1), ('B', 2), ('C', 3)]` into dictionary",
      "snippet": "dict([('A', 1), ('B', 2), ('C', 3)])",
      "question_id": 6586310
    },
    {
      "intent": "how to get day name in datetime in python",
      "rewritten_intent": "Get day name from a datetime object",
      "snippet": "date.today().strftime('%A')",
      "question_id": 8380389
    },
    {
      "intent": "Python regular expression match whole word",
      "rewritten_intent": null,
      "snippet": "re.search('\\\\bis\\\\b', your_string)",
      "question_id": 15863066
    },
    {
      "intent": "Making a flat list out of list of lists",
      "rewritten_intent": "make a flat list from list of lists `sublist`",
      "snippet": "[item for sublist in l for item in sublist]",
      "question_id": 952914
    },
    {
      "intent": "Making a flat list out of list of lists",
      "rewritten_intent": "make a flat list from list of lists `list2d`",
      "snippet": "list(itertools.chain(*list2d))",
      "question_id": 952914
    },
    {
      "intent": "Making a flat list out of list of lists",
      "rewritten_intent": "make a flat list from list of lists `list2d`",
      "snippet": "list(itertools.chain.from_iterable(list2d))",
      "question_id": 952914
    },
    {
      "intent": "Convert int to ASCII and back in Python",
      "rewritten_intent": "convert ascii value 'a' to int",
      "snippet": "ord('a')",
      "question_id": 3673428
    },
    {
      "intent": "Python: use regular expression to remove the white space from all lines",
      "rewritten_intent": "replace white spaces in string '  a\\n b\\n c\\nd  e' with empty string ''",
      "snippet": "re.sub('(?m)^[^\\\\S\\\\n]+', '', '  a\\n b\\n c\\nd  e')",
      "question_id": 3984539
    },
    {
      "intent": "Python: use regular expression to remove the white space from all lines",
      "rewritten_intent": "remove white spaces from all the lines using a regular expression in string 'a\\n b\\n c'",
      "snippet": "re.sub('(?m)^\\\\s+', '', 'a\\n b\\n c')",
      "question_id": 3984539
    },
    {
      "intent": "Python: Assign each element of a List to a separate Variable",
      "rewritten_intent": "destruct elements of list `[1, 2, 3]` to variables `a`, `b` and `c`",
      "snippet": "a, b, c = [1, 2, 3]",
      "question_id": 19300174
    },
    {
      "intent": "Python split a list into subsets based on pattern",
      "rewritten_intent": "split list `mylist` into a list of lists whose elements have the same first five characters",
      "snippet": "[list(v) for k, v in itertools.groupby(mylist, key=lambda x: x[:5])]",
      "question_id": 13368723
    },
    {
      "intent": "Regular expression substitution in Python",
      "rewritten_intent": "remove all instances of parenthesesis containing text beginning with `as ` from string `line`",
      "snippet": "line = re.sub('\\\\(+as .*?\\\\) ', '', line)",
      "question_id": 37584492
    },
    {
      "intent": "How to skip the extra newline while printing lines read from a file?",
      "rewritten_intent": "skip the newline while printing `line`",
      "snippet": "print(line.rstrip('\\n'))",
      "question_id": 17027690
    },
    {
      "intent": "Find the indices of elements greater than x",
      "rewritten_intent": "create a list containing the indices of elements greater than 4 in list `a`",
      "snippet": "[i for i, v in enumerate(a) if v > 4]",
      "question_id": 13717463
    },
    {
      "intent": "sorting list of nested dictionaries in python",
      "rewritten_intent": "reverse list `yourdata`",
      "snippet": "sorted(yourdata, reverse=True)",
      "question_id": 13237941
    },
    {
      "intent": "sorting list of nested dictionaries in python",
      "rewritten_intent": "sort list of nested dictionaries `yourdata` in reverse based on values associated with each dictionary's key 'subkey'",
      "snippet": "sorted(yourdata, key=lambda d: d.get('key', {}).get('subkey'), reverse=True)",
      "question_id": 13237941
    },
    {
      "intent": "sorting list of nested dictionaries in python",
      "rewritten_intent": "sort list of nested dictionaries `yourdata` in reverse order of 'key' and 'subkey'",
      "snippet": "yourdata.sort(key=lambda e: e['key']['subkey'], reverse=True)",
      "question_id": 13237941
    },
    {
      "intent": "Pythonic way to get the largest item in a list",
      "rewritten_intent": "get the tuple in list `a_list` that has the largest item in the second index",
      "snippet": "max_item = max(a_list, key=operator.itemgetter(1))",
      "question_id": 1874194
    },
    {
      "intent": "Pythonic way to get the largest item in a list",
      "rewritten_intent": "find tuple in list of tuples `a_list` with the largest second element",
      "snippet": "max(a_list, key=operator.itemgetter(1))",
      "question_id": 1874194
    },
    {
      "intent": "how to extract elements from a list in python?",
      "rewritten_intent": "extract elements at indices (1, 2, 5) from a list `a`",
      "snippet": "[a[i] for i in (1, 2, 5)]",
      "question_id": 2621674
    },
    {
      "intent": "How to convert a Date string to a DateTime object?",
      "rewritten_intent": "convert a date string `s` to a datetime object",
      "snippet": "datetime.datetime.strptime(s, '%Y-%m-%dT%H:%M:%SZ')",
      "question_id": 2721782
    },
    {
      "intent": "Replace first occurence of string",
      "rewritten_intent": "replace only first occurence of string `TEST` from a string `longlongTESTstringTEST`",
      "snippet": "'longlongTESTstringTEST'.replace('TEST', '?', 1)",
      "question_id": 4628618
    },
    {
      "intent": "Elegant way to create a dictionary of pairs, from a list of tuples?",
      "rewritten_intent": "create a dictionary of pairs from a list of tuples `myListOfTuples`",
      "snippet": "dict(x[1:] for x in reversed(myListOfTuples))",
      "question_id": 3457673
    },
    {
      "intent": "How to subtract two lists in python",
      "rewritten_intent": "subtract elements of list `List1` from elements of list `List2`",
      "snippet": "[(x1 - x2) for x1, x2 in zip(List1, List2)]",
      "question_id": 8194156
    },
    {
      "intent": "How to tell if string starts with a number?",
      "rewritten_intent": "check if string `string` starts with a number",
      "snippet": "string[0].isdigit()",
      "question_id": 5577501
    },
    {
      "intent": "How to tell if string starts with a number?",
      "rewritten_intent": "Check if string `strg` starts with any of the elements in list ('0', '1', '2', '3', '4', '5', '6', '7', '8', '9')",
      "snippet": "strg.startswith(('0', '1', '2', '3', '4', '5', '6', '7', '8', '9'))",
      "question_id": 5577501
    },
    {
      "intent": "Finding the surrounding sentence of a char/word in a string",
      "rewritten_intent": "split string `text` by the occurrences of regex pattern '(?<=\\\\?|!|\\\\.)\\\\s{0,2}(?=[A-Z]|$)'",
      "snippet": "re.split('(?<=\\\\?|!|\\\\.)\\\\s{0,2}(?=[A-Z]|$)', text)",
      "question_id": 15530399
    },
    {
      "intent": "Rearrange tuple of tuples in Python",
      "rewritten_intent": "rearrange tuple of tuples `t`",
      "snippet": "tuple(zip(*t))",
      "question_id": 16040156
    },
    {
      "intent": "How do I convert a list of ascii values to a string in python?",
      "rewritten_intent": "convert a list `L` of ascii values to a string",
      "snippet": "\"\"\"\"\"\".join(chr(i) for i in L)",
      "question_id": 180606
    },
    {
      "intent": "Python 2.7 Counting number of dictionary items with given value",
      "rewritten_intent": "count the number of pairs in dictionary `d` whose value equal to `chosen_value`",
      "snippet": "sum(x == chosen_value for x in list(d.values()))",
      "question_id": 13462365
    },
    {
      "intent": "Python 2.7 Counting number of dictionary items with given value",
      "rewritten_intent": "count the number of values in `d` dictionary that are predicate to function `some_condition`",
      "snippet": "sum(1 for x in list(d.values()) if some_condition(x))",
      "question_id": 13462365
    },
    {
      "intent": "convert double to float in Python",
      "rewritten_intent": "convert double 0.00582811585976 to float",
      "snippet": "struct.unpack('f', struct.pack('f', 0.00582811585976))",
      "question_id": 13291539
    },
    {
      "intent": "Converting datetime.date to UTC timestamp in Python",
      "rewritten_intent": "convert datetime.date `dt` to utc timestamp",
      "snippet": "timestamp = (dt - datetime(1970, 1, 1)).total_seconds()",
      "question_id": 8777753
    },
    {
      "intent": "How can I print the Truth value of a variable?",
      "rewritten_intent": "print the truth value of `a`",
      "snippet": "print(bool(a))",
      "question_id": 39604780
    },
    {
      "intent": "sorting a list in python",
      "rewritten_intent": "Sort a list of strings 'words' such that items starting with 's' come first.",
      "snippet": "sorted(words, key=lambda x: 'a' + x if x.startswith('s') else 'b' + x)",
      "question_id": 17608210
    },
    {
      "intent": "Pythonic way to fetch all elements in a dictionary, falling between two keys?",
      "rewritten_intent": "fetch all elements in a dictionary `parent_dict`, falling between two keys 2 and 4",
      "snippet": "dict((k, v) for k, v in parent_dict.items() if 2 < k < 4)",
      "question_id": 8654637
    },
    {
      "intent": "Pythonic way to fetch all elements in a dictionary, falling between two keys?",
      "rewritten_intent": "fetch all elements in a dictionary 'parent_dict' where the key is between the range of 2 to 4",
      "snippet": "dict((k, v) for k, v in parent_dict.items() if k > 2 and k < 4)",
      "question_id": 8654637
    },
    {
      "intent": "python sorting two lists",
      "rewritten_intent": "sort two lists `list1` and `list2` together using lambda function",
      "snippet": "[list(x) for x in zip(*sorted(zip(list1, list2), key=lambda pair: pair[0]))]",
      "question_id": 13668393
    },
    {
      "intent": "number of values in a list greater than a certain number",
      "rewritten_intent": "get the number of values in list `j` that is greater than 5",
      "snippet": "sum(((i > 5) for i in j))",
      "question_id": 10543303
    },
    {
      "intent": "number of values in a list greater than a certain number",
      "rewritten_intent": "get the number of values in list `j` that is greater than 5",
      "snippet": "len([1 for i in j if (i > 5)])",
      "question_id": 10543303
    },
    {
      "intent": "Python: elegant way of creating a list of tuples?",
      "rewritten_intent": "zip list `a`, `b`, `c` into a list of tuples",
      "snippet": "[(x + tuple(y)) for x, y in zip(zip(a, b), c)]",
      "question_id": 12655007
    },
    {
      "intent": "Comparing values in two lists in Python",
      "rewritten_intent": "get a list of booleans `z` that shows wether the corresponding items in list `x` and `y` are equal",
      "snippet": "z = [(i == j) for i, j in zip(x, y)]",
      "question_id": 32996293
    },
    {
      "intent": "Comparing values in two lists in Python",
      "rewritten_intent": "create a list which indicates whether each element in `x` and `y` is identical",
      "snippet": "[(x[i] == y[i]) for i in range(len(x))]",
      "question_id": 32996293
    },
    {
      "intent": "Python: Extract numbers from a string",
      "rewritten_intent": null,
      "snippet": "[int(s) for s in re.findall('\\\\b\\\\d+\\\\b', \"he33llo 42 I'm a 32 string 30\")]",
      "question_id": 4289331
    },
    {
      "intent": "How do I convert a string 2 bytes long to an integer in python",
      "rewritten_intent": "unpack first and second bytes of byte string `pS` into integer",
      "snippet": "struct.unpack('h', pS[0:2])",
      "question_id": 826284
    },
    {
      "intent": "Printing lists onto tables in python",
      "rewritten_intent": "print list `t` into a table-like shape",
      "snippet": "print('\\n'.join('  '.join(map(str, row)) for row in t))",
      "question_id": 16677816
    },
    {
      "intent": "Is it possible to use 'else' in a python list comprehension?",
      "rewritten_intent": "replace `0` with `2` in the list `[0, 1, 0, 3]`",
      "snippet": "[(a if a else 2) for a in [0, 1, 0, 3]]",
      "question_id": 2951701
    },
    {
      "intent": "Parsing string containing Unicode character names",
      "rewritten_intent": "Produce a string that is suitable as Unicode literal from string 'M\\\\N{AMPERSAND}M\\\\N{APOSTROPHE}s'",
      "snippet": "'M\\\\N{AMPERSAND}M\\\\N{APOSTROPHE}s'.encode().decode('unicode-escape')",
      "question_id": 30747705
    },
    {
      "intent": "Convert unicode codepoint to UTF8 hex in python",
      "rewritten_intent": "convert Unicode codepoint to utf8 hex",
      "snippet": "chr(int('fd9b', 16)).encode('utf-8')",
      "question_id": 867866
    },
    {
      "intent": "How can I get Python to use upper case letters to print hex values?",
      "rewritten_intent": "use upper case letters to print hex value `value`",
      "snippet": "print('0x%X' % value)",
      "question_id": 13277440
    },
    {
      "intent": "How to remove empty string in a list?",
      "rewritten_intent": "get a list `cleaned` that contains all non-empty elements in list `your_list`",
      "snippet": "cleaned = [x for x in your_list if x]",
      "question_id": 16099694
    },
    {
      "intent": "Python: Want to use a string as a slice specifier",
      "rewritten_intent": "create a slice object using string `string_slice`",
      "snippet": "slice(*[(int(i.strip()) if i else None) for i in string_slice.split(':')])",
      "question_id": 13324554
    },
    {
      "intent": "How to convert dictionary into string",
      "rewritten_intent": "convert dictionary `adict` into string",
      "snippet": "\"\"\"\"\"\".join('{}{}'.format(key, val) for key, val in sorted(adict.items()))",
      "question_id": 10472907
    },
    {
      "intent": "How to convert dictionary into string",
      "rewritten_intent": "convert dictionary `adict` into string",
      "snippet": "\"\"\"\"\"\".join('{}{}'.format(key, val) for key, val in list(adict.items()))",
      "question_id": 10472907
    },
    {
      "intent": "copy a list",
      "rewritten_intent": "copy list `old_list` as `new_list`",
      "snippet": "new_list = old_list[:]",
      "question_id": 2612802
    },
    {
      "intent": "copy a list",
      "rewritten_intent": "copy list `old_list` as `new_list`",
      "snippet": "new_list = list(old_list)",
      "question_id": 2612802
    },
    {
      "intent": "copy a list",
      "rewritten_intent": "copy list `old_list` as `new_list`",
      "snippet": "new_list = copy.copy(old_list)",
      "question_id": 2612802
    },
    {
      "intent": "copy a list",
      "rewritten_intent": "deep copy list `old_list` as `new_list`",
      "snippet": "new_list = copy.deepcopy(old_list)",
      "question_id": 2612802
    },
    {
      "intent": "copy a list",
      "rewritten_intent": "make a copy of list `old_list`",
      "snippet": "[i for i in old_list]",
      "question_id": 2612802
    },
    {
      "intent": "How to work with surrogate pairs in Python?",
      "rewritten_intent": "Print a emoji from a string `\\\\ud83d\\\\ude4f` having surrogate pairs",
      "snippet": "\"\"\"\\\\ud83d\\\\ude4f\"\"\".encode('utf-16', 'surrogatepass').decode('utf-16')",
      "question_id": 38147259
    },
    {
      "intent": "How to get the length of words in a sentence?",
      "rewritten_intent": null,
      "snippet": "[len(x) for x in s.split()]",
      "question_id": 22749706
    },
    {
      "intent": "Regular expression to return all characters between two special characters",
      "rewritten_intent": "find all substrings in `mystring` beginning and ending with square brackets",
      "snippet": "re.findall('\\\\[(.*?)\\\\]', mystring)",
      "question_id": 9889635
    },
    {
      "intent": "Python, print all floats to 2 decimal places in output",
      "rewritten_intent": "Format all floating variables `var1`, `var2`, `var3`, `var1` to print to two decimal places.",
      "snippet": "print('%.2f kg = %.2f lb = %.2f gal = %.2f l' % (var1, var2, var3, var4))",
      "question_id": 2075128
    },
    {
      "intent": "The best way to filter a dictionary in Python",
      "rewritten_intent": "Remove all items from a dictionary `d` where the values are less than `1`",
      "snippet": "d = dict((k, v) for k, v in d.items() if v > 0)",
      "question_id": 8425046
    },
    {
      "intent": "The best way to filter a dictionary in Python",
      "rewritten_intent": "Filter dictionary `d` to have items with value greater than 0",
      "snippet": "d = {k: v for k, v in list(d.items()) if v > 0}",
      "question_id": 8425046
    },
    {
      "intent": "How to extract a floating number from a string",
      "rewritten_intent": "extract floating number from string 'Current Level: 13.4 db.'",
      "snippet": "re.findall('\\\\d+\\\\.\\\\d+', 'Current Level: 13.4 db.')",
      "question_id": 4703390
    },
    {
      "intent": "How to extract a floating number from a string",
      "rewritten_intent": "extract floating point numbers from a string 'Current Level: -13.2 db or 14.2 or 3'",
      "snippet": "re.findall('[-+]?\\\\d*\\\\.\\\\d+|\\\\d+', 'Current Level: -13.2 db or 14.2 or 3')",
      "question_id": 4703390
    },
    {
      "intent": "Convert List to a list of tuples python",
      "rewritten_intent": "pair each element in list `it` 3 times into a tuple",
      "snippet": "zip(it, it, it)",
      "question_id": 23286254
    },
    {
      "intent": "python append to array in json object",
      "rewritten_intent": "append dict `{'f': var6, 'g': var7, 'h': var8}` to value of key `e` in dict `jsobj['a']['b']`",
      "snippet": "jsobj['a']['b']['e'].append({'f': var6, 'g': var7, 'h': var8})",
      "question_id": 10895028
    },
    {
      "intent": "Most Pythonic way to concatenate strings",
      "rewritten_intent": "Concat a list of strings `lst` using string formatting",
      "snippet": "\"\"\"\"\"\".join(lst)",
      "question_id": 2133571
    },
    {
      "intent": "Python: Sum values in a dictionary based on condition",
      "rewritten_intent": "sum values greater than 0 in dictionary `d`",
      "snippet": "sum(v for v in list(d.values()) if v > 0)",
      "question_id": 15014276
    },
    {
      "intent": "Python: Check if one dictionary is a subset of another larger dictionary",
      "rewritten_intent": "check if dictionary `subset` is a subset of dictionary `superset`",
      "snippet": "all(item in list(superset.items()) for item in list(subset.items()))",
      "question_id": 9323749
    },
    {
      "intent": "Python: for loop in index assignment",
      "rewritten_intent": "Convert integer elements in list `wordids` to strings",
      "snippet": "[str(wi) for wi in wordids]",
      "question_id": 7768859
    },
    {
      "intent": "Python Add Comma Into Number String",
      "rewritten_intent": "format floating point number  `TotalAmount` to be rounded off to two decimal places and have a comma thousands' seperator",
      "snippet": "print('Total cost is: ${:,.2f}'.format(TotalAmount))",
      "question_id": 5180365
    },
    {
      "intent": "creating list of random numbers in python",
      "rewritten_intent": "create list `randomList` with 10 random floating point numbers between 0.0 and 1.0",
      "snippet": "randomList = [random.random() for _ in range(10)]",
      "question_id": 20733827
    },
    {
      "intent": "How to get a random value in python dictionary",
      "rewritten_intent": "get a random key `country` and value `capital` form a dictionary `d`",
      "snippet": "country, capital = random.choice(list(d.items()))",
      "question_id": 4859292
    },
    {
      "intent": "Is there a function in python to split a word into a list?",
      "rewritten_intent": "split string `Word to Split` into a list of characters",
      "snippet": "list('Word to Split')",
      "question_id": 113655
    },
    {
      "intent": "Using a RegEx to match IP addresses in Python",
      "rewritten_intent": "Validate IP address using Regex",
      "snippet": "pat = re.compile('^\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}$')",
      "question_id": 11264005
    },
    {
      "intent": "Python counting elements of a list within a list",
      "rewritten_intent": "check if all lists in list `L` have three elements of integer 1",
      "snippet": "all(x.count(1) == 3 for x in L)",
      "question_id": 12310141
    },
    {
      "intent": "Comparing elements between elements in two lists of tuples",
      "rewritten_intent": "Get a list comparing two lists of tuples `l1` and `l2` if any first value in `l1` matches with first value in `l2`",
      "snippet": "[x[0] for x in l1 if any(x[0] == y[0] for y in l2)]",
      "question_id": 13168252
    },
    {
      "intent": "in Python, How to join a list of tuples into one list?",
      "rewritten_intent": "convert list `a` from being consecutive sequences of tuples into a single sequence of elements",
      "snippet": "list(itertools.chain(*a))",
      "question_id": 15269161
    },
    {
      "intent": "How do I pythonically set a value in a dictionary if it is None?",
      "rewritten_intent": "Set value for key `a` in dict `count` to `0` if key `a` does not exist or if value is `none`",
      "snippet": "count.setdefault('a', 0)",
      "question_id": 18663026
    },
    {
      "intent": "from list of integers, get number closest to a given value",
      "rewritten_intent": "get number in list `myList` closest in value to number `myNumber`",
      "snippet": "min(myList, key=lambda x: abs(x - myNumber))",
      "question_id": 12141150
    },
    {
      "intent": "Find array item in a string",
      "rewritten_intent": "check if any of the items in  `search` appear in `string`",
      "snippet": "any(x in string for x in search)",
      "question_id": 5858916
    },
    {
      "intent": "Subtract values in one list from corresponding values in another list - Python",
      "rewritten_intent": "Get a list `C` by subtracting values in one list `B` from corresponding values in another list `A`",
      "snippet": "C = [(a - b) for a, b in zip(A, B)]",
      "question_id": 11677860
    },
    {
      "intent": "How to derive the week start for a given (iso) weeknumber / year in python",
      "rewritten_intent": "derive the week start for the given week number and year \u20182011, 4, 0\u2019",
      "snippet": "datetime.datetime.strptime('2011, 4, 0', '%Y, %U, %w')",
      "question_id": 4793617
    },
    {
      "intent": "Python: How do I convert an array of strings to an array of numbers?",
      "rewritten_intent": "convert a list of strings `['1', '-1', '1']` to a list of numbers",
      "snippet": "map(int, ['1', '-1', '1'])",
      "question_id": 5306079
    },
    {
      "intent": "How to create datetime object from \"16SEP2012\" in python",
      "rewritten_intent": "create datetime object from \"16sep2012\"",
      "snippet": "datetime.datetime.strptime('16Sep2012', '%d%b%Y')",
      "question_id": 18684397
    },
    {
      "intent": "Precision in python",
      "rewritten_intent": "print a digit `your_number` with exactly 2 digits after decimal",
      "snippet": "print('{0:.2f}'.format(your_number))",
      "question_id": 5229425
    },
    {
      "intent": "Python: How to generate a 12-digit random number?",
      "rewritten_intent": "generate a 12-digit random number",
      "snippet": "random.randint(100000000000, 999999999999)",
      "question_id": 13496087
    },
    {
      "intent": "Python: How to generate a 12-digit random number?",
      "rewritten_intent": "generate a random 12-digit number",
      "snippet": "int(''.join(str(random.randint(0, 9)) for _ in range(12)))",
      "question_id": 13496087
    },
    {
      "intent": "Python: How to generate a 12-digit random number?",
      "rewritten_intent": "generate a random 12-digit number",
      "snippet": "\"\"\"\"\"\".join(str(random.randint(0, 9)) for _ in range(12))",
      "question_id": 13496087
    },
    {
      "intent": "Python: How to generate a 12-digit random number?",
      "rewritten_intent": "generate a 12-digit random number",
      "snippet": "'%0.12d' % random.randint(0, 999999999999)",
      "question_id": 13496087
    },
    {
      "intent": "Sort a list based on dictionary values in python?",
      "rewritten_intent": "sort list `trial_list` based on values of dictionary `trail_dict`",
      "snippet": "sorted(trial_list, key=lambda x: trial_dict[x])",
      "question_id": 12987178
    },
    {
      "intent": "Stdout encoding in python",
      "rewritten_intent": "encode unicode string '\\xc5\\xc4\\xd6' to utf-8 code",
      "snippet": "print('\\xc5\\xc4\\xd6'.encode('UTF8'))",
      "question_id": 15740236
    },
    {
      "intent": "Best way to get the nth element of each tuple from a list of tuples in Python",
      "rewritten_intent": "get the first element of each tuple from a list of tuples `G`",
      "snippet": "[x[0] for x in G]",
      "question_id": 12440342
    },
    {
      "intent": "Regular expression matching all but a string",
      "rewritten_intent": "regular expression matching all but 'aa' and 'bb' for string `string`",
      "snippet": "re.findall('-(?!aa-|bb-)([^-]+)', string)",
      "question_id": 39600161
    },
    {
      "intent": "Regular expression matching all but a string",
      "rewritten_intent": "regular expression matching all but 'aa' and 'bb'",
      "snippet": "re.findall('-(?!aa|bb)([^-]+)', string)",
      "question_id": 39600161
    },
    {
      "intent": "Removing entries from a dictionary based on values",
      "rewritten_intent": "remove false entries from a dictionary `hand`",
      "snippet": "{k: v for k, v in list(hand.items()) if v}",
      "question_id": 15158599
    },
    {
      "intent": "Removing entries from a dictionary based on values",
      "rewritten_intent": "Get a dictionary from a dictionary `hand` where the values are present",
      "snippet": "dict((k, v) for k, v in hand.items() if v)",
      "question_id": 15158599
    },
    {
      "intent": "random Decimal in python",
      "rewritten_intent": "generate random Decimal",
      "snippet": "decimal.Decimal(random.randrange(10000)) / 100",
      "question_id": 439115
    },
    {
      "intent": "get key by value in dictionary with same value in python?",
      "rewritten_intent": "get keys with same value in dictionary `d`",
      "snippet": "print([key for key in d if d[key] == 1])",
      "question_id": 24958010
    },
    {
      "intent": "get key by value in dictionary with same value in python?",
      "rewritten_intent": "get keys with same value in dictionary `d`",
      "snippet": "print([key for key, value in d.items() if value == 1])",
      "question_id": 24958010
    },
    {
      "intent": "get key by value in dictionary with same value in python?",
      "rewritten_intent": "Get keys from a dictionary 'd' where the value is '1'.",
      "snippet": "print([key for key, value in list(d.items()) if value == 1])",
      "question_id": 24958010
    },
    {
      "intent": "What is the best way to create a string array in python?",
      "rewritten_intent": "create list of 'size' empty strings",
      "snippet": "strs = ['' for x in range(size)]",
      "question_id": 6376886
    },
    {
      "intent": "Remove duplicate dict in list in Python",
      "rewritten_intent": "remove duplicate dict in list `l`",
      "snippet": "[dict(t) for t in set([tuple(d.items()) for d in l])]",
      "question_id": 9427163
    },
    {
      "intent": "Appending to list in Python dictionary",
      "rewritten_intent": "append `date` to list value of `key` in dictionary `dates_dict`, or create key `key` with value `date` in a list if it does not exist",
      "snippet": "dates_dict.setdefault(key, []).append(date)",
      "question_id": 26367812
    },
    {
      "intent": "How do I translate a ISO 8601 datetime string into a Python datetime object?",
      "rewritten_intent": "None",
      "snippet": "datetime.datetime.strptime('2007-03-04T21:08:12', '%Y-%m-%dT%H:%M:%S')",
      "question_id": 969285
    },
    {
      "intent": "How to sort a list according to another list?",
      "rewritten_intent": "sort list `a` using the first dimension of the element as the key to list `b`",
      "snippet": "a.sort(key=lambda x: b.index(x[0]))",
      "question_id": 12814667
    },
    {
      "intent": "How to sort a list according to another list?",
      "rewritten_intent": null,
      "snippet": "a.sort(key=lambda x_y: b.index(x_y[0]))",
      "question_id": 12814667
    },
    {
      "intent": "Python: sorting items in a dictionary by a part of a key?",
      "rewritten_intent": "Sort items in dictionary `d`  using the first part of the key after splitting the key",
      "snippet": "sorted(list(d.items()), key=lambda name_num: (name_num[0].rsplit(None, 1)[0], name_num[1]))",
      "question_id": 15795525
    },
    {
      "intent": "Find non-common elements in lists",
      "rewritten_intent": "create a set that is the exclusive or of [1, 2, 3] and [3, 4, 5]",
      "snippet": "set([1, 2, 3]) ^ set([3, 4, 5])",
      "question_id": 11348347
    },
    {
      "intent": "python dict comprehension with two ranges",
      "rewritten_intent": "convert the zip of range `(1, 5)` and range `(7, 11)` into a dictionary",
      "snippet": "dict(zip(list(range(1, 5)), list(range(7, 11))))",
      "question_id": 18789262
    },
    {
      "intent": "case insensitive string comparison",
      "rewritten_intent": "case insensitive string comparison between `string1` and `string2`",
      "snippet": "(string1.lower() == string2.lower())",
      "question_id": 319426
    },
    {
      "intent": "case insensitive string comparison",
      "rewritten_intent": "case insensitive string comparison between `first` and `second`",
      "snippet": "(first.lower() == second.lower())",
      "question_id": 319426
    },
    {
      "intent": "case insensitive string comparison",
      "rewritten_intent": "case insensitive comparison between strings `first` and `second`",
      "snippet": "(first.upper() == second.upper())",
      "question_id": 319426
    },
    {
      "intent": "How to remove multiple indexes from a list at the same time?",
      "rewritten_intent": "remove multiple values from a list `my_list` at the same time with index starting at `2` and ending just before `6`.",
      "snippet": "del my_list[2:6]",
      "question_id": 11303225
    },
    {
      "intent": "Python regular expression with codons",
      "rewritten_intent": "match regex pattern 'TAA(?:[ATGC]{3})+?TAA' on string `seq`",
      "snippet": "re.findall('TAA(?:[ATGC]{3})+?TAA', seq)",
      "question_id": 9618050
    },
    {
      "intent": "Sorting a set of values",
      "rewritten_intent": "sort a set `s` by numerical value",
      "snippet": "sorted(s, key=float)",
      "question_id": 17457793
    },
    {
      "intent": "convert an int to a hex string",
      "rewritten_intent": "convert an int 65 to hex string",
      "snippet": "hex(65)",
      "question_id": 2269827
    },
    {
      "intent": "In Python, is there a concise way to use a list comprehension with multiple iterators?",
      "rewritten_intent": "Get a list of tuples with multiple iterators using list comprehension",
      "snippet": "[(i, j) for i in range(1, 3) for j in range(1, 5)]",
      "question_id": 329886
    },
    {
      "intent": "sorting values of python dict using sorted builtin function",
      "rewritten_intent": "reverse sort items in dictionary `mydict` by value",
      "snippet": "sorted(iter(mydict.items()), key=itemgetter(1), reverse=True)",
      "question_id": 9849192
    },
    {
      "intent": "string contains substring",
      "rewritten_intent": "check if string \"substring\" is in string",
      "snippet": "string.find('substring')",
      "question_id": 3437059
    },
    {
      "intent": "Sorting while preserving order in python",
      "rewritten_intent": null,
      "snippet": "sorted(enumerate(a), key=lambda x: x[1])",
      "question_id": 3728017
    },
    {
      "intent": "Python: How to use a list comprehension here?",
      "rewritten_intent": "create a list containing all values associated with key 'baz' in dictionaries of list `foos` using list comprehension",
      "snippet": "[y['baz'] for x in foos for y in x['bar']]",
      "question_id": 4879641
    },
    {
      "intent": "Finding the index of elements based on a condition using python list comprehension",
      "rewritten_intent": "Get all indexes of a list `a` where each value is greater than `2`",
      "snippet": "[i for i in range(len(a)) if a[i] > 2]",
      "question_id": 7270321
    },
    {
      "intent": "Python lambda function",
      "rewritten_intent": "lambda function that adds two operands",
      "snippet": "lambda x, y: x + y",
      "question_id": 6243460
    },
    {
      "intent": "What's the shortest way to count the number of items in a generator/iterator?",
      "rewritten_intent": "count the number of items in a generator/iterator `it`",
      "snippet": "sum(1 for i in it)",
      "question_id": 5384570
    },
    {
      "intent": "how to get tuples from lists using list comprehension in python",
      "rewritten_intent": "get tuples of the corresponding elements from lists `lst` and `lst2`",
      "snippet": "[(x, lst2[i]) for i, x in enumerate(lst)]",
      "question_id": 18990069
    },
    {
      "intent": "how to get tuples from lists using list comprehension in python",
      "rewritten_intent": "create tuples containing elements that are at the same index of list `lst` and list `lst2`",
      "snippet": "[(i, j) for i, j in zip(lst, lst2)]",
      "question_id": 18990069
    },
    {
      "intent": "how to get tuples from lists using list comprehension in python",
      "rewritten_intent": "get tuples from lists `lst` and `lst2` using list comprehension in python 2",
      "snippet": "[(lst[i], lst2[i]) for i in range(len(lst))]",
      "question_id": 18990069
    },
    {
      "intent": "Check if something is not in a list",
      "rewritten_intent": "Check if 3 is not in a list [2, 3, 4]",
      "snippet": "(3 not in [2, 3, 4])",
      "question_id": 10406130
    },
    {
      "intent": "Check if something is not in a list",
      "rewritten_intent": "Check if tuple (2, 3) is not in a list [(2, 3), (5, 6), (9, 1)]",
      "snippet": "((2, 3) not in [(2, 3), (5, 6), (9, 1)])",
      "question_id": 10406130
    },
    {
      "intent": "Check if something is not in a list",
      "rewritten_intent": "Check if tuple (2, 3) is not in a list [(2, 7), (7, 3), \"hi\"]",
      "snippet": "((2, 3) not in [(2, 7), (7, 3), 'hi'])",
      "question_id": 10406130
    },
    {
      "intent": "Check if something is not in a list",
      "rewritten_intent": "Check if 3 is not in the list [4,5,6]",
      "snippet": "(3 not in [4, 5, 6])",
      "question_id": 10406130
    },
    {
      "intent": "Create new list by taking first item from first list, and last item from second list",
      "rewritten_intent": "create a list by appending components from list `a` and reversed list `b` interchangeably",
      "snippet": "[value for pair in zip(a, b[::-1]) for value in pair]",
      "question_id": 35797523
    },
    {
      "intent": "Finding the average of a list",
      "rewritten_intent": "find the mean of elements in list `l`",
      "snippet": "sum(l) / float(len(l))",
      "question_id": 9039961
    },
    {
      "intent": "Python: Finding a (string) key in a dictionary that contains a substring",
      "rewritten_intent": "Find all the items from a dictionary `D` if the key contains the string `Light`",
      "snippet": "[(k, v) for k, v in D.items() if 'Light' in k]",
      "question_id": 3252590
    },
    {
      "intent": "python: rstrip one exact string, respecting order",
      "rewritten_intent": "strip the string `.txt` from anywhere in the string `Boat.txt.txt`",
      "snippet": "\"\"\"Boat.txt.txt\"\"\".replace('.txt', '')",
      "question_id": 18723580
    },
    {
      "intent": "List of all unique characters in a string?",
      "rewritten_intent": "create a list of all unique characters in string 'aaabcabccd'",
      "snippet": "\"\"\"\"\"\".join(list(OrderedDict.fromkeys('aaabcabccd').keys()))",
      "question_id": 13902805
    },
    {
      "intent": "List of all unique characters in a string?",
      "rewritten_intent": "get list of all unique characters in a string 'aaabcabccd'",
      "snippet": "list(set('aaabcabccd'))",
      "question_id": 13902805
    },
    {
      "intent": "List of all unique characters in a string?",
      "rewritten_intent": null,
      "snippet": "\"\"\"\"\"\".join(set('aaabcabccd'))",
      "question_id": 13902805
    },
    {
      "intent": "Multiple 'in' operators in Python?",
      "rewritten_intent": "check if  dictionary `d` contains all keys in list `['somekey', 'someotherkey', 'somekeyggg']`",
      "snippet": "all(word in d for word in ['somekey', 'someotherkey', 'somekeyggg'])",
      "question_id": 7128153
    },
    {
      "intent": "Sorting Python list based on the length of the string",
      "rewritten_intent": "sort list `xs` based on the length of its elements",
      "snippet": "print(sorted(xs, key=len))",
      "question_id": 2587402
    },
    {
      "intent": "Sorting Python list based on the length of the string",
      "rewritten_intent": "sort list of strings `xs` by the length of string",
      "snippet": "xs.sort(key=lambda s: len(s))",
      "question_id": 2587402
    },
    {
      "intent": "get all combination of n binary value",
      "rewritten_intent": "get all combination of n binary values",
      "snippet": "lst = list(itertools.product([0, 1], repeat=n))",
      "question_id": 14931769
    },
    {
      "intent": "get all combination of n binary value",
      "rewritten_intent": "get all combination of n binary values",
      "snippet": "lst = map(list, itertools.product([0, 1], repeat=n))",
      "question_id": 14931769
    },
    {
      "intent": "get all combination of n binary value",
      "rewritten_intent": "get all combination of 3 binary values",
      "snippet": "bin = [0, 1]\n[(x, y, z) for x in bin for y in bin for z in bin]",
      "question_id": 14931769
    },
    {
      "intent": "get all combination of n binary value",
      "rewritten_intent": "get all combination of 3 binary values",
      "snippet": "lst = list(itertools.product([0, 1], repeat=3))",
      "question_id": 14931769
    },
    {
      "intent": "How to get every element in a list of list of lists?",
      "rewritten_intent": "convert nested list 'Cards' into a flat list",
      "snippet": "[a for c in Cards for b in c for a in b]",
      "question_id": 16734590
    },
    {
      "intent": "Sorting dictionary keys in python",
      "rewritten_intent": "create a list containing keys of dictionary `d` and sort it alphabetically",
      "snippet": "sorted(d, key=d.get)",
      "question_id": 575819
    },
    {
      "intent": "How to count the number of occurences of `None` in a list?",
      "rewritten_intent": "print the number of occurences of not `none` in a list `lst` in Python 2",
      "snippet": "print(len([x for x in lst if x is not None]))",
      "question_id": 29422691
    },
    {
      "intent": "Get unique values from a list in python",
      "rewritten_intent": "remove duplicates from list `myset`",
      "snippet": "mynewlist = list(myset)",
      "question_id": 12897374
    },
    {
      "intent": "Get unique values from a list in python",
      "rewritten_intent": "get unique values from the list `['a', 'b', 'c', 'd']`",
      "snippet": "set(['a', 'b', 'c', 'd'])",
      "question_id": 12897374
    },
    {
      "intent": "How to get everything after last slash in a URL?",
      "rewritten_intent": "get every thing after last `/`",
      "snippet": "url.rsplit('/', 1)",
      "question_id": 7253803
    },
    {
      "intent": "How to get everything after last slash in a URL?",
      "rewritten_intent": "get everything after last slash in a url stored in variable 'url'",
      "snippet": "url.rsplit('/', 1)[-1]",
      "question_id": 7253803
    },
    {
      "intent": "How to create a list with the characters of a string?",
      "rewritten_intent": "create a list with the characters of a string `5+6`",
      "snippet": "list('5+6')",
      "question_id": 5501641
    },
    {
      "intent": "Converting a dict into a list",
      "rewritten_intent": "convert dictionary `dict` into a flat list",
      "snippet": "print([y for x in list(dict.items()) for y in x])",
      "question_id": 11351874
    },
    {
      "intent": "Converting a dict into a list",
      "rewritten_intent": "Convert a dictionary `dict` into a list with key and values as list items.",
      "snippet": "[y for x in list(dict.items()) for y in x]",
      "question_id": 11351874
    },
    {
      "intent": "How to create single Python dict from a list of dicts by summing values with common keys?",
      "rewritten_intent": "create a flat dictionary by summing values associated with similar keys in each dictionary of list `dictlist`",
      "snippet": "dict((key, sum(d[key] for d in dictList)) for key in dictList[0])",
      "question_id": 974678
    },
    {
      "intent": "Converting string series to float list",
      "rewritten_intent": "Converting string lists `s` to float list",
      "snippet": "floats = [float(x) for x in s.split()]",
      "question_id": 4004550
    },
    {
      "intent": "Converting string series to float list",
      "rewritten_intent": "Converting string lists `s` to float list",
      "snippet": "floats = map(float, s.split())",
      "question_id": 4004550
    },
    {
      "intent": "How to check if a value exists in a dictionary (python)",
      "rewritten_intent": "check if string `one` exists in the values of dictionary `d`",
      "snippet": "'one' in list(d.values())",
      "question_id": 8214932
    },
    {
      "intent": "How to check if a value exists in a dictionary (python)",
      "rewritten_intent": "Check if value 'one' is among the values of dictionary `d`",
      "snippet": "'one' in iter(d.values())",
      "question_id": 8214932
    },
    {
      "intent": "how to create a dictionary using two lists in python?",
      "rewritten_intent": "create a dictionary using two lists`x` and `y`",
      "snippet": "dict(zip(x, y))",
      "question_id": 15183084
    },
    {
      "intent": "Sorting a list of dicts by dict values",
      "rewritten_intent": "sort a list of dictionaries `a` by dictionary values in descending order",
      "snippet": "sorted(a, key=lambda i: list(i.values())[0], reverse=True)",
      "question_id": 10915391
    },
    {
      "intent": "Sorting a list of dicts by dict values",
      "rewritten_intent": "sorting a list of dictionary `a` by values in descending order",
      "snippet": "sorted(a, key=dict.values, reverse=True)",
      "question_id": 10915391
    },
    {
      "intent": "How to add multiple values to a dictionary key in python?",
      "rewritten_intent": "for a dictionary `a`, set default value for key `somekey` as list and append value `bob`  in that key",
      "snippet": "a.setdefault('somekey', []).append('bob')",
      "question_id": 20585920
    },
    {
      "intent": "Python - sum values in dictionary",
      "rewritten_intent": "sum values in list of dictionaries `example_list` with key 'gold'",
      "snippet": "sum(item['gold'] for item in example_list)",
      "question_id": 11692613
    },
    {
      "intent": "Python - sum values in dictionary",
      "rewritten_intent": "get a sum of all values from key `gold` in a list of dictionary `example_list`",
      "snippet": "sum([item['gold'] for item in example_list])",
      "question_id": 11692613
    },
    {
      "intent": "Python - sum values in dictionary",
      "rewritten_intent": "Get all the values in key `gold` summed from a list of dictionary `myLIst`",
      "snippet": "sum(item['gold'] for item in myLIst)",
      "question_id": 11692613
    },
    {
      "intent": "How to retrieve an element from a set without removing it?",
      "rewritten_intent": "retrieve an element from a set `s` without removing it",
      "snippet": "e = next(iter(s))",
      "question_id": 59825
    },
    {
      "intent": "Python: Find in list",
      "rewritten_intent": "check if 3 is inside list `[1, 2, 3]`",
      "snippet": "3 in [1, 2, 3]",
      "question_id": 9542738
    },
    {
      "intent": "Convert date format python",
      "rewritten_intent": "Represent DateTime object '10/05/2012' with format '%d/%m/%Y' into format '%Y-%m-%d'",
      "snippet": "datetime.datetime.strptime('10/05/2012', '%d/%m/%Y').strftime('%Y-%m-%d')",
      "question_id": 10541640
    },
    {
      "intent": "python : how to convert string literal to raw string literal?",
      "rewritten_intent": "convert a string literal `s` with values `\\\\` to raw string literal",
      "snippet": "s = s.replace('\\\\', '\\\\\\\\')",
      "question_id": 7262828
    },
    {
      "intent": "How to sort multidimensional array by column?",
      "rewritten_intent": "sort a multidimensional array `a` by column with index 1",
      "snippet": "sorted(a, key=lambda x: x[1])",
      "question_id": 20183069
    },
    {
      "intent": "string to list conversion in python",
      "rewritten_intent": "split string `s` to list conversion by ','",
      "snippet": "[x.strip() for x in s.split(',')]",
      "question_id": 9905471
    },
    {
      "intent": "Python regex to match multiple times",
      "rewritten_intent": "Get multiple matched strings using regex pattern `(?:review: )?(http://url.com/(\\\\d+))\\\\s?`",
      "snippet": "pattern = re.compile('(?:review: )?(http://url.com/(\\\\d+))\\\\s?', re.IGNORECASE)",
      "question_id": 17407691
    },
    {
      "intent": "Can a list of all member-dict keys be created from a dict of dicts using a list comprehension?",
      "rewritten_intent": "get a list of the keys in each dictionary in a dictionary of dictionaries `foo`",
      "snippet": "[k for d in list(foo.values()) for k in d]",
      "question_id": 41251391
    },
    {
      "intent": "How to sort python list of strings of numbers",
      "rewritten_intent": "sort list `a` in ascending order based on its elements' float values",
      "snippet": "a = sorted(a, key=lambda x: float(x))",
      "question_id": 17474211
    },
    {
      "intent": "Finding words after keyword in python",
      "rewritten_intent": "finding words in string `s` after keyword 'name'",
      "snippet": "re.search('name (.*)', s)",
      "question_id": 6633678
    },
    {
      "intent": "How do you extract a column from a multi-dimensional array?",
      "rewritten_intent": "Get all the second values from a list of lists `A`",
      "snippet": "[row[1] for row in A]",
      "question_id": 903853
    },
    {
      "intent": "Python - how to sort a list of numerical values in ascending order",
      "rewritten_intent": "sort list `['10', '3', '2']` in ascending order based on the integer value of its elements",
      "snippet": "sorted(['10', '3', '2'], key=int)",
      "question_id": 9758959
    },
    {
      "intent": "Python: How to check a string for substrings from a list?",
      "rewritten_intent": "check if any element of list `substring_list` are in string `string`",
      "snippet": "any(substring in string for substring in substring_list)",
      "question_id": 8122079
    },
    {
      "intent": "How to find and replace nth occurence of word in a sentence using python regular expression?",
      "rewritten_intent": "find and replace 2nd occurrence of word 'cat' by 'Bull' in a sentence 's'",
      "snippet": "re.sub('^((?:(?!cat).)*cat(?:(?!cat).)*)cat', '\\\\1Bull', s)",
      "question_id": 27589325
    },
    {
      "intent": "How to find and replace nth occurence of word in a sentence using python regular expression?",
      "rewritten_intent": "find and replace 2nd occurrence of word 'cat' by 'Bull' in a sentence 's'",
      "snippet": "re.sub('^((.*?cat.*?){1})cat', '\\\\1Bull', s)",
      "question_id": 27589325
    },
    {
      "intent": "Sort list of strings by integer suffix in python",
      "rewritten_intent": "sort list of strings in list `the_list` by integer suffix",
      "snippet": "sorted(the_list, key=lambda k: int(k.split('_')[1]))",
      "question_id": 4287209
    },
    {
      "intent": "Sort list of strings by integer suffix in python",
      "rewritten_intent": "sort list of strings `the_list` by integer suffix before \"_\"",
      "snippet": "sorted(the_list, key=lambda x: int(x.split('_')[1]))",
      "question_id": 4287209
    },
    {
      "intent": "How to group similar items in a list?",
      "rewritten_intent": "make a list of lists in which each list `g` are the elements from list `test` which have the same characters up to the first `_` character",
      "snippet": "[list(g) for _, g in itertools.groupby(test, lambda x: x.split('_')[0])]",
      "question_id": 27659153
    },
    {
      "intent": "How to group similar items in a list?",
      "rewritten_intent": null,
      "snippet": "[list(g) for _, g in itertools.groupby(test, lambda x: x.partition('_')[0])]",
      "question_id": 27659153
    },
    {
      "intent": "Using Python's datetime module, can I get the year that UTC-11 is currently in?",
      "rewritten_intent": "using python's datetime module, get the year that utc-11 is currently in",
      "snippet": "(datetime.datetime.utcnow() - datetime.timedelta(hours=11)).year",
      "question_id": 14043080
    },
    {
      "intent": "How to find the difference between 3 lists that may have duplicate numbers",
      "rewritten_intent": "Get the difference between two lists `[1, 2, 2, 2, 3]` and `[1, 2]` that may have duplicate values",
      "snippet": "Counter([1, 2, 2, 2, 3]) - Counter([1, 2])",
      "question_id": 33435418
    },
    {
      "intent": "How to remove tags from a string in python using regular expressions? (NOT in HTML)",
      "rewritten_intent": "remove tags from a string `mystring`",
      "snippet": "re.sub('<[^>]*>', '', mystring)",
      "question_id": 3662142
    },
    {
      "intent": "How to delete an item in a list if it exists?",
      "rewritten_intent": "delete an item `thing` in a list `some_list` if it exists",
      "snippet": "cleaned_list = [x for x in some_list if x is not thing]",
      "question_id": 4915920
    },
    {
      "intent": "Add to integers in a list",
      "rewritten_intent": "append 4 to list `foo`",
      "snippet": "foo.append(4)",
      "question_id": 4641765
    },
    {
      "intent": "Add to integers in a list",
      "rewritten_intent": "append a list [8, 7] to list `foo`",
      "snippet": "foo.append([8, 7])",
      "question_id": 4641765
    },
    {
      "intent": "Add to integers in a list",
      "rewritten_intent": "insert 77 to index 2 of list `x`",
      "snippet": "x.insert(2, 77)",
      "question_id": 4641765
    },
    {
      "intent": "concatenate lists",
      "rewritten_intent": "concatenate lists `listone` and `listtwo`",
      "snippet": "(listone + listtwo)",
      "question_id": 1720421
    },
    {
      "intent": "How to print backslash with Python?",
      "rewritten_intent": "print backslash",
      "snippet": "print('\\\\')",
      "question_id": 19095796
    },
    {
      "intent": "String formatting in Python",
      "rewritten_intent": "print '[1, 2, 3]'",
      "snippet": "print('[%s, %s, %s]' % (1, 2, 3))",
      "question_id": 517355
    },
    {
      "intent": "String formatting in Python",
      "rewritten_intent": "Display `1 2 3` as a list of string",
      "snippet": "print('[{0}, {1}, {2}]'.format(1, 2, 3))",
      "question_id": 517355
    },
    {
      "intent": "Accessing Python dict values with the key start characters",
      "rewritten_intent": "get values from a dictionary `my_dict` whose key contains the string `Date`",
      "snippet": "[v for k, v in list(my_dict.items()) if 'Date' in k]",
      "question_id": 17106819
    },
    {
      "intent": "Python date string formatting",
      "rewritten_intent": null,
      "snippet": "\"\"\"{0.month}/{0.day}/{0.year}\"\"\".format(my_date)",
      "question_id": 18724607
    },
    {
      "intent": "Python - Combine two dictionaries, concatenate string values?",
      "rewritten_intent": "combine two dictionaries `d ` and `d1`, concatenate string values with identical `keys`",
      "snippet": "dict((k, d.get(k, '') + d1.get(k, '')) for k in keys)",
      "question_id": 17604837
    },
    {
      "intent": "How to generate unique equal hash for equal dictionaries?",
      "rewritten_intent": "generate unique equal hash for equal dictionaries `a` and `b`",
      "snippet": "hash(pformat(a)) == hash(pformat(b))",
      "question_id": 16735786
    },
    {
      "intent": "How to convert nested list of lists into a list of tuples in python 3.3?",
      "rewritten_intent": "convert nested list of lists `[['tom', 'cat'], ['jerry', 'mouse'], ['spark', 'dog']]` into a list of tuples",
      "snippet": "list(map(tuple, [['tom', 'cat'], ['jerry', 'mouse'], ['spark', 'dog']]))",
      "question_id": 18938276
    },
    {
      "intent": "change a string into uppercase",
      "rewritten_intent": "change string `s` to upper case",
      "snippet": "s.upper()",
      "question_id": 9257094
    },
    {
      "intent": "Splitting a semicolon-separated string to a dictionary, in Python",
      "rewritten_intent": "split a string `s` by ';' and convert to a dictionary",
      "snippet": "dict(item.split('=') for item in s.split(';'))",
      "question_id": 186857
    },
    {
      "intent": "Python getting a string (key + value) from Python Dictionary",
      "rewritten_intent": "Get a string with string formatting from dictionary `d`",
      "snippet": "\"\"\", \"\"\".join(['{}_{}'.format(k, v) for k, v in d.items()])",
      "question_id": 17462994
    },
    {
      "intent": "Easier way to add multiple list items?",
      "rewritten_intent": "Sum of sums of each list, in a list of lists named 'lists'.",
      "snippet": "sum(sum(x) for x in lists)",
      "question_id": 15465204
    },
    {
      "intent": "How do I check if all elements in a list are the same?",
      "rewritten_intent": "check if all elements in list `mylist` are the same",
      "snippet": "len(set(mylist)) == 1",
      "question_id": 22240602
    },
    {
      "intent": "How to split a string at line breaks in python?",
      "rewritten_intent": "split a string `s` at line breaks `\\r\\n`",
      "snippet": "[map(int, x.split('\\t')) for x in s.rstrip().split('\\r\\n')]",
      "question_id": 21205074
    },
    {
      "intent": "Create a hierarchy from a dictionary of lists",
      "rewritten_intent": "sort a dictionary `a` by values that are list type",
      "snippet": "t = sorted(list(a.items()), key=lambda x: x[1])",
      "question_id": 20230211
    },
    {
      "intent": "Replacing the empty strings in a string",
      "rewritten_intent": "insert string `string1` after each character of `string2`",
      "snippet": "string2.replace('', string1)[len(string1):-len(string1)]",
      "question_id": 14431731
    },
    {
      "intent": "getting every possible combination in a list",
      "rewritten_intent": "getting every possible combination of two elements in a list",
      "snippet": "list(itertools.combinations([1, 2, 3, 4, 5, 6], 2))",
      "question_id": 5106228
    },
    {
      "intent": "Python 3: How do I get a string literal representation of a byte string?",
      "rewritten_intent": "get a utf-8 string literal representation of byte string `x`",
      "snippet": "\"\"\"x = {}\"\"\".format(x.decode('utf8')).encode('utf8')",
      "question_id": 15390374
    },
    {
      "intent": "Checking whether a variable is an integer",
      "rewritten_intent": "check if `x` is an integer",
      "snippet": "isinstance(x, int)",
      "question_id": 3501382
    },
    {
      "intent": "Checking whether a variable is an integer",
      "rewritten_intent": "check if `x` is an integer",
      "snippet": "(type(x) == int)",
      "question_id": 3501382
    },
    {
      "intent": "How to get the n next values of a generator in a list (python)",
      "rewritten_intent": "create a list containing the `n` next values of generator `it`",
      "snippet": "[next(it) for _ in range(n)]",
      "question_id": 4152376
    },
    {
      "intent": "How to get the n next values of a generator in a list (python)",
      "rewritten_intent": "get list of n next values of a generator `it`",
      "snippet": "list(itertools.islice(it, 0, n, 1))",
      "question_id": 4152376
    },
    {
      "intent": "How can I compare two lists in python and return matches",
      "rewritten_intent": "compare two lists in python `a` and `b` and return matches",
      "snippet": "set(a).intersection(b)",
      "question_id": 1388818
    },
    {
      "intent": "How can I compare two lists in python and return matches",
      "rewritten_intent": null,
      "snippet": "[i for i, j in zip(a, b) if i == j]",
      "question_id": 1388818
    },
    {
      "intent": "How to print a list with integers without the brackets, commas and no quotes?",
      "rewritten_intent": "convert list `data` into a string of its elements",
      "snippet": "print(''.join(map(str, data)))",
      "question_id": 17757450
    },
    {
      "intent": "python regex: match a string with only one instance of a character",
      "rewritten_intent": "match regex pattern '\\\\$[0-9]+[^\\\\$]*$' on string '$1 off delicious $5 ham.'",
      "snippet": "re.match('\\\\$[0-9]+[^\\\\$]*$', '$1 off delicious $5 ham.')",
      "question_id": 3166619
    },
    {
      "intent": "A sequence of empty lists of length n in Python?",
      "rewritten_intent": "a sequence of empty lists of length `n`",
      "snippet": "[[] for _ in range(n)]",
      "question_id": 23612271
    },
    {
      "intent": "How to use a dot in Python format strings?",
      "rewritten_intent": "Print a dictionary `{'user': {'name': 'Markus'}}` with string formatting",
      "snippet": "\"\"\"Hello {user[name]}\"\"\".format(**{'user': {'name': 'Markus'}})",
      "question_id": 29035168
    },
    {
      "intent": "Python: using a dict to speed sorting of a list of tuples",
      "rewritten_intent": "create a dictionary `list_dict` containing each tuple in list `tuple_list` as values and the tuple's first element as the corresponding key",
      "snippet": "list_dict = {t[0]: t for t in tuple_list}",
      "question_id": 20059427
    },
    {
      "intent": "Generate random integers between 0 and 9",
      "rewritten_intent": "Generate a random integer between 0 and 9",
      "snippet": "randint(0, 9)",
      "question_id": 3996904
    },
    {
      "intent": "Generate random integers between 0 and 9",
      "rewritten_intent": "Generate a random integer between `a` and `b`",
      "snippet": "random.randint(a, b)",
      "question_id": 3996904
    },
    {
      "intent": "Generate random integers between 0 and 9",
      "rewritten_intent": "Generate random integers between 0 and 9",
      "snippet": "print((random.randint(0, 9)))",
      "question_id": 3996904
    },
    {
      "intent": "Reverse a string in Python two characters at a time (Network byte order)",
      "rewritten_intent": "reverse a string `a` by 2 characters at a time",
      "snippet": "\"\"\"\"\"\".join(reversed([a[i:i + 2] for i in range(0, len(a), 2)]))",
      "question_id": 5864271
    },
    {
      "intent": "How to check if all elements of a list matches a condition?",
      "rewritten_intent": "check if the third element of all the lists in a list \"items\" is equal to zero.",
      "snippet": "any(item[2] == 0 for item in items)",
      "question_id": 10666163
    },
    {
      "intent": "How to check if all elements of a list matches a condition?",
      "rewritten_intent": "Find all the lists from a lists of list 'items' if third element in all sub-lists is '0'",
      "snippet": "[x for x in items if x[2] == 0]",
      "question_id": 10666163
    },
    {
      "intent": "Python: sorting dictionary of dictionaries",
      "rewritten_intent": "sort dictionary of dictionaries `dic` according to the key 'Fisher'",
      "snippet": "sorted(list(dic.items()), key=lambda x: x[1]['Fisher'], reverse=True)",
      "question_id": 16412563
    },
    {
      "intent": "extract digits in a simple way from a python string",
      "rewritten_intent": null,
      "snippet": "map(int, re.findall('\\\\d+', s))",
      "question_id": 10365225
    },
    {
      "intent": "Python How to get every first element in 2 Dimensional List",
      "rewritten_intent": "get value of first index of each element in list `a`",
      "snippet": "[x[0] for x in a]",
      "question_id": 30062429
    },
    {
      "intent": "Python How to get every first element in 2 Dimensional List",
      "rewritten_intent": "python how to get every first element in 2 dimensional list `a`",
      "snippet": "[i[0] for i in a]",
      "question_id": 30062429
    },
    {
      "intent": "Regular expression to remove line breaks",
      "rewritten_intent": "remove line breaks from string `textblock` using regex",
      "snippet": "re.sub('(?<=[a-z])\\\\r?\\\\n', ' ', textblock)",
      "question_id": 5075247
    },
    {
      "intent": "Can Python test the membership of multiple values in a list?",
      "rewritten_intent": "test if either of strings `a` or `b` are members of the set of strings, `['b', 'a', 'foo', 'bar']`",
      "snippet": "set(['a', 'b']).issubset(['b', 'a', 'foo', 'bar'])",
      "question_id": 6159313
    },
    {
      "intent": "Can Python test the membership of multiple values in a list?",
      "rewritten_intent": "Check if all the values in a list `['a', 'b']` are present in another list `['b', 'a', 'foo', 'bar']`",
      "snippet": "all(x in ['b', 'a', 'foo', 'bar'] for x in ['a', 'b'])",
      "question_id": 6159313
    },
    {
      "intent": "Remove specific characters from a string",
      "rewritten_intent": "Remove characters \"!@#$\" from a string `line`",
      "snippet": "line.translate(None, '!@#$')",
      "question_id": 3939361
    },
    {
      "intent": "Remove specific characters from a string",
      "rewritten_intent": "Remove characters \"!@#$\" from a string `line`",
      "snippet": "line = re.sub('[!@#$]', '', line)",
      "question_id": 3939361
    },
    {
      "intent": "Remove specific characters from a string",
      "rewritten_intent": "Remove string \"1\" from string `string`",
      "snippet": "string.replace('1', '')",
      "question_id": 3939361
    },
    {
      "intent": "Remove specific characters from a string",
      "rewritten_intent": "Remove character `char` from a string `a`",
      "snippet": "a = a.replace(char, '')",
      "question_id": 3939361
    },
    {
      "intent": "Remove specific characters from a string",
      "rewritten_intent": "Remove characters in `b` from a string `a`",
      "snippet": "a = a.replace(char, '')",
      "question_id": 3939361
    },
    {
      "intent": "Storing a collection of integers in a list",
      "rewritten_intent": "store integer 3, 4, 1 and 2 in a list",
      "snippet": "[3, 4, 1, 2]",
      "question_id": 19672101
    },
    {
      "intent": "I'm looking for a pythonic way to insert a space before capital letters",
      "rewritten_intent": "insert spaces before capital letters in string `text`",
      "snippet": "re.sub('([a-z](?=[A-Z])|[A-Z](?=[A-Z][a-z]))', '\\\\1 ', text)",
      "question_id": 199059
    },
    {
      "intent": "How can I convert Unicode to uppercase to print it?",
      "rewritten_intent": "print unicode string `ex\\xe1mple` in uppercase",
      "snippet": "print('ex\\xe1mple'.upper())",
      "question_id": 727507
    },
    {
      "intent": "Remove string from list if from substring list",
      "rewritten_intent": "get last element of string splitted by '\\\\' from list of strings `list_dirs`",
      "snippet": "[l.split('\\\\')[-1] for l in list_dirs]",
      "question_id": 28657018
    },
    {
      "intent": "What's the Pythonic way to combine two sequences into a dictionary?",
      "rewritten_intent": "combine two sequences into a dictionary",
      "snippet": "dict(zip(keys, values))",
      "question_id": 579856
    },
    {
      "intent": "How to Customize the time format for Python logging?",
      "rewritten_intent": "customize the time format in python logging",
      "snippet": "formatter = logging.Formatter('%(asctime)s;%(levelname)s;%(message)s')",
      "question_id": 3220284
    },
    {
      "intent": "Python Regex replace",
      "rewritten_intent": "Replace comma with dot in a string `original_string` using regex",
      "snippet": "new_string = re.sub('\"(\\\\d+),(\\\\d+)\"', '\\\\1.\\\\2', original_string)",
      "question_id": 8172861
    },
    {
      "intent": "A simple way to remove multiple spaces in a string in Python",
      "rewritten_intent": "remove multiple spaces in a string `foo`",
      "snippet": "\"\"\" \"\"\".join(foo.split())",
      "question_id": 1546226
    },
    {
      "intent": "How to convert decimal to binary list in python",
      "rewritten_intent": "convert decimal 8 to a list of its binary values",
      "snippet": "list('{0:0b}'.format(8))",
      "question_id": 13557937
    },
    {
      "intent": "How to convert decimal to binary list in python",
      "rewritten_intent": "convert decimal integer 8 to a list of its binary values as elements",
      "snippet": "[int(x) for x in list('{0:0b}'.format(8))]",
      "question_id": 13557937
    },
    {
      "intent": "How to convert decimal to binary list in python",
      "rewritten_intent": "convert decimal `8` to binary list",
      "snippet": "[int(x) for x in bin(8)[2:]]",
      "question_id": 13557937
    },
    {
      "intent": "Is it possible to take an ordered \"slice\" of a dictionary in Python based on a list of keys?",
      "rewritten_intent": "get key-value pairs in dictionary `my_dictionary` for all keys in list `my_list` in the order they appear in `my_list`",
      "snippet": "dict(zip(my_list, map(my_dictionary.get, my_list)))",
      "question_id": 9932549
    },
    {
      "intent": "Format time string in Python 3.3",
      "rewritten_intent": "format current date to pattern '{%Y-%m-%d %H:%M:%S}'",
      "snippet": "time.strftime('{%Y-%m-%d %H:%M:%S}')",
      "question_id": 21618351
    },
    {
      "intent": "How do I sort a Python list of time values?",
      "rewritten_intent": "sort list `['14:10:01', '03:12:08']`",
      "snippet": "sorted(['14:10:01', '03:12:08'])",
      "question_id": 17713873
    },
    {
      "intent": "Regex for location matching - Python",
      "rewritten_intent": "find all occurrences of regex pattern '(?:\\\\w+(?:\\\\s+\\\\w+)*,\\\\s)+(?:\\\\w+(?:\\\\s\\\\w+)*)' in string `x`",
      "snippet": "re.findall('(?:\\\\w+(?:\\\\s+\\\\w+)*,\\\\s)+(?:\\\\w+(?:\\\\s\\\\w+)*)', x)",
      "question_id": 20778951
    },
    {
      "intent": "How do I iterate over a Python dictionary, ordered by values?",
      "rewritten_intent": "sort dictionary `dictionary` in ascending order by its values",
      "snippet": "sorted(list(dictionary.items()), key=operator.itemgetter(1))",
      "question_id": 674509
    },
    {
      "intent": "How do I iterate over a Python dictionary, ordered by values?",
      "rewritten_intent": "Iterate over dictionary `d` in ascending order of values",
      "snippet": "sorted(iter(d.items()), key=lambda x: x[1])",
      "question_id": 674509
    },
    {
      "intent": "How do I iterate over a Python dictionary, ordered by values?",
      "rewritten_intent": "iterate over a python dictionary, ordered by values",
      "snippet": "sorted(list(dictionary.items()), key=lambda x: x[1])",
      "question_id": 674509
    },
    {
      "intent": "Zip with list output instead of tuple",
      "rewritten_intent": "Get the zip output as list from the lists `[1, 2, 3]`, `[4, 5, 6]`, `[7, 8, 9]`",
      "snippet": "[list(a) for a in zip([1, 2, 3], [4, 5, 6], [7, 8, 9])]",
      "question_id": 8372399
    },
    {
      "intent": "How to repeat individual characters in strings in Python",
      "rewritten_intent": "repeat every character for 7 times in string 'map'",
      "snippet": "\"\"\"\"\"\".join(map(lambda x: x * 7, 'map'))",
      "question_id": 38273353
    },
    {
      "intent": "test a boolean expression in a Python string",
      "rewritten_intent": "evaluate the expression '20<30'",
      "snippet": "eval('20<30')",
      "question_id": 10586778
    },
    {
      "intent": "Python copy a list of lists",
      "rewritten_intent": "Copy list `old_list` and name it `new_list`",
      "snippet": "new_list = [x[:] for x in old_list]",
      "question_id": 28684154
    },
    {
      "intent": "Convert scientific notation to decimal - python",
      "rewritten_intent": "convert scientific notation of variable `a` to decimal",
      "snippet": "\"\"\"{:.50f}\"\"\".format(float(a[0] / a[1]))",
      "question_id": 16962512
    },
    {
      "intent": "get count of values associated with key in dict python",
      "rewritten_intent": "count the number of True values associated with key 'success' in dictionary `d`",
      "snippet": "sum(1 if d['success'] else 0 for d in s)",
      "question_id": 35269374
    },
    {
      "intent": "get count of values associated with key in dict python",
      "rewritten_intent": "get the sum of values associated with the key \u2018success\u2019 for a list of dictionaries `s`",
      "snippet": "sum(d['success'] for d in s)",
      "question_id": 35269374
    },
    {
      "intent": "get the logical xor of two variables",
      "rewritten_intent": "get logical xor of `a` and `b`",
      "snippet": "(bool(a) != bool(b))",
      "question_id": 432842
    },
    {
      "intent": "get the logical xor of two variables",
      "rewritten_intent": "get logical xor of `a` and `b`",
      "snippet": "((a and (not b)) or ((not a) and b))",
      "question_id": 432842
    },
    {
      "intent": "get the logical xor of two variables",
      "rewritten_intent": "get logical xor of `a` and `b`",
      "snippet": "(bool(a) ^ bool(b))",
      "question_id": 432842
    },
    {
      "intent": "get the logical xor of two variables",
      "rewritten_intent": "get logical xor of `a` and `b`",
      "snippet": "xor(bool(a), bool(b))",
      "question_id": 432842
    },
    {
      "intent": "get the logical xor of two variables",
      "rewritten_intent": "get the logical xor of two variables `str1` and `str2`",
      "snippet": "return (bool(str1) ^ bool(str2))",
      "question_id": 432842
    },
    {
      "intent": "How to alphabetically sort array of dictionaries on single key?",
      "rewritten_intent": "Sort list `my_list` in alphabetical order based on the values associated with key 'name' of each dictionary in the list",
      "snippet": "my_list.sort(key=operator.itemgetter('name'))",
      "question_id": 5048841
    },
    {
      "intent": "Python: Split string by list of separators",
      "rewritten_intent": "split a string `a , b; cdf`  using both commas and semicolons as delimeters",
      "snippet": "re.split('\\\\s*,\\\\s*|\\\\s*;\\\\s*', 'a , b; cdf')",
      "question_id": 4697006
    },
    {
      "intent": "Python: Split string by list of separators",
      "rewritten_intent": "Split a string `string` by multiple separators `,` and `;`",
      "snippet": "[t.strip() for s in string.split(',') for t in s.split(';')]",
      "question_id": 4697006
    },
    {
      "intent": "lambda in python",
      "rewritten_intent": "make a function `f` that calculates the sum of two integer variables `x` and `y`",
      "snippet": "f = lambda x, y: x + y",
      "question_id": 7974442
    },
    {
      "intent": "Shortest way to convert these bytes to int in python?",
      "rewritten_intent": "convert bytes string `s`  to an unsigned integer",
      "snippet": "struct.unpack('>q', s)[0]",
      "question_id": 4433017
    },
    {
      "intent": "best way to extract subset of key-value pairs from python dictionary object",
      "rewritten_intent": "best way to extract subset of key-value pairs with keys matching 'l', 'm', or 'n' from python dictionary object",
      "snippet": "{k: bigdict[k] for k in list(bigdict.keys()) & {'l', 'm', 'n'}}",
      "question_id": 5352546
    },
    {
      "intent": "best way to extract subset of key-value pairs from python dictionary object",
      "rewritten_intent": "extract subset of key-value pairs with keys as `('l', 'm', 'n')` from dictionary object `bigdict`",
      "snippet": "dict((k, bigdict[k]) for k in ('l', 'm', 'n'))",
      "question_id": 5352546
    },
    {
      "intent": "best way to extract subset of key-value pairs from python dictionary object",
      "rewritten_intent": "Get items from a dictionary `bigdict` where the keys are present in `('l', 'm', 'n')`",
      "snippet": "{k: bigdict.get(k, None) for k in ('l', 'm', 'n')}",
      "question_id": 5352546
    },
    {
      "intent": "best way to extract subset of key-value pairs from python dictionary object",
      "rewritten_intent": "Extract subset of key value pair for keys 'l', 'm', 'n' from `bigdict` in python 3",
      "snippet": "{k: bigdict[k] for k in ('l', 'm', 'n')}",
      "question_id": 5352546
    },
    {
      "intent": "Remove string between 2 characters from text string",
      "rewritten_intent": "remove all square brackets from string 'abcd[e]yth[ac]ytwec'",
      "snippet": "re.sub('\\\\[.*?\\\\]', '', 'abcd[e]yth[ac]ytwec')",
      "question_id": 9470142
    },
    {
      "intent": "How to capture the entire string while using 'lookaround' with chars in regex?",
      "rewritten_intent": "find all substrings in string `mystring` composed only of letters `a` and `b` where each `a` is directly preceded and succeeded by `b`",
      "snippet": "re.findall('\\\\b(?:b+a)+b+\\\\b', mystring)",
      "question_id": 32926587
    },
    {
      "intent": "in Python, how to convert list of float numbers to string with certain format?",
      "rewritten_intent": "convert list `lst` of tuples of floats to list `str_list` of tuples of strings of floats in scientific notation with eight decimal point precision",
      "snippet": "str_list = [tuple('{0:.8e}'.format(flt) for flt in sublist) for sublist in lst]",
      "question_id": 16127862
    },
    {
      "intent": "in Python, how to convert list of float numbers to string with certain format?",
      "rewritten_intent": "convert list of sublists `lst` of floats to a list of sublists `str_list` of strings of integers in scientific notation with 8 decimal points",
      "snippet": "str_list = [['{0:.8e}'.format(flt) for flt in sublist] for sublist in lst]",
      "question_id": 16127862
    },
    {
      "intent": "Getting the first elements per row in an array in Python?",
      "rewritten_intent": "Create a tuple `t` containing first element of each tuple in tuple `s`",
      "snippet": "t = tuple(x[0] for x in s)",
      "question_id": 2054416
    },
    {
      "intent": "How to obtain the day of the week in a 3 letter format from a datetime object in python?",
      "rewritten_intent": "obtain the current day of the week in a 3 letter format from a datetime object",
      "snippet": "datetime.datetime.now().strftime('%a')",
      "question_id": 15509617
    },
    {
      "intent": "get the <a href=\"http://en.wikipedia.org/wiki/ASCII\" rel=\"nofollow noreferrer\">ASCII</a> value of a character as an int",
      "rewritten_intent": "get the ASCII value of a character 'a' as an int",
      "snippet": "ord('a')",
      "question_id": 227459
    },
    {
      "intent": "get the <a href=\"http://en.wikipedia.org/wiki/ASCII\" rel=\"nofollow noreferrer\">ASCII</a> value of a character as an int",
      "rewritten_intent": "get the ASCII value of a character u'\u3042' as an int",
      "snippet": "ord('\\u3042')",
      "question_id": 227459
    },
    {
      "intent": "get the <a href=\"http://en.wikipedia.org/wiki/ASCII\" rel=\"nofollow noreferrer\">ASCII</a> value of a character as an int",
      "rewritten_intent": "get the ASCII value of a character as an int",
      "snippet": "ord()",
      "question_id": 227459
    },
    {
      "intent": "Convert binary to list of digits Python",
      "rewritten_intent": "create a list containing the digits values from binary string `x` as elements",
      "snippet": "[int(d) for d in bin(x)[2:]]",
      "question_id": 13081090
    },
    {
      "intent": "How to get a max string length in nested lists",
      "rewritten_intent": "get the max string length in list `i`",
      "snippet": "max(len(word) for word in i)",
      "question_id": 39373620
    },
    {
      "intent": "How to get a max string length in nested lists",
      "rewritten_intent": "get the maximum string length in nested list `i`",
      "snippet": "len(max(i, key=len))",
      "question_id": 39373620
    },
    {
      "intent": "How do I sort a list of strings in Python?",
      "rewritten_intent": "sort list `mylist` alphabetically",
      "snippet": "mylist.sort(key=lambda x: x.lower())",
      "question_id": 36139
    },
    {
      "intent": "How do I sort a list of strings in Python?",
      "rewritten_intent": "sort list `mylist` in alphabetical order",
      "snippet": "mylist.sort(key=str.lower)",
      "question_id": 36139
    },
    {
      "intent": "How do I sort a list of strings in Python?",
      "rewritten_intent": "sort a list of strings 'mylist'.",
      "snippet": "mylist.sort()",
      "question_id": 36139
    },
    {
      "intent": "How do I sort a list of strings in Python?",
      "rewritten_intent": "sort a list of strings `list`",
      "snippet": "list.sort()",
      "question_id": 36139
    },
    {
      "intent": "Remove the first word in a Python string?",
      "rewritten_intent": "remove first word in string `s`",
      "snippet": "s.split(' ', 1)[1]",
      "question_id": 12883376
    },
    {
      "intent": "How do you split a list into evenly sized chunks?",
      "rewritten_intent": "split list `l` into `n` sized lists",
      "snippet": "[l[i:i + n] for i in range(0, len(l), n)]",
      "question_id": 312443
    },
    {
      "intent": "How do you split a list into evenly sized chunks?",
      "rewritten_intent": "split a list `l` into evenly sized chunks `n`",
      "snippet": "[l[i:i + n] for i in range(0, len(l), n)]",
      "question_id": 312443
    },
    {
      "intent": "Python Regex - Remove special characters but preserve apostraphes",
      "rewritten_intent": "remove all non -word, -whitespace, or -apostrophe characters from string `doesn't this mean it -technically- works?`",
      "snippet": "re.sub(\"[^\\\\w' ]\", '', \"doesn't this mean it -technically- works?\")",
      "question_id": 11403474
    },
    {
      "intent": "find all digits between a character in python",
      "rewritten_intent": "find all digits between two characters `\\xab` and `\\xbb`in a string `text`",
      "snippet": "print(re.findall('\\\\d+', '\\n'.join(re.findall('\\xab([\\\\s\\\\S]*?)\\xbb', text))))",
      "question_id": 31650399
    },
    {
      "intent": "Easy way to convert a unicode list to a list containing python strings?",
      "rewritten_intent": "Encode each value to 'UTF8' in the list `EmployeeList`",
      "snippet": "[x.encode('UTF8') for x in EmployeeList]",
      "question_id": 18272066
    },
    {
      "intent": "How can I generate a list of consecutive numbers?",
      "rewritten_intent": "generate a list of consecutive integers from 0 to 8",
      "snippet": "list(range(9))",
      "question_id": 29558007
    },
    {
      "intent": "How to make a Python string out of non-ascii \"bytes\"",
      "rewritten_intent": "convert list `myintegers` into a unicode string",
      "snippet": "\"\"\"\"\"\".join(chr(i) for i in myintegers)",
      "question_id": 3855093
    },
    {
      "intent": "Removing items from unnamed lists in Python",
      "rewritten_intent": "Remove the string value `item` from a list of strings `my_sequence`",
      "snippet": "[item for item in my_sequence if item != 'item']",
      "question_id": 14961014
    },
    {
      "intent": "randomly select an item from a list",
      "rewritten_intent": "randomly select an item from list `foo`",
      "snippet": "random.choice(foo)",
      "question_id": 306400
    },
    {
      "intent": "Python Check if all of the following items is in a list",
      "rewritten_intent": "check if all of the following items in list `['a', 'b']` are in a list `['a', 'b', 'c']`",
      "snippet": "set(['a', 'b']).issubset(['a', 'b', 'c'])",
      "question_id": 3931541
    },
    {
      "intent": "Python Check if all of the following items is in a list",
      "rewritten_intent": "Check if all the items in a list `['a', 'b']` exists in another list `l`",
      "snippet": "set(['a', 'b']).issubset(set(l))",
      "question_id": 3931541
    },
    {
      "intent": "Most pythonic way to convert a list of tuples",
      "rewritten_intent": "to convert a list of tuples `list_of_tuples` into list of lists",
      "snippet": "[list(t) for t in zip(*list_of_tuples)]",
      "question_id": 18637651
    },
    {
      "intent": "Most pythonic way to convert a list of tuples",
      "rewritten_intent": "group a list `list_of_tuples` of tuples by values",
      "snippet": "zip(*list_of_tuples)",
      "question_id": 18637651
    },
    {
      "intent": "Splitting string and removing whitespace Python",
      "rewritten_intent": "Split string with comma (,) and remove whitespace from a string 'my_string'",
      "snippet": "[item.strip() for item in my_string.split(',')]",
      "question_id": 21261330
    },
    {
      "intent": "How to convert a tuple to a string in Python?",
      "rewritten_intent": "convert a set of tuples `queryresult` to a string `emaillist`",
      "snippet": "emaillist = '\\n'.join(item[0] for item in queryresult)",
      "question_id": 8704952
    },
    {
      "intent": "How to convert a tuple to a string in Python?",
      "rewritten_intent": "convert a set of tuples `queryresult` to a list of strings",
      "snippet": "[item[0] for item in queryresult]",
      "question_id": 8704952
    },
    {
      "intent": "How to convert a tuple to a string in Python?",
      "rewritten_intent": "convert a list of tuples `queryresult` to a string from the first indexes.",
      "snippet": "emaillist = '\\n'.join([item[0] for item in queryresult])",
      "question_id": 8704952
    },
    {
      "intent": "How to declare an array in python",
      "rewritten_intent": "Initialize a list `a` with `10000` items and each item's value `0`",
      "snippet": "a = [0] * 10000",
      "question_id": 36113747
    },
    {
      "intent": "How can I remove duplicate words in a string with Python?",
      "rewritten_intent": "Keep only unique words in list of words `words` and join into string",
      "snippet": "print(' '.join(sorted(set(words), key=words.index)))",
      "question_id": 7794208
    },
    {
      "intent": "How to generate random numbers that are different?",
      "rewritten_intent": "generate 6 random numbers between 1 and 50",
      "snippet": "random.sample(range(1, 50), 6)",
      "question_id": 13628725
    },
    {
      "intent": "How to generate random numbers that are different?",
      "rewritten_intent": "generate six unique random numbers in the range of 1 to 49.",
      "snippet": "random.sample(range(1, 50), 6)",
      "question_id": 13628725
    },
    {
      "intent": "Dictionary to lowercase in Python",
      "rewritten_intent": "lowercase keys and values in dictionary `{'My Key': 'My Value'}`",
      "snippet": "{k.lower(): v.lower() for k, v in list({'My Key': 'My Value'}.items())}",
      "question_id": 764235
    },
    {
      "intent": "Dictionary to lowercase in Python",
      "rewritten_intent": "lowercase all keys and values in dictionary `{'My Key': 'My Value'}`",
      "snippet": "dict((k.lower(), v) for k, v in {'My Key': 'My Value'}.items())",
      "question_id": 764235
    },
    {
      "intent": "Dictionary to lowercase in Python",
      "rewritten_intent": "Convert each key,value pair in a dictionary `{'My Key': 'My Value'}` to lowercase",
      "snippet": "dict((k.lower(), v.lower()) for k, v in {'My Key': 'My Value'}.items())",
      "question_id": 764235
    },
    {
      "intent": "sorting list of list in python",
      "rewritten_intent": "sorting the lists in list of lists `data`",
      "snippet": "[sorted(item) for item in data]",
      "question_id": 34197047
    },
    {
      "intent": "how to sort 2d array by row in python?",
      "rewritten_intent": "sort 2d array `matrix` by row with index 1",
      "snippet": "sorted(matrix, key=itemgetter(1))",
      "question_id": 2173797
    },
    {
      "intent": "Finding index of the same elements in a list",
      "rewritten_intent": "Get all indexes of a letter `e` from a string `word`",
      "snippet": "[index for index, letter in enumerate(word) if letter == 'e']",
      "question_id": 7658932
    },
    {
      "intent": "Python regular expressions - how to capture multiple groups from a wildcard expression?",
      "rewritten_intent": "split string 'abcdefg' into a list of characters",
      "snippet": "re.findall('\\\\w', 'abcdefg')",
      "question_id": 464736
    },
    {
      "intent": "Split Strings with Multiple Delimiters?",
      "rewritten_intent": "split string \"a;bcd,ef g\" on delimiters ';' and ','",
      "snippet": "\"\"\"a;bcd,ef g\"\"\".replace(';', ' ').replace(',', ' ').split()",
      "question_id": 1059559
    },
    {
      "intent": "Why can you loop through an implicit tuple in a for loop, but not a comprehension in Python?",
      "rewritten_intent": "get a list each value `i` in the implicit tuple `range(3)`",
      "snippet": "list(i for i in range(3))",
      "question_id": 41127441
    },
    {
      "intent": "How to flatten a tuple in python",
      "rewritten_intent": "flatten a tuple `l`",
      "snippet": "[(a, b, c) for a, (b, c) in l]",
      "question_id": 18500541
    },
    {
      "intent": "Python - how to convert int to string represent a 32bit Hex number",
      "rewritten_intent": "convert 3652458 to string represent a 32bit hex number",
      "snippet": "\"\"\"0x{0:08X}\"\"\".format(3652458)",
      "question_id": 7253907
    },
    {
      "intent": "How can I convert a Python dictionary to a list of tuples?",
      "rewritten_intent": "convert a python dictionary `d` to a list of tuples",
      "snippet": "[(v, k) for k, v in list(d.items())]",
      "question_id": 674519
    },
    {
      "intent": "How can I convert a Python dictionary to a list of tuples?",
      "rewritten_intent": "convert dictionary of pairs `d` to a list of tuples",
      "snippet": "[(v, k) for k, v in d.items()]",
      "question_id": 674519
    },
    {
      "intent": "How can I convert a Python dictionary to a list of tuples?",
      "rewritten_intent": "convert python 2 dictionary `a` to a list of tuples where the value is the first tuple element and the key is the second tuple element",
      "snippet": "[(v, k) for k, v in a.items()]",
      "question_id": 674519
    },
    {
      "intent": "How can I convert a Python dictionary to a list of tuples?",
      "rewritten_intent": "convert a python dictionary 'a' to a list of tuples",
      "snippet": "[(k, v) for k, v in a.items()]",
      "question_id": 674519
    },
    {
      "intent": "What's the easiest way to convert a list of hex byte strings to a list of hex integers?",
      "rewritten_intent": "convert a list of hex byte strings `['BB', 'A7', 'F6', '9E']` to a list of hex integers",
      "snippet": "[int(x, 16) for x in ['BB', 'A7', 'F6', '9E']]",
      "question_id": 2397687
    },
    {
      "intent": "What's the easiest way to convert a list of hex byte strings to a list of hex integers?",
      "rewritten_intent": "convert the elements of list `L` from hex byte strings to hex integers",
      "snippet": "[int(x, 16) for x in L]",
      "question_id": 2397687
    },
    {
      "intent": "Is there a cleaner way to iterate through all binary 4-tuples?",
      "rewritten_intent": "create a list containing a four elements long tuples of permutations of binary values",
      "snippet": "itertools.product(list(range(2)), repeat=4)",
      "question_id": 32292554
    },
    {
      "intent": "Python - Get Yesterday's date as a string in YYYY-MM-DD format",
      "rewritten_intent": "get yesterday's date as a string in `YYYY-MM-DD` format using timedelta",
      "snippet": "(datetime.now() - timedelta(1)).strftime('%Y-%m-%d')",
      "question_id": 30483977
    },
    {
      "intent": "Slicing a list into a list of sub-lists",
      "rewritten_intent": "get a list of tuples of every three consecutive items in list `[1, 2, 3, 4, 5, 6, 7, 8, 9]`",
      "snippet": "list(zip(*((iter([1, 2, 3, 4, 5, 6, 7, 8, 9]),) * 3)))",
      "question_id": 2231663
    },
    {
      "intent": "Slicing a list into a list of sub-lists",
      "rewritten_intent": null,
      "snippet": "[input[i:i + n] for i in range(0, len(input), n)]",
      "question_id": 2231663
    },
    {
      "intent": "Sorting numbers in string format with Python",
      "rewritten_intent": "Sort list `keys` based on its elements' dot-seperated numbers",
      "snippet": "keys.sort(key=lambda x: map(int, x.split('.')))",
      "question_id": 2597099
    },
    {
      "intent": "Sorting numbers in string format with Python",
      "rewritten_intent": "Sort a list of integers `keys` where each value is in string format",
      "snippet": "keys.sort(key=lambda x: [int(y) for y in x.split('.')])",
      "question_id": 2597099
    },
    {
      "intent": "Python, remove all non-alphabet chars from string",
      "rewritten_intent": "remove all non-alphabet chars from string `s`",
      "snippet": "\"\"\"\"\"\".join([i for i in s if i.isalpha()])",
      "question_id": 22520932
    },
    {
      "intent": "How to split a string into integers in Python?",
      "rewritten_intent": "split a string `s` into integers",
      "snippet": "l = (int(x) for x in s.split())",
      "question_id": 6429638
    },
    {
      "intent": "How to split a string into integers in Python?",
      "rewritten_intent": "split a string `42 0` by white spaces.",
      "snippet": "\"\"\"42 0\"\"\".split()",
      "question_id": 6429638
    },
    {
      "intent": "How to split a string into integers in Python?",
      "rewritten_intent": null,
      "snippet": "map(int, '42 0'.split())",
      "question_id": 6429638
    },
    {
      "intent": "Get the indexes of truthy elements of a boolean list as a list/tuple",
      "rewritten_intent": "get indexes of all true boolean values from a list `bool_list`",
      "snippet": "[i for i, elem in enumerate(bool_list, 1) if elem]",
      "question_id": 13076560
    },
    {
      "intent": "In Python, how to display current time in readable format",
      "rewritten_intent": "display current time in readable format",
      "snippet": "time.strftime('%l:%M%p %z on %b %d, %Y')",
      "question_id": 3961581
    },
    {
      "intent": "How does python do string magic?",
      "rewritten_intent": "append array of strings `['x', 'x', 'x']` into one string",
      "snippet": "\"\"\"\"\"\".join(['x', 'x', 'x'])",
      "question_id": 25678689
    },
    {
      "intent": "Removing duplicate characters from a string",
      "rewritten_intent": "removing duplicate characters from a string variable \"foo\"",
      "snippet": "\"\"\"\"\"\".join(set(foo))",
      "question_id": 9841303
    },
    {
      "intent": "how do I sort a python list of dictionaries given a list of ids with the desired order?",
      "rewritten_intent": "sort list `users` using values associated with key 'id' according to elements in list `order`",
      "snippet": "users.sort(key=lambda x: order.index(x['id']))",
      "question_id": 17734779
    },
    {
      "intent": "how do I sort a python list of dictionaries given a list of ids with the desired order?",
      "rewritten_intent": "sort a python list of dictionaries `users` by a given list `order` of ids 'id' with the desired order",
      "snippet": "users.sort(key=lambda x: order.index(x['id']))",
      "question_id": 17734779
    },
    {
      "intent": "Can I have a non-greedy regex with dotall?",
      "rewritten_intent": "match regex pattern 'a*?bc*?' on string 'aabcc' with DOTALL enabled",
      "snippet": "re.findall('a*?bc*?', 'aabcc', re.DOTALL)",
      "question_id": 9507819
    },
    {
      "intent": "Count number of occurrences of a given substring in a string",
      "rewritten_intent": "count number of occurrences of a substring 'ab' in a string \"abcdabcva\"",
      "snippet": "\"\"\"abcdabcva\"\"\".count('ab')",
      "question_id": 8899905
    },
    {
      "intent": "Get a list of values from a list of dictionaries in python",
      "rewritten_intent": "get a list of values with key 'key' from a list of dictionaries `l`",
      "snippet": "[d['key'] for d in l if 'key' in d]",
      "question_id": 25040875
    },
    {
      "intent": "Get a list of values from a list of dictionaries in python",
      "rewritten_intent": "get a list of values for key 'key' from a list of dictionaries `l`",
      "snippet": "[d['key'] for d in l]",
      "question_id": 25040875
    },
    {
      "intent": "Get a list of values from a list of dictionaries in python",
      "rewritten_intent": "get a list of values for key \"key\" from a list of dictionaries in `l`",
      "snippet": "[d['key'] for d in l]",
      "question_id": 25040875
    },
    {
      "intent": "How to order a list of lists by the first value",
      "rewritten_intent": "order a list of lists `l1` by the first value",
      "snippet": "l1.sort(key=lambda x: int(x[0]))",
      "question_id": 40744328
    },
    {
      "intent": "How to order a list of lists by the first value",
      "rewritten_intent": "order a list of lists `[[1, 'mike'], [1, 'bob']]` by the first value of individual list",
      "snippet": "sorted([[1, 'mike'], [1, 'bob']])",
      "question_id": 40744328
    },
    {
      "intent": "case sensitive string replacement in Python",
      "rewritten_intent": "replace a string `Abc` in case sensitive way using maketrans",
      "snippet": "\"\"\"Abc\"\"\".translate(maketrans('abcABC', 'defDEF'))",
      "question_id": 3008992
    },
    {
      "intent": "python: dictionary to string, custom format?",
      "rewritten_intent": "dictionary `d` to string, custom format",
      "snippet": "\"\"\"<br/>\"\"\".join([('%s:: %s' % (key, value)) for key, value in list(d.items())])",
      "question_id": 8519599
    },
    {
      "intent": "Updating a list of python dictionaries with a key, value pair from another list",
      "rewritten_intent": "update a list `l1` dictionaries with a key `count` and value from list `l2`",
      "snippet": "[dict(d, count=n) for d, n in zip(l1, l2)]",
      "question_id": 10592674
    },
    {
      "intent": "sum each value in a list of tuples",
      "rewritten_intent": "create a list with the sum of respective elements of the tuples of list `l`",
      "snippet": "[sum(x) for x in zip(*l)]",
      "question_id": 14180866
    },
    {
      "intent": "sum each value in a list of tuples",
      "rewritten_intent": "sum each value in a list `l` of tuples",
      "snippet": "map(sum, zip(*l))",
      "question_id": 14180866
    },
    {
      "intent": "Python: transform a list of lists of tuples",
      "rewritten_intent": "Convert each list in list `main_list` into a tuple",
      "snippet": "map(list, zip(*main_list))",
      "question_id": 31676133
    },
    {
      "intent": "Check if string ends with one of the strings from a list",
      "rewritten_intent": "check if string `test.mp3` ends with one of the strings from a tuple `('.mp3', '.avi')`",
      "snippet": "\"\"\"test.mp3\"\"\".endswith(('.mp3', '.avi'))",
      "question_id": 18351951
    },
    {
      "intent": "Splitting strings in python",
      "rewritten_intent": "split a string 's' by space while ignoring spaces within square braces and quotes.",
      "snippet": "re.findall('\\\\[[^\\\\]]*\\\\]|\"[^\"]*\"|\\\\S+', s)",
      "question_id": 234512
    },
    {
      "intent": "getting string between 2 characters in python",
      "rewritten_intent": "get all characters between two `$` characters in string `string`",
      "snippet": "re.findall('\\\\$([^$]*)\\\\$', string)",
      "question_id": 15043326
    },
    {
      "intent": "getting string between 2 characters in python",
      "rewritten_intent": "getting the string between 2 '$' characters in '$sin (x)$ is an function of x'",
      "snippet": "re.findall('\\\\$(.*?)\\\\$', '$sin (x)$ is an function of x')",
      "question_id": 15043326
    },
    {
      "intent": "how to format date in ISO using python?",
      "rewritten_intent": "Format a date object `str_data` into iso fomrat",
      "snippet": "datetime.datetime.strptime(str_date, '%m/%d/%Y').date().isoformat()",
      "question_id": 12772057
    },
    {
      "intent": "Counting values in dictionary",
      "rewritten_intent": "Get a list of all keys from dictionary `dictA` where the number of occurrences of value `duck` in that key is more than `1`",
      "snippet": "[k for k, v in dictA.items() if v.count('duck') > 1]",
      "question_id": 14743454
    },
    {
      "intent": "Sub matrix of a list of lists (without numpy)",
      "rewritten_intent": "Create sub matrix of a list of lists `[[2, 3, 4], [2, 3, 4], [2, 3, 4]]` (without numpy)",
      "snippet": "[[2, 3, 4], [2, 3, 4], [2, 3, 4]]",
      "question_id": 15650538
    },
    {
      "intent": "How do I read the first line of a string?",
      "rewritten_intent": "read the first line of a string `my_string`",
      "snippet": "my_string.splitlines()[0]",
      "question_id": 11833266
    },
    {
      "intent": "How do I read the first line of a string?",
      "rewritten_intent": null,
      "snippet": "my_string.split('\\n', 1)[0]",
      "question_id": 11833266
    },
    {
      "intent": "How to replace repeated instances of a character with a single instance of that character in python",
      "rewritten_intent": "Replace repeated instances of a character '*' with a single instance in a string 'text'",
      "snippet": "re.sub('\\\\*\\\\*+', '*', text)",
      "question_id": 3878555
    },
    {
      "intent": "How to replace repeated instances of a character with a single instance of that character in python",
      "rewritten_intent": "replace repeated instances of \"*\" with a single instance of \"*\"",
      "snippet": "re.sub('\\\\*+', '*', text)",
      "question_id": 3878555
    },
    {
      "intent": "Multiplying values from two different dictionaries together in Python",
      "rewritten_intent": "multiply values of dictionary `dict1` with their respective values in dictionary `dict2`",
      "snippet": "dict((k, v * dict2[k]) for k, v in list(dict1.items()) if k in dict2)",
      "question_id": 15334783
    },
    {
      "intent": "Random strings in Python",
      "rewritten_intent": "Get a random string of length `length`",
      "snippet": "return ''.join(random.choice(string.lowercase) for i in range(length))",
      "question_id": 2030053
    },
    {
      "intent": "How to count all elements in a nested dictionary?",
      "rewritten_intent": "Get total number of values in a nested dictionary `food_colors`",
      "snippet": "sum(len(x) for x in list(food_colors.values()))",
      "question_id": 4581646
    },
    {
      "intent": "How to count all elements in a nested dictionary?",
      "rewritten_intent": "count all elements in a nested dictionary `food_colors`",
      "snippet": "sum(len(v) for v in food_colors.values())",
      "question_id": 4581646
    },
    {
      "intent": "How to apply a logical operator to all elements in a python list",
      "rewritten_intent": "apply logical operator 'AND' to all elements in list `a_list`",
      "snippet": "all(a_list)",
      "question_id": 1790520
    },
    {
      "intent": "Removing characters from string Python",
      "rewritten_intent": "removing vowel characters 'aeiouAEIOU' from string `text`",
      "snippet": "\"\"\"\"\"\".join(c for c in text if c not in 'aeiouAEIOU')",
      "question_id": 41083229
    },
    {
      "intent": "Divide two lists in python",
      "rewritten_intent": "Divide elements in list `a` from elements at the same index in list `b`",
      "snippet": "[(x / y) for x, y in zip(a, b)]",
      "question_id": 16418415
    },
    {
      "intent": "Capturing group with findall?",
      "rewritten_intent": "match regex 'abc(de)fg(123)' on string 'abcdefg123 and again abcdefg123'",
      "snippet": "re.findall('abc(de)fg(123)', 'abcdefg123 and again abcdefg123')",
      "question_id": 6018340
    },
    {
      "intent": "Searching if the values on a list is in the dictionary whose format is key-string, value-list(strings)",
      "rewritten_intent": "get geys of dictionary `my_dict` that contain any values from list `lst`",
      "snippet": "[key for key, value in list(my_dict.items()) if set(value).intersection(lst)]",
      "question_id": 32792874
    },
    {
      "intent": "Searching if the values on a list is in the dictionary whose format is key-string, value-list(strings)",
      "rewritten_intent": "get list of keys in dictionary `my_dict` whose values contain values from list `lst`",
      "snippet": "[key for item in lst for key, value in list(my_dict.items()) if item in value]",
      "question_id": 32792874
    },
    {
      "intent": "Add tuple to a list of tuples",
      "rewritten_intent": "Sum elements of tuple `b` to their respective elements of each tuple in list `a`",
      "snippet": "c = [[(i + j) for i, j in zip(e, b)] for e in a]",
      "question_id": 40313203
    },
    {
      "intent": "Python: sorting a dictionary of lists",
      "rewritten_intent": "sort dictionary of lists `myDict` by the third item in each list",
      "snippet": "sorted(list(myDict.items()), key=lambda e: e[1][2])",
      "question_id": 1217251
    },
    {
      "intent": "What is the most pythonic way to avoid specifying the same value in a string",
      "rewritten_intent": "Format string `hello {name}, how are you {name}, welcome {name}` to be interspersed by `name` three times, specifying the value as `john` only once",
      "snippet": "\"\"\"hello {name}, how are you {name}, welcome {name}\"\"\".format(name='john')",
      "question_id": 11921649
    },
    {
      "intent": "determine if a list contains other lists",
      "rewritten_intent": "check if any values in a list `input_list` is a list",
      "snippet": "any(isinstance(el, list) for el in input_list)",
      "question_id": 5251663
    },
    {
      "intent": "get the size of a list",
      "rewritten_intent": "get the size of list `items`",
      "snippet": "len(items)",
      "question_id": 1712227
    },
    {
      "intent": "get the size of a list",
      "rewritten_intent": "get the size of a list `[1,2,3]`",
      "snippet": "len([1, 2, 3])",
      "question_id": 1712227
    },
    {
      "intent": "get the size of a list",
      "rewritten_intent": "get the size of object `items`",
      "snippet": "items.__len__()",
      "question_id": 1712227
    },
    {
      "intent": "get the size of a list",
      "rewritten_intent": "get the size of list `s`",
      "snippet": "len(s)",
      "question_id": 1712227
    },
    {
      "intent": "How would I check a string for a certain letter in Python?",
      "rewritten_intent": "check if string 'x' is  in list `['x', 'd', 'a', 's', 'd', 's']`",
      "snippet": "'x' in ['x', 'd', 'a', 's', 'd', 's']",
      "question_id": 4877844
    },
    {
      "intent": "Delete a dictionary item if the key exists",
      "rewritten_intent": "Delete an item with key \"key\" from `mydict`",
      "snippet": "mydict.pop('key', None)",
      "question_id": 15411107
    },
    {
      "intent": "Delete a dictionary item if the key exists",
      "rewritten_intent": "Delete an item with key `key` from `mydict`",
      "snippet": "del mydict[key]",
      "question_id": 15411107
    },
    {
      "intent": "Strip HTML from strings in Python",
      "rewritten_intent": "strip html from strings",
      "snippet": "re.sub('<[^<]+?>', '', text)",
      "question_id": 753052
    },
    {
      "intent": "how to split a string on the first instance of delimiter in python",
      "rewritten_intent": "split string \"jvm.args= -Dappdynamics.com=true, -Dsomeotherparam=false,\" on the first occurrence of delimiter '='",
      "snippet": "\"\"\"jvm.args= -Dappdynamics.com=true, -Dsomeotherparam=false,\"\"\".split('=', 1)",
      "question_id": 11009155
    },
    {
      "intent": "Control a print format when printing a list in Python",
      "rewritten_intent": "print numbers in list `list` with precision of 3 decimal places",
      "snippet": "print('[%s]' % ', '.join('%.3f' % val for val in list))",
      "question_id": 7351270
    },
    {
      "intent": "Control a print format when printing a list in Python",
      "rewritten_intent": "format print output of list of floats `l` to print only up to 3 decimal points",
      "snippet": "print('[' + ', '.join('%5.3f' % v for v in l) + ']')",
      "question_id": 7351270
    },
    {
      "intent": "Control a print format when printing a list in Python",
      "rewritten_intent": "print a list of floating numbers `l` using string formatting",
      "snippet": "print([('%5.3f' % val) for val in l])",
      "question_id": 7351270
    },
    {
      "intent": "Convert Unicode to UTF-8 Python",
      "rewritten_intent": "print a unicode string `text`",
      "snippet": "print(text.encode('windows-1252'))",
      "question_id": 6740865
    },
    {
      "intent": "How can I convert a binary to a float number",
      "rewritten_intent": "convert string representation `s2` of binary string rep of integer to floating point number",
      "snippet": "struct.unpack('d', struct.pack('Q', int(s2, 0)))[0]",
      "question_id": 8751653
    },
    {
      "intent": "How can I convert a binary to a float number",
      "rewritten_intent": "convert a binary '-0b1110' to a float number",
      "snippet": "float(int('-0b1110', 0))",
      "question_id": 8751653
    },
    {
      "intent": "How can I convert a binary to a float number",
      "rewritten_intent": "convert a binary `b8` to a float number",
      "snippet": "struct.unpack('d', b8)[0]",
      "question_id": 8751653
    },
    {
      "intent": "Read lines containing integers from a file in Python?",
      "rewritten_intent": "strip and split each line `line` on white spaces",
      "snippet": "line.strip().split(' ')",
      "question_id": 11354544
    },
    {
      "intent": "sorting dictionary by numeric value",
      "rewritten_intent": "sort dictionary `tag_weight` in reverse order by values cast to integers",
      "snippet": "sorted(list(tag_weight.items()), key=lambda x: int(x[1]), reverse=True)",
      "question_id": 40208429
    },
    {
      "intent": "How do I find the largest integer less than x?",
      "rewritten_intent": "find the largest integer less than `x`",
      "snippet": "int(math.ceil(x)) - 1",
      "question_id": 27758657
    },
    {
      "intent": "iterate over a dictionary in sorted order",
      "rewritten_intent": "iterate over a dictionary `d` in sorted order",
      "snippet": "it = iter(sorted(d.items()))",
      "question_id": 364519
    },
    {
      "intent": "iterate over a dictionary in sorted order",
      "rewritten_intent": "iterate over a dictionary `dict` in sorted order",
      "snippet": "return sorted(dict.items())",
      "question_id": 364519
    },
    {
      "intent": "iterate over a dictionary in sorted order",
      "rewritten_intent": "iterate over a dictionary `dict` in sorted order",
      "snippet": "return iter(sorted(dict.items()))",
      "question_id": 364519
    },
    {
      "intent": "finding the last occurrence of an item in a list python",
      "rewritten_intent": "assign the index of the last occurence of `x` in list `s` to the variable `last`",
      "snippet": "last = len(s) - s[::-1].index(x) - 1",
      "question_id": 34438901
    },
    {
      "intent": "convert list to string",
      "rewritten_intent": "concatenating values in `list1` to a string",
      "snippet": "str1 = ''.join(list1)",
      "question_id": 5618878
    },
    {
      "intent": "convert list to string",
      "rewritten_intent": "concatenating values in list `L` to a string, separate by space",
      "snippet": "' '.join((str(x) for x in L))",
      "question_id": 5618878
    },
    {
      "intent": "convert list to string",
      "rewritten_intent": "concatenating values in `list1` to a string",
      "snippet": "str1 = ''.join((str(e) for e in list1))",
      "question_id": 5618878
    },
    {
      "intent": "convert list to string",
      "rewritten_intent": "concatenating values in list `L` to a string",
      "snippet": "makeitastring = ''.join(map(str, L))",
      "question_id": 5618878
    },
    {
      "intent": "remove None value from a list without removing the 0 value",
      "rewritten_intent": "remove None value from list `L`",
      "snippet": "[x for x in L if x is not None]",
      "question_id": 16096754
    },
    {
      "intent": "How do I select a random element from an array in Python?",
      "rewritten_intent": "select a random element from array `[1, 2, 3]`",
      "snippet": "random.choice([1, 2, 3])",
      "question_id": 1058712
    },
    {
      "intent": "Creating a 2d matrix in python",
      "rewritten_intent": "creating a 5x6 matrix filled with `None` and save it as `x`",
      "snippet": "x = [[None for _ in range(5)] for _ in range(6)]",
      "question_id": 4230000
    },
    {
      "intent": "How do I generate a random string (of length X, a-z only) in Python?",
      "rewritten_intent": "generate a random string of length `x`  containing lower cased ASCII letters",
      "snippet": "\"\"\"\"\"\".join(random.choice(string.lowercase) for x in range(X))",
      "question_id": 1957273
    },
    {
      "intent": "round number to nearest integer",
      "rewritten_intent": "round number `x` to nearest integer",
      "snippet": "int(round(x))",
      "question_id": 31818050
    },
    {
      "intent": "round number to nearest integer",
      "rewritten_intent": "round number `h` to nearest integer",
      "snippet": "h = int(round(h))",
      "question_id": 31818050
    },
    {
      "intent": "round number to nearest integer",
      "rewritten_intent": "round number 32.268907563 up to 3 decimal points",
      "snippet": "round(32.268907563, 3)",
      "question_id": 31818050
    },
    {
      "intent": "round number to nearest integer",
      "rewritten_intent": "round number `value` up to `significantDigit` decimal places",
      "snippet": "round(value, significantDigit)",
      "question_id": 31818050
    },
    {
      "intent": "round number to nearest integer",
      "rewritten_intent": "round number 1.0005 up to 3 decimal places",
      "snippet": "round(1.0005, 3)",
      "question_id": 31818050
    },
    {
      "intent": "round number to nearest integer",
      "rewritten_intent": "round number 2.0005 up to 3 decimal places",
      "snippet": "round(2.0005, 3)",
      "question_id": 31818050
    },
    {
      "intent": "round number to nearest integer",
      "rewritten_intent": "round number 3.0005 up to 3 decimal places",
      "snippet": "round(3.0005, 3)",
      "question_id": 31818050
    },
    {
      "intent": "round number to nearest integer",
      "rewritten_intent": "round number 4.0005 up to 3 decimal places",
      "snippet": "round(4.0005, 3)",
      "question_id": 31818050
    },
    {
      "intent": "round number to nearest integer",
      "rewritten_intent": "round number 8.005 up to 2 decimal places",
      "snippet": "round(8.005, 2)",
      "question_id": 31818050
    },
    {
      "intent": "round number to nearest integer",
      "rewritten_intent": "round number 7.005 up to 2 decimal places",
      "snippet": "round(7.005, 2)",
      "question_id": 31818050
    },
    {
      "intent": "round number to nearest integer",
      "rewritten_intent": "round number 6.005 up to 2 decimal places",
      "snippet": "round(6.005, 2)",
      "question_id": 31818050
    },
    {
      "intent": "round number to nearest integer",
      "rewritten_intent": "round number 1.005 up to 2 decimal places",
      "snippet": "round(1.005, 2)",
      "question_id": 31818050
    },
    {
      "intent": "In dictionary, converting the value from string to integer",
      "rewritten_intent": "convert values in dictionary `d` into integers",
      "snippet": "{k: int(v) for k, v in d.items()}",
      "question_id": 9224385
    },
    {
      "intent": "How can I add the corresponding elements of several lists of numbers?",
      "rewritten_intent": "sum elements at the same index of each list in list `lists`",
      "snippet": "map(sum, zip(*lists))",
      "question_id": 11280536
    },
    {
      "intent": "Python: How to convert a string containing hex bytes to a hex string",
      "rewritten_intent": "convert a string `s` containing hex bytes to a hex string",
      "snippet": "binascii.a2b_hex(s)",
      "question_id": 10824319
    },
    {
      "intent": "How do I remove identical items from a list and sort it in Python?",
      "rewritten_intent": "remove identical items from list `my_list` and sort it alphabetically",
      "snippet": "sorted(set(my_list))",
      "question_id": 22741068
    },
    {
      "intent": "Python Finding Index of Maximum in List",
      "rewritten_intent": "find the index of the element with the maximum value from a list 'a'.",
      "snippet": "max(enumerate(a), key=lambda x: x[1])[0]",
      "question_id": 11530799
    },
    {
      "intent": "Python Regex for hyphenated words",
      "rewritten_intent": "python regex for hyphenated words in `text`",
      "snippet": "re.findall('\\\\w+(?:-\\\\w+)+', text)",
      "question_id": 8383213
    },
    {
      "intent": "How do you pick \"x\" number of unique numbers from a list in Python?",
      "rewritten_intent": "Get `3` unique items from a list",
      "snippet": "random.sample(list(range(1, 16)), 3)",
      "question_id": 6494508
    },
    {
      "intent": "Sort a list of strings based on regular expression match or something similar",
      "rewritten_intent": "sort list `strings` in alphabetical order based on the letter after percent character `%` in each element",
      "snippet": "strings.sort(key=lambda str: re.sub('.*%(.).*', '\\\\1', str))",
      "question_id": 1082413
    },
    {
      "intent": "Sort a list of strings based on regular expression match or something similar",
      "rewritten_intent": "sort a list of strings `strings` based on regex match",
      "snippet": "strings.sort(key=lambda str: re.sub('.*%', '', str))",
      "question_id": 1082413
    },
    {
      "intent": "Appending to 2D lists in Python",
      "rewritten_intent": "Create list `listy` containing 3 empty lists",
      "snippet": "listy = [[] for i in range(3)]",
      "question_id": 7745562
    },
    {
      "intent": "Python list comprehension for loops",
      "rewritten_intent": "Get a list from two strings `12345` and `ab` with values as each character concatenated",
      "snippet": "[(x + y) for x in '12345' for y in 'ab']",
      "question_id": 18649884
    },
    {
      "intent": "Trimming a string",
      "rewritten_intent": "trim string \" Hello \"",
      "snippet": "' Hello '.strip()",
      "question_id": 761804
    },
    {
      "intent": "Trimming a string",
      "rewritten_intent": "trim string `myString `",
      "snippet": "myString.strip()",
      "question_id": 761804
    },
    {
      "intent": "Trimming a string",
      "rewritten_intent": "Trimming a string \" Hello \"",
      "snippet": "' Hello '.strip()",
      "question_id": 761804
    },
    {
      "intent": "Trimming a string",
      "rewritten_intent": "Trimming a string \" Hello\"",
      "snippet": "' Hello'.strip()",
      "question_id": 761804
    },
    {
      "intent": "Trimming a string",
      "rewritten_intent": "Trimming a string \"Bob has a cat\"",
      "snippet": "'Bob has a cat'.strip()",
      "question_id": 761804
    },
    {
      "intent": "Trimming a string",
      "rewritten_intent": "Trimming a string \"          Hello        \"",
      "snippet": "'          Hello        '.strip()",
      "question_id": 761804
    },
    {
      "intent": "Trimming a string",
      "rewritten_intent": "Trimming a string `str`",
      "snippet": "str.strip()",
      "question_id": 761804
    },
    {
      "intent": "Trimming a string",
      "rewritten_intent": "Trimming \"\\n\" from string `myString`",
      "snippet": "myString.strip('\\n')",
      "question_id": 761804
    },
    {
      "intent": "Trimming a string",
      "rewritten_intent": "left trimming \"\\n\\r\" from string `myString`",
      "snippet": "myString.lstrip('\\n\\r')",
      "question_id": 761804
    },
    {
      "intent": "Trimming a string",
      "rewritten_intent": "right trimming \"\\n\\t\" from string `myString`",
      "snippet": "myString.rstrip('\\n\\t')",
      "question_id": 761804
    },
    {
      "intent": "Trimming a string",
      "rewritten_intent": "Trimming a string \"  Hello\\n\" by space",
      "snippet": "'  Hello\\n'.strip(' ')",
      "question_id": 761804
    },
    {
      "intent": "Sort a list of tuples depending on two elements",
      "rewritten_intent": "sort a list of tuples 'unsorted' based on two elements, second and third",
      "snippet": "sorted(unsorted, key=lambda element: (element[1], element[2]))",
      "question_id": 9376384
    },
    {
      "intent": "Python, Encoding output to UTF-8",
      "rewritten_intent": "decode string `content` to UTF-8 code",
      "snippet": "print(content.decode('utf8'))",
      "question_id": 17577727
    },
    {
      "intent": "All combinations of a list of lists",
      "rewritten_intent": "create a list containing all cartesian products of elements in list `a`",
      "snippet": "list(itertools.product(*a))",
      "question_id": 798854
    },
    {
      "intent": "How to extract all UPPER from a string? Python",
      "rewritten_intent": "remove uppercased characters in string `s`",
      "snippet": "re.sub('[^A-Z]', '', s)",
      "question_id": 15886340
    },
    {
      "intent": "Get date from ISO week number in Python",
      "rewritten_intent": "convert string '2011221' into a DateTime object using format '%Y%W%w'",
      "snippet": "datetime.strptime('2011221', '%Y%W%w')",
      "question_id": 5882405
    },
    {
      "intent": "Regex matching 5-digit substrings not enclosed with digits",
      "rewritten_intent": "regex matching 5-digit substrings not enclosed with digits in `s`",
      "snippet": "re.findall('(?<!\\\\d)\\\\d{5}(?!\\\\d)', s)",
      "question_id": 41807864
    },
    {
      "intent": "filtering elements from list of lists in Python?",
      "rewritten_intent": "create a list containing elements of list `a` if the sum of the element is greater than 10",
      "snippet": "[item for item in a if sum(item) > 10]",
      "question_id": 2655956
    },
    {
      "intent": "python: how to convert currency to decimal?",
      "rewritten_intent": "convert currency string `dollars` to decimal `cents_int`",
      "snippet": "cents_int = int(round(float(dollars.strip('$')) * 100))",
      "question_id": 3887469
    },
    {
      "intent": "Remove final characters from string recursively - What's the best way to do this?",
      "rewritten_intent": "remove letters from string `example_line` if the letter exist in list `bad_chars`",
      "snippet": "\"\"\"\"\"\".join(dropwhile(lambda x: x in bad_chars, example_line[::-1]))[::-1]",
      "question_id": 39532974
    },
    {
      "intent": "Creating an empty list",
      "rewritten_intent": "Creating an empty list `l`",
      "snippet": "l = []",
      "question_id": 2972212
    },
    {
      "intent": "Creating an empty list",
      "rewritten_intent": "Creating an empty list `l`",
      "snippet": "l = list()",
      "question_id": 2972212
    },
    {
      "intent": "Creating an empty list",
      "rewritten_intent": "Creating an empty list",
      "snippet": "list()",
      "question_id": 2972212
    },
    {
      "intent": "Creating an empty list",
      "rewritten_intent": "Creating an empty list",
      "snippet": "[]",
      "question_id": 2972212
    },
    {
      "intent": "Add string in a certain position in Python",
      "rewritten_intent": "add string `-` in `4th` position of a string `s`",
      "snippet": "s[:4] + '-' + s[4:]",
      "question_id": 5254445
    },
    {
      "intent": "Python : how to append new elements in a list of list?",
      "rewritten_intent": "append 3 lists in one list",
      "snippet": "[[] for i in range(3)]",
      "question_id": 11219949
    },
    {
      "intent": "Python : how to append new elements in a list of list?",
      "rewritten_intent": "Initialize a list of empty lists `a` of size 3",
      "snippet": "a = [[] for i in range(3)]",
      "question_id": 11219949
    },
    {
      "intent": "Finding the largest delta between two integers in a list in python",
      "rewritten_intent": null,
      "snippet": "max(abs(x - y) for x, y in zip(values[1:], values[:-1]))",
      "question_id": 3428769
    },
    {
      "intent": "How to convert hex string to integer in Python?",
      "rewritten_intent": "convert a hex string `x` to string",
      "snippet": "y = str(int(x, 16))",
      "question_id": 2636755
    },
    {
      "intent": "check if a string is a number (float)",
      "rewritten_intent": "check if string `a` is an integer",
      "snippet": "a.isdigit()",
      "question_id": 354038
    },
    {
      "intent": "check if a string is a number",
      "rewritten_intent": "function to check if a string is a number",
      "snippet": "isdigit()",
      "question_id": 354038
    },
    {
      "intent": "check if a string is a number",
      "rewritten_intent": "check if string `b` is a number",
      "snippet": "b.isdigit()",
      "question_id": 354038
    },
    {
      "intent": "sum a list of numbers in Python",
      "rewritten_intent": "sum a list of numbers `list_of_nums`",
      "snippet": "sum(list_of_nums)",
      "question_id": 4362586
    },
    {
      "intent": "how to get the index of dictionary with the highest value in a list of dictionary",
      "rewritten_intent": "Get an item from a list of dictionary `lst` which has maximum value in the key `score` using lambda function",
      "snippet": "max(lst, key=lambda x: x['score'])",
      "question_id": 6561653
    },
    {
      "intent": "Python: how to get rid of spaces in str(dict)?",
      "rewritten_intent": "remove all spaces from a string converted from dictionary `{'a': 1, 'b': 'as df'}`",
      "snippet": "str({'a': 1, 'b': 'as df'}).replace(': ', ':').replace(', ', ',')",
      "question_id": 39268928
    },
    {
      "intent": "Python: how to get rid of spaces in str(dict)?",
      "rewritten_intent": "convert dictionary `dict` into a string formatted object",
      "snippet": "'{' + ','.join('{0!r}:{1!r}'.format(*x) for x in list(dct.items())) + '}'",
      "question_id": 39268928
    },
    {
      "intent": "Python- insert a character into a string",
      "rewritten_intent": "concatenate items from list `parts` into a string starting from the second element",
      "snippet": "\"\"\"\"\"\".join(parts[1:])",
      "question_id": 13655392
    },
    {
      "intent": "Python- insert a character into a string",
      "rewritten_intent": "insert a character ',' into a string in front of '+' character in second part of the string",
      "snippet": "\"\"\",+\"\"\".join(c.rsplit('+', 1))",
      "question_id": 13655392
    },
    {
      "intent": "Extracting only characters from a string in Python",
      "rewritten_intent": "extract only alphabetic characters from a string `your string`",
      "snippet": "\"\"\" \"\"\".join(re.split('[^a-zA-Z]*', 'your string'))",
      "question_id": 8199398
    },
    {
      "intent": "Extracting only characters from a string in Python",
      "rewritten_intent": "Extract only characters from a string as a list",
      "snippet": "re.split('[^a-zA-Z]*', 'your string')",
      "question_id": 8199398
    },
    {
      "intent": "Create Union of All Values Contained in Multiple Lists",
      "rewritten_intent": "get the union set from list of lists `results_list`",
      "snippet": "results_union = set().union(*results_list)",
      "question_id": 2151517
    },
    {
      "intent": "Create Union of All Values Contained in Multiple Lists",
      "rewritten_intent": "get the union of values in list of lists `result_list`",
      "snippet": "return list(set(itertools.chain(*result_list)))",
      "question_id": 2151517
    },
  
    {
      "intent": "Removing control characters from a string in python",
      "rewritten_intent": "removing control characters from a string `s`",
      "snippet": "return ''.join(ch for ch in s if unicodedata.category(ch)[0] != 'C')",
      "question_id": 4324790
    },
    {
      "intent": "How to compare two lists in python",
      "rewritten_intent": "Compare if each value in list `a` is less than respective index value in list `b`",
      "snippet": "all(i < j for i, j in zip(a, b))",
      "question_id": 28767642
    },
    {
      "intent": "Remove duplicate chars using regex?",
      "rewritten_intent": "remove duplicate characters from string 'ffffffbbbbbbbqqq'",
      "snippet": "re.sub('([a-z])\\\\1+', '\\\\1', 'ffffffbbbbbbbqqq')",
      "question_id": 4574509
    },
    {
      "intent": "Regex to remove periods in acronyms?",
      "rewritten_intent": "remove periods inbetween capital letters that aren't immediately preceeded by word character(s) in a string `s` using regular expressions",
      "snippet": "re.sub('(?<!\\\\w)([A-Z])\\\\.', '\\\\1', s)",
      "question_id": 40196941
    },
    {
      "intent": "how to parse a list or string into chunks of fixed length",
      "rewritten_intent": "Get a list of strings `split_text` with fixed chunk size `n` from a string `the_list`",
      "snippet": "split_list = [the_list[i:i + n] for i in range(0, len(the_list), n)]",
      "question_id": 6372228
    },
    {
      "intent": "replacing all regex matches in single line",
      "rewritten_intent": "match string 'this is my string' with regex '\\\\b(this|string)\\\\b'\r\nthen replace it with regex '<markup>\\\\1</markup>'",
      "snippet": "re.sub('\\\\b(this|string)\\\\b', '<markup>\\\\1</markup>', 'this is my string')",
      "question_id": 4338032
    },
    {
      "intent": "Ordering a list of dictionaries in python",
      "rewritten_intent": "Sort a list of dictionaries `mylist` by keys \"weight\" and \"factor\"",
      "snippet": "mylist.sort(key=operator.itemgetter('weight', 'factor'))",
      "question_id": 861190
    },
    {
      "intent": "Ordering a list of dictionaries in python",
      "rewritten_intent": "ordering a list of dictionaries `mylist` by elements 'weight' and 'factor'",
      "snippet": "mylist.sort(key=lambda d: (d['weight'], d['factor']))",
      "question_id": 861190
    },
    {
      "intent": "From a list of lists to a dictionary",
      "rewritten_intent": "Convert a list of lists `lol` to a dictionary with key as second value of a list and value as list itself",
      "snippet": "{x[1]: x for x in lol}",
      "question_id": 14986218
    },
    {
      "intent": "Sorting dictionary keys based on their values",
      "rewritten_intent": "sort keys of dictionary 'd' based on their values",
      "snippet": "sorted(d, key=lambda k: d[k][1])",
      "question_id": 4690094
    },
    {
      "intent": "Python: How to round 123 to 100 instead of 100.0?",
      "rewritten_intent": "round 123 to 100",
      "snippet": "int(round(123, -2))",
      "question_id": 2742784
    },
    {
      "intent": "How to slice a list of strings with space delimiter?",
      "rewritten_intent": "get a list of last trailing words from another list  of strings`Original_List`",
      "snippet": "new_list = [x.split()[-1] for x in Original_List]",
      "question_id": 40535203
    },
    {
      "intent": "Reverse a string",
      "rewritten_intent": "Reverse a string 'hello world'",
      "snippet": "'hello world'[::(-1)]",
      "question_id": 931092
    },
    {
      "intent": "Reverse a string",
      "rewritten_intent": "Reverse list `s`",
      "snippet": "s[::(-1)]",
      "question_id": 931092
    },
    {
      "intent": "Reverse a string",
      "rewritten_intent": "Reverse string 'foo'",
      "snippet": "''.join(reversed('foo'))",
      "question_id": 931092
    },
    {
      "intent": "Reverse a string",
      "rewritten_intent": "Reverse a string `string`",
      "snippet": "''.join(reversed(string))",
      "question_id": 931092
    },
    {
      "intent": "Reverse a string",
      "rewritten_intent": "Reverse a string \"foo\"",
      "snippet": "'foo'[::(-1)]",
      "question_id": 931092
    },
    {
      "intent": "Reverse a string",
      "rewritten_intent": "Reverse a string `a_string`",
      "snippet": "a_string[::(-1)]",
      "question_id": 931092
    },
    {
      "intent": "Reverse a string",
      "rewritten_intent": "Reverse a string `a_string`",
      "snippet": "def reversed_string(a_string):\n    return a_string[::(-1)]",
      "question_id": 931092
    },
    {
      "intent": "Reverse a string",
      "rewritten_intent": "Reverse a string `s`",
      "snippet": "''.join(reversed(s))",
      "question_id": 931092
    },
    {
      "intent": "Generate a sequence of numbers in Python",
      "rewritten_intent": "generate a string of numbers separated by comma which is divisible by `4` with remainder `1` or `2`.",
      "snippet": "\"\"\",\"\"\".join(str(i) for i in range(100) if i % 4 in (1, 2))",
      "question_id": 11064917
    },
    {
      "intent": "How to convert this list into a dictionary",
      "rewritten_intent": "convert list `lst` of key, value pairs into a dictionary",
      "snippet": "dict([(e[0], int(e[1])) for e in lst])",
      "question_id": 33824334
    },
    {
      "intent": "sorting a list of tuples in Python",
      "rewritten_intent": "sorting a list of tuples `list_of_tuples` where each tuple is reversed",
      "snippet": "sorted(list_of_tuples, key=lambda tup: tup[::-1])",
      "question_id": 10213994
    },
    {
      "intent": "sorting a list of tuples in Python",
      "rewritten_intent": "sorting a list of tuples `list_of_tuples` by second key",
      "snippet": "sorted(list_of_tuples, key=lambda tup: tup[1])",
      "question_id": 10213994
    },
    {
      "intent": "get current time",
      "rewritten_intent": "get current date and time",
      "snippet": "datetime.datetime.now()",
      "question_id": 415511
    },
    {
      "intent": "get current time",
      "rewritten_intent": "get current time",
      "snippet": "datetime.datetime.now().time()",
      "question_id": 415511
    },
    {
      "intent": "get current time",
      "rewritten_intent": "get current time in pretty format",
      "snippet": "strftime('%Y-%m-%d %H:%M:%S', gmtime())",
      "question_id": 415511
    },
    {
      "intent": "get current time",
      "rewritten_intent": "get current time in string format",
      "snippet": "str(datetime.now())",
      "question_id": 415511
    },
    {
      "intent": "get current time",
      "rewritten_intent": "get current time",
      "snippet": "datetime.datetime.time(datetime.datetime.now())",
      "question_id": 415511
    },
    {
      "intent": "Converting hex to int in python",
      "rewritten_intent": "convert hex '\\xff' to integer",
      "snippet": "ord('\\xff')",
      "question_id": 19819863
    },
    {
      "intent": "How to get UTC time in Python?",
      "rewritten_intent": "get current utc time",
      "snippet": "datetime.utcnow()",
      "question_id": 15940280
    },
    {
      "intent": "Python: Make last item of array become the first",
      "rewritten_intent": "move last item of array `a` to the first position",
      "snippet": "a[-1:] + a[:-1]",
      "question_id": 12845112
    },
    {
      "intent": "How to print/show an expression in rational number form in python",
      "rewritten_intent": "print a rational number `3/2`",
      "snippet": "print('\\n\\x1b[4m' + '3' + '\\x1b[0m' + '\\n2')",
      "question_id": 39381222
    },
    {
      "intent": "What is the best way to sort list with custom sorting parameters in Python?",
      "rewritten_intent": null,
      "snippet": "li1.sort(key=lambda x: not x.startswith('b.'))",
      "question_id": 7996940
    },
    {
      "intent": "How to loop backwards in python?",
      "rewritten_intent": "iterate backwards from 10 to 0",
      "snippet": "range(10, 0, -1)",
      "question_id": 3476732
    },
    {
      "intent": "How to find all positions of the maximum value in a list?",
      "rewritten_intent": "get index of the first biggest element in list `a`",
      "snippet": "a.index(max(a))",
      "question_id": 3989016
    },
    {
      "intent": "Regex add character to matched string",
      "rewritten_intent": "replace periods `.` that are not followed by periods or spaces with a period and a space `. `",
      "snippet": "re.sub('\\\\.(?=[^ .])', '. ', para)",
      "question_id": 42731970
    },
    {
      "intent": "how to turn a string of letters embedded in squared brackets into embedded lists",
      "rewritten_intent": "convert a string `a` of letters embedded in squared brackets into embedded lists",
      "snippet": "[i.split() for i in re.findall('\\\\[([^\\\\[\\\\]]+)\\\\]', a)]",
      "question_id": 33147992
    },
    {
      "intent": "extract item from list of dictionaries",
      "rewritten_intent": "extract dictionary `d` from list `a` where the value associated with the key 'name' of dictionary `d` is equal to 'pluto'",
      "snippet": "[d for d in a if d['name'] == 'pluto']",
      "question_id": 7900882
    },
    {
      "intent": "extract item from list of dictionaries",
      "rewritten_intent": "extract dictionary from list of dictionaries based on a key's value.",
      "snippet": "[d for d in a if d['name'] == 'pluto']",
      "question_id": 7900882
    },
    {
      "intent": "Python: simplest way to get list of values from dict?",
      "rewritten_intent": "Retrieve list of values from dictionary 'd'",
      "snippet": "list(d.values())",
      "question_id": 16228248
    },
    {
      "intent": "String manipulation in Cython",
      "rewritten_intent": "replace occurrences of two whitespaces or more with one whitespace ' ' in string `s`",
      "snippet": "re.sub(' +', ' ', s)",
      "question_id": 943809
    },
    {
      "intent": "Python regex to remove all words which contains number",
      "rewritten_intent": "remove all words which contains number from a string `words` using regex",
      "snippet": "re.sub('\\\\w*\\\\d\\\\w*', '', words).strip()",
      "question_id": 18082130
    },
    {
      "intent": "How to parse dates with -0400 timezone string in python?",
      "rewritten_intent": "parse date string '2009/05/13 19:19:30 -0400' using format '%Y/%m/%d %H:%M:%S %z'",
      "snippet": "datetime.strptime('2009/05/13 19:19:30 -0400', '%Y/%m/%d %H:%M:%S %z')",
      "question_id": 1101508
    },
    {
      "intent": "Python - Locating the position of a regex match in a string?",
      "rewritten_intent": "Get the position of a regex match for word `is` in a string `String`",
      "snippet": "re.search('\\\\bis\\\\b', String).start()",
      "question_id": 2674391
    },
    {
      "intent": "Python - Locating the position of a regex match in a string?",
      "rewritten_intent": "Get the position of a regex match `is` in a string `String`",
      "snippet": "re.search('is', String).start()",
      "question_id": 2674391
    },
    {
      "intent": "What is the most pythonic way to exclude elements of a list that start with a specific character?",
      "rewritten_intent": null,
      "snippet": "[x for x in my_list if not x.startswith('#')]",
      "question_id": 11791568
    },
    {
      "intent": "Python string formatting when string contains \"%s\" without escaping",
      "rewritten_intent": "replace fields delimited by braces {} in string \"Day old bread, 50% sale {0}\" with string 'today'",
      "snippet": "\"\"\"Day old bread, 50% sale {0}\"\"\".format('today')",
      "question_id": 2847272
    },
    {
      "intent": "List of Tuples (string, float)with NaN How to get the min value?",
      "rewritten_intent": "Get a minimum value from a list of tuples `list` with values of type `string` and `float` with nan",
      "snippet": "min(list, key=lambda x: float('inf') if math.isnan(x[1]) else x[1])",
      "question_id": 15148684
    },
    {
      "intent": "Python: Finding average of a nested list",
      "rewritten_intent": "Find average of a nested list `a`",
      "snippet": "a = [(sum(x) / len(x)) for x in zip(*a)]",
      "question_id": 2153444
    },
    {
      "intent": "Sort list of mixed strings based on digits",
      "rewritten_intent": "sort list `l` based on its elements' digits",
      "snippet": "sorted(l, key=lambda x: int(re.search('\\\\d+', x).group(0)))",
      "question_id": 39129846
    },
    {
      "intent": "How do I convert a unicode to a string at the Python level?",
      "rewritten_intent": "Format a string `u'Andr\\xc3\\xa9'` that has unicode characters",
      "snippet": "\"\"\"\"\"\".join(chr(ord(c)) for c in 'Andr\\xc3\\xa9')",
      "question_id": 2783079
    },
    {
      "intent": "Pythonic way to insert every 2 elements in a string",
      "rewritten_intent": "Insert a character `-` after every two elements in a string `s`",
      "snippet": "\"\"\"-\"\"\".join(a + b for a, b in zip(s[::2], s[1::2]))",
      "question_id": 3258573
    },
    {
      "intent": "Printing numbers in python",
      "rewritten_intent": "printing numbers rounding up to third decimal place",
      "snippet": "print('%.3f' % 3.1415)",
      "question_id": 3241594
    },
    {
      "intent": "Padding a list in python with particular value",
      "rewritten_intent": "fill list `myList` with 4 0's",
      "snippet": "self.myList.extend([0] * (4 - len(self.myList)))",
      "question_id": 7026131
    },
    {
      "intent": "Generate list of numbers in specific format",
      "rewritten_intent": "generate list of numbers in specific format using string formatting precision.",
      "snippet": "[('%.2d' % i) for i in range(16)]",
      "question_id": 12030074
    },
    {
      "intent": "Summarizing a dictionary of arrays in Python",
      "rewritten_intent": "sort dictionary `mydict` in descending order based on the sum of each value in it",
      "snippet": "sorted(iter(mydict.items()), key=lambda tup: sum(tup[1]), reverse=True)[:3]",
      "question_id": 3411025
    },
    {
      "intent": "Summarizing a dictionary of arrays in Python",
      "rewritten_intent": "get top `3` items from a dictionary `mydict` with largest sum of values",
      "snippet": "heapq.nlargest(3, iter(mydict.items()), key=lambda tup: sum(tup[1]))",
      "question_id": 3411025
    },
    {
      "intent": "get index of character in python list",
      "rewritten_intent": "get index of character 'b' in list '['a', 'b']'",
      "snippet": "['a', 'b'].index('b')",
      "question_id": 3847472
    },
    {
      "intent": "Python: Convert a string to an integer",
      "rewritten_intent": null,
      "snippet": "int('  23  ')",
      "question_id": 2508861
    },
    {
      "intent": "How to extract the n-th elements from a list of tuples in python?",
      "rewritten_intent": "extract the 2nd elements from a list of tuples",
      "snippet": "[x[1] for x in elements]",
      "question_id": 3308102
    },
    {
      "intent": "Convert list of tuples to list?",
      "rewritten_intent": "flatten list of tuples `a`",
      "snippet": "list(chain.from_iterable(a))",
      "question_id": 10941229
    },
    {
      "intent": "Removing white space from txt with python",
      "rewritten_intent": "substitute two or more whitespace characters with character '|' in string `line`",
      "snippet": "re.sub('\\\\s{2,}', '|', line.strip())",
      "question_id": 36957908
    },
    {
      "intent": "Limiting floats to two decimal points",
      "rewritten_intent": "print float `a` with two decimal points",
      "snippet": "print(('%.2f' % a))",
      "question_id": 455612
    },
    {
      "intent": "Limiting floats to two decimal points",
      "rewritten_intent": "print float `a` with two decimal points",
      "snippet": "print(('{0:.2f}'.format(a)))",
      "question_id": 455612
    },
    {
      "intent": "Limiting floats to two decimal points",
      "rewritten_intent": "print float `a` with two decimal points",
      "snippet": "print(('{0:.2f}'.format(round(a, 2))))",
      "question_id": 455612
    },
    {
      "intent": "Limiting floats to two decimal points",
      "rewritten_intent": "print float `a` with two decimal points",
      "snippet": "print(('%.2f' % round(a, 2)))",
      "question_id": 455612
    },
    {
      "intent": "Limiting floats to two decimal points",
      "rewritten_intent": "limit float 13.9499999 to two decimal points",
      "snippet": "('%.2f' % 13.9499999)",
      "question_id": 455612
    },
    {
      "intent": "Limiting floats to two decimal points",
      "rewritten_intent": "limit float 3.14159 to two decimal points",
      "snippet": "('%.2f' % 3.14159)",
      "question_id": 455612
    },
    {
      "intent": "Limiting floats to two decimal points",
      "rewritten_intent": "limit float 13.949999999999999 to two decimal points",
      "snippet": "float('{0:.2f}'.format(13.95))",
      "question_id": 455612
    },
    {
      "intent": "Limiting floats to two decimal points",
      "rewritten_intent": "limit float 13.949999999999999 to two decimal points",
      "snippet": "'{0:.2f}'.format(13.95)",
      "question_id": 455612
    },
    {
      "intent": "How would I sum a multi-dimensional array in the most succinct python?",
      "rewritten_intent": "sum all elements of two-dimensions list `[[1, 2, 3, 4], [2, 4, 5, 6]]]`",
      "snippet": "sum([sum(x) for x in [[1, 2, 3, 4], [2, 4, 5, 6]]])",
      "question_id": 9497290
    },
    {
      "intent": "Access an arbitrary element in a dictionary in Python",
      "rewritten_intent": "Retrieve an arbitrary value from dictionary `dict`",
      "snippet": "next(iter(dict.values()))",
      "question_id": 3097866
    },
    {
      "intent": "Access an arbitrary element in a dictionary in Python",
      "rewritten_intent": "access an arbitrary value from dictionary `dict`",
      "snippet": "next(iter(list(dict.values())))",
      "question_id": 3097866
    },
    {
      "intent": "sorting list of tuples by arbitrary key",
      "rewritten_intent": "sort list `mylist` of tuples by arbitrary key from list `order`",
      "snippet": "sorted(mylist, key=lambda x: order.index(x[1]))",
      "question_id": 13408919
    },
    {
      "intent": "removing duplicates of a list of sets",
      "rewritten_intent": "remove all duplicates from a list of sets `L`",
      "snippet": "list(set(frozenset(item) for item in L))",
      "question_id": 32296933
    },
    {
      "intent": "removing duplicates of a list of sets",
      "rewritten_intent": "remove duplicates from a list of sets 'L'",
      "snippet": "[set(item) for item in set(frozenset(item) for item in L)]",
      "question_id": 32296933
    },
    {
      "intent": "Delete all objects in a list",
      "rewritten_intent": "delete all values in a list `mylist`",
      "snippet": "del mylist[:]",
      "question_id": 14465279
    },
    {
      "intent": "Remove empty strings from a list of strings",
      "rewritten_intent": "remove empty strings from list `str_list`",
      "snippet": "str_list = list([_f for _f in str_list if _f])",
      "question_id": 3845423
    },
    {
      "intent": "How to remove whitespace in BeautifulSoup",
      "rewritten_intent": "remove newlines and whitespace from string `yourstring`",
      "snippet": "re.sub('[\\\\ \\\\n]{2,}', '', yourstring)",
      "question_id": 4270742
    },
    {
      "intent": "Dot notation string manipulation",
      "rewritten_intent": "remove the last dot and all text beyond it in string `s`",
      "snippet": "re.sub('\\\\.[^.]+$', '', s)",
      "question_id": 35118265
    },

    {
      "intent": "How do I sort a zipped list in Python?",
      "rewritten_intent": "sort a zipped list `zipped` using lambda function",
      "snippet": "sorted(zipped, key=lambda x: x[1])",
      "question_id": 7142227
    },
    {
      "intent": "How do I sort a zipped list in Python?",
      "rewritten_intent": null,
      "snippet": "zipped.sort(key=lambda t: t[1])",
      "question_id": 7142227
    },
    {
      "intent": "Sorting a dictionary by value then by key",
      "rewritten_intent": "sort a dictionary `y` by value then by key",
      "snippet": "sorted(list(y.items()), key=lambda x: (x[1], x[0]), reverse=True)",
      "question_id": 7742752
    },
    {
      "intent": "Remove list of indices from a list in Python",
      "rewritten_intent": "remove elements from list `centroids` the indexes of which are in array `index`",
      "snippet": "[element for i, element in enumerate(centroids) if i not in index]",
      "question_id": 31267493
    },
    {
      "intent": "Comparing two lists in Python",
      "rewritten_intent": "list duplicated elements in two lists `listA` and `listB`",
      "snippet": "list(set(listA) & set(listB))",
      "question_id": 11697709
    },
    {
      "intent": "How can I convert a unicode string into string literals in Python 2.7?",
      "rewritten_intent": "convert unicode string `s` into string literals",
      "snippet": "print(s.encode('unicode_escape'))",
      "question_id": 20774910
    },
    {
      "intent": "python - How to format variable number of arguments into a string?",
      "rewritten_intent": "how to format a list of arguments `my_args` into a string",
      "snippet": "'Hello %s' % ', '.join(my_args)",
      "question_id": 18391059
    },
    {
      "intent": "Python regex search AND split",
      "rewritten_intent": "search and split string 'aaa bbb ccc ddd eee fff' by delimiter '(ddd)'",
      "snippet": "re.split('(ddd)', 'aaa bbb ccc ddd eee fff', 1)",
      "question_id": 8970524
    },
    {
      "intent": "Python regex search AND split",
      "rewritten_intent": "regex search and split string 'aaa bbb ccc ddd eee fff' by delimiter '(d(d)d)'",
      "snippet": "re.split('(d(d)d)', 'aaa bbb ccc ddd eee fff', 1)",
      "question_id": 8970524
    },
    {
      "intent": "How to split string into words that do not contain whitespaces in python?",
      "rewritten_intent": "split string \"This is a string\" into words that do not contain whitespaces",
      "snippet": "\"\"\"This is a string\"\"\".split()",
      "question_id": 9206964
    },
    {
      "intent": "How to split string into words that do not contain whitespaces in python?",
      "rewritten_intent": "split string \"This     is a     string\" into words that does not contain whitespaces",
      "snippet": "\"\"\"This     is a     string\"\"\".split()",
      "question_id": 9206964
    },
    {
      "intent": "Python: How to remove all duplicate items from a list",
      "rewritten_intent": "remove all duplicate items from a list `lseperatedOrblist`",
      "snippet": "woduplicates = list(set(lseperatedOrblist))",
      "question_id": 6764909
    },
    {
      "intent": "Sum of product of combinations in a list",
      "rewritten_intent": "sum of product of combinations in a list `l`",
      "snippet": "sum([(i * j) for i, j in list(itertools.combinations(l, 2))])",
      "question_id": 34437284
    },
    {
      "intent": "Using variables in Python regular expression",
      "rewritten_intent": "regular expression for validating string 'user' containing a sequence of characters ending with '-' followed by any number of digits.",
      "snippet": "re.compile('{}-\\\\d*'.format(user))",
      "question_id": 5900683
    },
    {
      "intent": "In Python, how do I convert all of the items in a list to floats?",
      "rewritten_intent": "convert all of the items in a list `lst` to float",
      "snippet": "[float(i) for i in lst]",
      "question_id": 1614236
    },
    {
      "intent": "How can I multiply all items in a list together with Python?",
      "rewritten_intent": "multiply all items in a list `[1, 2, 3, 4, 5, 6]` together",
      "snippet": "from functools import reduce\nreduce(lambda x, y: x * y, [1, 2, 3, 4, 5, 6])",
      "question_id": 13840379
    },
    {
      "intent": "python, format string",
      "rewritten_intent": "python, format string \"{} %s {}\" to have 'foo' and 'bar' in the first and second positions",
      "snippet": "\"\"\"{} %s {}\"\"\".format('foo', 'bar')",
      "question_id": 4928526
    },
    {
      "intent": "Replace a string in list of lists",
      "rewritten_intent": "Truncate `\\r\\n` from each string in a list of string `example`",
      "snippet": "example = [x.replace('\\r\\n', '') for x in example]",
      "question_id": 13781828
    },
    {
      "intent": "Python: split elements of a list",
      "rewritten_intent": "split elements of a list `l` by '\\t'",
      "snippet": "[i.partition('\\t')[-1] for i in l if '\\t' in i]",
      "question_id": 23145240
    },
    {
      "intent": "Splitting a string by using two substrings in Python",
      "rewritten_intent": "search for regex pattern 'Test(.*)print' in string `testStr` including new line character '\\n'",
      "snippet": "re.search('Test(.*)print', testStr, re.DOTALL)",
      "question_id": 20062565
    },
    {
      "intent": "how do i return a string from a regex match in python",
      "rewritten_intent": "return a string from a regex match with pattern '<img.*?>' in string 'line'",
      "snippet": "imtag = re.match('<img.*?>', line).group(0)",
      "question_id": 18493677
    },
    {
      "intent": "How to find overlapping matches with a regexp?",
      "rewritten_intent": "find overlapping matches from a string `hello` using regex",
      "snippet": "re.findall('(?=(\\\\w\\\\w))', 'hello')",
      "question_id": 11430863
    },
    {
      "intent": "express binary literals",
      "rewritten_intent": "convert 173 to binary string",
      "snippet": "bin(173)",
      "question_id": 1476
    },
    {
      "intent": "express binary literals",
      "rewritten_intent": "convert binary string '01010101111' to integer",
      "snippet": "int('01010101111', 2)",
      "question_id": 1476
    },
    {
      "intent": "express binary literals",
      "rewritten_intent": "convert binary string '010101' to integer",
      "snippet": "int('010101', 2)",
      "question_id": 1476
    },
    {
      "intent": "express binary literals",
      "rewritten_intent": "convert binary string '0b0010101010' to integer",
      "snippet": "int('0b0010101010', 2)",
      "question_id": 1476
    },
    {
      "intent": "express binary literals",
      "rewritten_intent": "convert 21 to binary string",
      "snippet": "bin(21)",
      "question_id": 1476
    },
    {
      "intent": "express binary literals",
      "rewritten_intent": "convert binary string '11111111' to integer",
      "snippet": "int('11111111', 2)",
      "question_id": 1476
    },
    {
      "intent": "Delete digits in Python (Regex)",
      "rewritten_intent": "delete all digits in string `s` that are not directly attached to a word character",
      "snippet": "re.sub('$\\\\d+\\\\W+|\\\\b\\\\d+\\\\b|\\\\W+\\\\d+$', '', s)",
      "question_id": 817122
    },
    {
      "intent": "Delete digits in Python (Regex)",
      "rewritten_intent": "delete digits at the end of string `s`",
      "snippet": "re.sub('\\\\b\\\\d+\\\\b', '', s)",
      "question_id": 817122
    },
    {
      "intent": "Delete digits in Python (Regex)",
      "rewritten_intent": "Delete self-contained digits from string `s`",
      "snippet": "s = re.sub('^\\\\d+\\\\s|\\\\s\\\\d+\\\\s|\\\\s\\\\d+$', ' ', s)",
      "question_id": 817122
    },
    {
      "intent": "Python Split String",
      "rewritten_intent": "truncate string `s` up to character ':'",
      "snippet": "s.split(':', 1)[1]",
      "question_id": 436599
    },
    {
      "intent": "How can I split this comma-delimited string in Python?",
      "rewritten_intent": "print a string `s` by splitting with comma `,`",
      "snippet": "print(s.split(','))",
      "question_id": 5864485
    },
    {
      "intent": "How can I split this comma-delimited string in Python?",
      "rewritten_intent": "Create list  by splitting string `mystring` using \",\" as delimiter",
      "snippet": "mystring.split(',')",
      "question_id": 5864485
    },
    {
      "intent": "How to remove parentheses only around single words in a string",
      "rewritten_intent": "remove parentheses only around single words in a string `s` using regex",
      "snippet": "re.sub('\\\\((\\\\w+)\\\\)', '\\\\1', s)",
      "question_id": 31405409
    },
    {
      "intent": "Sum the second value of each tuple in a list",
      "rewritten_intent": "get the sum of each second value from a list of tuple `structure`",
      "snippet": "sum(x[1] for x in structure)",
      "question_id": 12218112
    },
    {
      "intent": "what would be the python code to add time to a specific timestamp?",
      "rewritten_intent": "Parse string '21/11/06 16:30' according to format '%d/%m/%y %H:%M'",
      "snippet": "datetime.strptime('21/11/06 16:30', '%d/%m/%y %H:%M')",
      "question_id": 4363072
    },
    {
      "intent": "Python convert tuple to string",
      "rewritten_intent": "concatenate strings in tuple `('a', 'b', 'c', 'd', 'g', 'x', 'r', 'e')` into a single string",
      "snippet": "\"\"\"\"\"\".join(('a', 'b', 'c', 'd', 'g', 'x', 'r', 'e'))",
      "question_id": 19641579
    },
    {
      "intent": "variable number of digit in format string",
      "rewritten_intent": "variable number of digits `digits` in variable `value` in format string \"{0:.{1}%}\"",
      "snippet": "\"\"\"{0:.{1}%}\"\"\".format(value, digits)",
      "question_id": 14932247
    },
    {
      "intent": "Print a variable selected by a random number",
      "rewritten_intent": "get a random item from list `choices`",
      "snippet": "random_choice = random.choice(choices)",
      "question_id": 30651487
    },
    {
      "intent": "Python: Sum string lengths",
      "rewritten_intent": "sum the length of all strings in a list `strings`",
      "snippet": "length = sum(len(s) for s in strings)",
      "question_id": 3780403
    },
    {
      "intent": "Sort a list by multiple attributes?",
      "rewritten_intent": "sort a list `s` by first and second attributes",
      "snippet": "s = sorted(s, key=lambda x: (x[1], x[2]))",
      "question_id": 4233476
    },
    {
      "intent": "Sort a list by multiple attributes?",
      "rewritten_intent": "sort a list of lists `s` by second and third element in each list.",
      "snippet": "s.sort(key=operator.itemgetter(1, 2))",
      "question_id": 4233476
    },

    {
      "intent": "Filtering a list of strings based on contents",
      "rewritten_intent": "filtering out strings that contain 'ab' from a list of strings `lst`",
      "snippet": "[k for k in lst if 'ab' in k]",
      "question_id": 2152898
    },
    {
      "intent": "How do I find the first letter of each word?",
      "rewritten_intent": "find the first letter of each element in string `input`",
      "snippet": "output = ''.join(item[0].upper() for item in input.split())",
      "question_id": 5775719
    },
    {
      "intent": "How to count the number of words in a sentence?",
      "rewritten_intent": "count the number of words in a string `s`",
      "snippet": "len(s.split())",
      "question_id": 19410018
    },
    {
      "intent": "Format number using LaTeX notation in Python",
      "rewritten_intent": "format number 1000000000.0 using latex notation",
      "snippet": "print('\\\\num{{{0:.2g}}}'.format(1000000000.0))",
      "question_id": 13490292
    },
    {
      "intent": "Python initializing a list of lists",
      "rewritten_intent": "Initialize a list of empty lists `x` of size 3",
      "snippet": "x = [[] for i in range(3)]",
      "question_id": 12791501
    },
    {
      "intent": "Split a list of tuples into sub-lists of the same tuple field",
      "rewritten_intent": "zip a list of tuples `[(1, 4), (2, 5), (3, 6)]` into a list of tuples according to original tuple index",
      "snippet": "zip(*[(1, 4), (2, 5), (3, 6)])",
      "question_id": 8092877
    },
    {
      "intent": "Split a list of tuples into sub-lists of the same tuple field",
      "rewritten_intent": "split a list of tuples `data` into sub-lists of the same tuple field using itertools",
      "snippet": "[list(group) for key, group in itertools.groupby(data, operator.itemgetter(1))]",
      "question_id": 8092877
    },
    {
      "intent": "How can I turn a string into a list in Python?",
      "rewritten_intent": "Convert a string into a list",
      "snippet": "list('hello')",
      "question_id": 7522533
    },
    {
      "intent": "How to filter a dictionary in Python?",
      "rewritten_intent": "update all values associated with key `i` to string 'updated' if value `j` is not equal to 'None' in dictionary `d`",
      "snippet": "{i: 'updated' for i, j in list(d.items()) if j != 'None'}",
      "question_id": 4484690
    },
    {
      "intent": "How to filter a dictionary in Python?",
      "rewritten_intent": "Filter a dictionary `d` to remove keys with value None and replace other values with 'updated'",
      "snippet": "dict((k, 'updated') for k, v in d.items() if v is None)",
      "question_id": 4484690
    },
    {
      "intent": "How to filter a dictionary in Python?",
      "rewritten_intent": "Filter a dictionary `d` to remove keys with value 'None' and replace other values with 'updated'",
      "snippet": "dict((k, 'updated') for k, v in d.items() if v != 'None')",
      "question_id": 4484690
    },
    {
      "intent": "python sum the values of lists of list",
      "rewritten_intent": "return list `result` of sum of elements of each list `b` in list of lists `a`",
      "snippet": "result = [sum(b) for b in a]",
      "question_id": 13283689
    },
    {
      "intent": "What's the best way to search for a Python dictionary value in a list of dictionaries?",
      "rewritten_intent": "What's the best way to search for a Python dictionary value in a list of dictionaries?",
      "snippet": "any(d['site'] == 'Superuser' for d in data)",
      "question_id": 1580270
    },
    {
      "intent": "(Django) how to get month name?",
      "rewritten_intent": "how to get month name of datetime `today`",
      "snippet": "today.strftime('%B')",
      "question_id": 9621388
    },
    {
      "intent": "(Django) how to get month name?",
      "rewritten_intent": "get month name from a datetime object `today`",
      "snippet": "today.strftime('%B')",
      "question_id": 9621388
    },
    {
      "intent": "join list of lists in python",
      "rewritten_intent": "Convert nested list `x` into a flat list",
      "snippet": "[j for i in x for j in i]",
      "question_id": 716477
    },
    {
      "intent": "join list of lists in python",
      "rewritten_intent": "get each value from a list of lists `a` using itertools",
      "snippet": "print(list(itertools.chain.from_iterable(a)))",
      "question_id": 716477
    },
    {
      "intent": "Convert Date String to Day of Week",
      "rewritten_intent": "convert date string 'January 11, 2010'  into day of week",
      "snippet": "datetime.datetime.strptime('January 11, 2010', '%B %d, %Y').strftime('%A')",
      "question_id": 16766643
    },
    {
      "intent": "Convert Date String to Day of Week",
      "rewritten_intent": null,
      "snippet": "datetime.datetime.strptime('January 11, 2010', '%B %d, %Y').strftime('%a')",
      "question_id": 16766643
    },
    {
      "intent": "delete a list element by value",
      "rewritten_intent": "remove item \"b\" in list `a`",
      "snippet": "a.remove('b')",
      "question_id": 2793324
    },
    {
      "intent": "delete a list element by value",
      "rewritten_intent": "remove item `c` in list `a`",
      "snippet": "a.remove(c)",
      "question_id": 2793324
    },
    {
      "intent": "delete a list element by value",
      "rewritten_intent": "delete the element 6 from list `a`",
      "snippet": "a.remove(6)",
      "question_id": 2793324
    },
    {
      "intent": "delete a list element by value",
      "rewritten_intent": "delete the element 6 from list `a`",
      "snippet": "a.remove(6)",
      "question_id": 2793324
    },
    {
      "intent": "Python re.findall print all patterns",
      "rewritten_intent": "Get all matching patterns 'a.*?a' from a string 'a 1 a 2 a 3 a 4 a'.",
      "snippet": "re.findall('(?=(a.*?a))', 'a 1 a 2 a 3 a 4 a')",
      "question_id": 17467504
    },
    {
      "intent": "Getting the last element of a list",
      "rewritten_intent": "Getting the last element of list `some_list`",
      "snippet": "some_list[(-1)]",
      "question_id": 930397
    },
    {
      "intent": "Getting the last element of a list",
      "rewritten_intent": "Getting the second to last element of list `some_list`",
      "snippet": "some_list[(-2)]",
      "question_id": 930397
    },
    {
      "intent": "gets the nth-to-last element",
      "rewritten_intent": "gets the `n` th-to-last element in list `some_list`",
      "snippet": "some_list[(- n)]",
      "question_id": 930397
    },
    {
      "intent": "Getting the last element of a list",
      "rewritten_intent": "get the last element in list `alist`",
      "snippet": "alist[(-1)]",
      "question_id": 930397
    },
    {
      "intent": "Getting the last element of a list",
      "rewritten_intent": "get the last element in list `astr`",
      "snippet": "astr[(-1)]",
      "question_id": 930397
    },
    {
      "intent": "Create a list of integers with duplicate values in Python",
      "rewritten_intent": "make a list of integers from 0 to `5` where each second element is a duplicate of the previous element",
      "snippet": "print([u for v in [[i, i] for i in range(5)] for u in v])",
      "question_id": 31743603
    },
    {
      "intent": "Create a list of integers with duplicate values in Python",
      "rewritten_intent": "create a list of integers with duplicate values `[0, 0, 1, 1, 2, 2, 3, 3, 4, 4]`",
      "snippet": "[0, 0, 1, 1, 2, 2, 3, 3, 4, 4]",
      "question_id": 31743603
    },
    {
      "intent": "Create a list of integers with duplicate values in Python",
      "rewritten_intent": "create a list of integers from 1 to 5 with each value duplicated",
      "snippet": "[(i // 2) for i in range(10)]",
      "question_id": 31743603
    },
    {
      "intent": "Fastest way to remove first and last lines from a Python string",
      "rewritten_intent": "remove first and last lines of string `s`",
      "snippet": "s[s.find('\\n') + 1:s.rfind('\\n')]",
      "question_id": 28134319
    },
    {
      "intent": "Is there a Python dict without values?",
      "rewritten_intent": "create dict of squared int values in range of 100",
      "snippet": "{(x ** 2) for x in range(100)}",
      "question_id": 19454970
    },
    {
      "intent": "How to zip lists in a list",
      "rewritten_intent": "zip lists `[1, 2], [3, 4], [5, 6]` in a list",
      "snippet": "zip(*[[1, 2], [3, 4], [5, 6]])",
      "question_id": 4112265
    },
    {
      "intent": "How to zip lists in a list",
      "rewritten_intent": "zip lists in a list [[1, 2], [3, 4], [5, 6]]",
      "snippet": "zip(*[[1, 2], [3, 4], [5, 6]])",
      "question_id": 4112265
    },

    {
      "intent": "get a new string from the 3rd character to the end of the string",
      "rewritten_intent": "get a new string from the 3rd character to the end of the string `x`",
      "snippet": "x[2:]",
      "question_id": 663171
    },
    {
      "intent": "substring a string",
      "rewritten_intent": "get a new string including the first two characters of string `x`",
      "snippet": "x[:2]",
      "question_id": 663171
    },
    {
      "intent": "substring a string",
      "rewritten_intent": "get a new string including all but the last character of string `x`",
      "snippet": "x[:(-2)]",
      "question_id": 663171
    },
    {
      "intent": "substring a string",
      "rewritten_intent": "get a new string including the last two characters of string `x`",
      "snippet": "x[(-2):]",
      "question_id": 663171
    },
    {
      "intent": "substring a string",
      "rewritten_intent": "get a new string with the 3rd to the second-to-last characters of string `x`",
      "snippet": "x[2:(-2)]",
      "question_id": 663171
    },
    {
      "intent": "reversing a string",
      "rewritten_intent": "reverse a string `some_string`",
      "snippet": "some_string[::(-1)]",
      "question_id": 663171
    },
    {
      "intent": "selecting alternate characters",
      "rewritten_intent": "select alternate characters of \"H-e-l-l-o- -W-o-r-l-d\"",
      "snippet": "'H-e-l-l-o- -W-o-r-l-d'[::2]",
      "question_id": 663171
    },
    {
      "intent": "substring a string",
      "rewritten_intent": "select a substring of `s` beginning at `beginning` of length `LENGTH`",
      "snippet": "s = s[beginning:(beginning + LENGTH)]",
      "question_id": 663171
    },
    {
      "intent": "Transform unicode string in python",
      "rewritten_intent": "encode value of key `City` in dictionary `data` as `ascii`, ignoring non-ascii characters",
      "snippet": "data['City'].encode('ascii', 'ignore')",
      "question_id": 10264618
    },
    {
      "intent": "format strings and named arguments in Python",
      "rewritten_intent": "print two numbers `10` and `20` using string formatting",
      "snippet": "\"\"\"{0} {1}\"\"\".format(10, 20)",
      "question_id": 17895835
    },
    {
      "intent": "format strings and named arguments in Python",
      "rewritten_intent": "replace placeholders in string '{1} {ham} {0} {foo} {1}' with arguments `(10, 20, foo='bar', ham='spam')`",
      "snippet": "\"\"\"{1} {ham} {0} {foo} {1}\"\"\".format(10, 20, foo='bar', ham='spam')",
      "question_id": 17895835
    },
    {
      "intent": "How to convert strings numbers to integers in a list?",
      "rewritten_intent": "create list `changed_list ` containing elements of list `original_list` whilst converting strings containing digits to integers",
      "snippet": "changed_list = [(int(f) if f.isdigit() else f) for f in original_list]",
      "question_id": 818949
    },
    {
      "intent": "Add items to a dictionary of lists",
      "rewritten_intent": "get a dictionary with keys from one list `keys` and values from other list `data`",
      "snippet": "dict(zip(keys, zip(*data)))",
      "question_id": 11613284
    },
    {
      "intent": "how to get around \"Single '}' encountered in format string\" when using .format and formatting in printing",
      "rewritten_intent": "Escape character '}' in string '{0}:<15}}{1}:<15}}{2}:<8}}' while using function `format` with arguments `('1', '2', '3')`",
      "snippet": "print('{0}:<15}}{1}:<15}}{2}:<8}}'.format('1', '2', '3'))",
      "question_id": 9079540
    },
    {
      "intent": "Python list of dicts, get max value index",
      "rewritten_intent": "get dictionary with max value of key 'size' in list of dicts `ld`",
      "snippet": "max(ld, key=lambda d: d['size'])",
      "question_id": 30546889
    },
    {
      "intent": "Format() in Python Regex",
      "rewritten_intent": "format parameters 'b' and 'a' into plcaeholders in string \"{0}\\\\w{{2}}b{1}\\\\w{{2}}quarter\"",
      "snippet": "\"\"\"{0}\\\\w{{2}}b{1}\\\\w{{2}}quarter\"\"\".format('b', 'a')",
      "question_id": 18609153
    },
    {
      "intent": "Regex match even number of letters",
      "rewritten_intent": "write a regex pattern to match even number of letter `A`",
      "snippet": "re.compile('^([^A]*)AA([^A]|AA)*$')",
      "question_id": 2045175
    },
    {
      "intent": "How to custom sort an alphanumeric list?",
      "rewritten_intent": "custom sort an alphanumeric list `l`",
      "snippet": "sorted(l, key=lambda x: x.replace('0', 'Z'))",
      "question_id": 41894454
    },
    {
      "intent": "How to split a string within a list to create key-value pairs in Python",
      "rewritten_intent": "create a dictionary containing each string in list `my_list` split by '=' as a key/value pairs",
      "snippet": "print(dict([s.split('=') for s in my_list]))",
      "question_id": 12739911
    },
    {
      "intent": "finding index of an item closest to the value in a list that's not entirely sorted",
      "rewritten_intent": "find the index of element closest to number 11.5 in list `a`",
      "snippet": "min(enumerate(a), key=lambda x: abs(x[1] - 11.5))",
      "question_id": 9706041
    },
    {
      "intent": "Python: an efficient way to slice a list with a index list",
      "rewritten_intent": "create list `c` containing items from list `b` whose index is in list `index`",
      "snippet": "c = [b[i] for i in index]",
      "question_id": 12768504
    },
    {
      "intent": "Python regex alternative for join",
      "rewritten_intent": "separate each character in string `s` by '-'",
      "snippet": "re.sub('(.)(?=.)', '\\\\1-', s)",
      "question_id": 27457970
    },
    {
      "intent": "Python regex alternative for join",
      "rewritten_intent": "concatenate '-' in between characters of string `str`",
      "snippet": "re.sub('(?<=.)(?=.)', '-', str)",
      "question_id": 27457970
    },
    {
      "intent": "Finding the most frequent character in a string",
      "rewritten_intent": "print letter that appears most frequently in string `s`",
      "snippet": "print(collections.Counter(s).most_common(1)[0])",
      "question_id": 4131123
    },
    {
      "intent": "How to match beginning of string or character in Python",
      "rewritten_intent": "find float number proceeding sub-string `par` in string `dir`",
      "snippet": "float(re.findall('(?:^|_)' + par + '(\\\\d+\\\\.\\\\d*)', dir)[0])",
      "question_id": 12211944
    },
    {
      "intent": "How to match beginning of string or character in Python",
      "rewritten_intent": "Get all the matches from a string `abcd` if it begins with a character `a`",
      "snippet": "re.findall('[^a]', 'abcd')",
      "question_id": 12211944
    },
    {
      "intent": "Get the first element of each tuple in a list in Python",
      "rewritten_intent": "get the first element of each tuple in a list `rows`",
      "snippet": "[x[0] for x in rows]",
      "question_id": 22412258
    },
    {
      "intent": "Get the first element of each tuple in a list in Python",
      "rewritten_intent": "get a list `res_list` of the first elements of each tuple in a list of tuples `rows`",
      "snippet": "res_list = [x[0] for x in rows]",
      "question_id": 22412258
    },
    {
      "intent": "Sorting JSON in python by a specific value",
      "rewritten_intent": "sort json `ips_data` by a key 'data_two'",
      "snippet": "sorted_list_of_keyvalues = sorted(list(ips_data.items()), key=item[1]['data_two'])",
      "question_id": 34148637
    },
    {
      "intent": "Finding recurring patterns in a string",
      "rewritten_intent": "find recurring patterns in a string '42344343434'",
      "snippet": "re.findall('^(.+?)((.+)\\\\3+)$', '42344343434')[0][:-1]",
      "question_id": 11303238
    },
    {
      "intent": "Unescaping escaped characters in a string using Python 3.2",
      "rewritten_intent": "encode string `s` to utf-8 code",
      "snippet": "s.encode('utf8')",
      "question_id": 9339630
    },
    {
      "intent": "Parse a string with a date to a datetime object",
      "rewritten_intent": "parse string '01-Jan-1995' into a datetime object using format '%d-%b-%Y'",
      "snippet": "datetime.datetime.strptime('01-Jan-1995', '%d-%b-%Y')",
      "question_id": 1713594
    },
    {
      "intent": "Joining a list that has Integer values with Python",
      "rewritten_intent": "print a list of integers `list_of_ints` using string formatting",
      "snippet": "print(', '.join(str(x) for x in list_of_ints))",
      "question_id": 3590165
    },
    {
      "intent": "convert string to hex in python",
      "rewritten_intent": "convert string 'a' to hex",
      "snippet": "hex(ord('a'))",
      "question_id": 21669374
    },
    {
      "intent": "How to sum the values of list to the power of their indices",
      "rewritten_intent": "Get the sum of values to the power of their indices in a list `l`",
      "snippet": "sum(j ** i for i, j in enumerate(l, 1))",
      "question_id": 40639071
    },
    {
      "intent": "Python/Django: How to remove extra white spaces & tabs from a string?",
      "rewritten_intent": "remove extra white spaces & tabs from a string `s`",
      "snippet": "\"\"\" \"\"\".join(s.split())",
      "question_id": 4241757
    },
    {
      "intent": "How to strip comma in Python string",
      "rewritten_intent": "replace comma in string `s` with empty string ''",
      "snippet": "s = s.replace(',', '')",
      "question_id": 16233593
    },
    {
      "intent": "How to read only part of a list of strings in python",
      "rewritten_intent": "get a list of substrings consisting of the first 5 characters of every string in list `buckets`",
      "snippet": "[s[:5] for s in buckets]",
      "question_id": 38379453
    },
    {
      "intent": "how to sort by length of string followed by alphabetical order?",
      "rewritten_intent": "sort list `the_list` by the length of string followed by alphabetical order",
      "snippet": "the_list.sort(key=lambda item: (-len(item), item))",
      "question_id": 4659524
    },
    {
      "intent": "List comprehension with an accumulator",
      "rewritten_intent": "List comprehension with an accumulator in range of 10",
      "snippet": "list(accumulate(list(range(10))))",
      "question_id": 20222485
    },
    {
      "intent": "How to convert a date string to different format",
      "rewritten_intent": "How to convert a date string '2013-1-25' in format '%Y-%m-%d' to different format '%m/%d/%y'",
      "snippet": "datetime.datetime.strptime('2013-1-25', '%Y-%m-%d').strftime('%m/%d/%y')",
      "question_id": 14524322
    },
    {
      "intent": "How to convert a date string to different format",
      "rewritten_intent": "convert a date string '2013-1-25' in format '%Y-%m-%d' to different format '%-m/%d/%y'",
      "snippet": "datetime.datetime.strptime('2013-1-25', '%Y-%m-%d').strftime('%-m/%d/%y')",
      "question_id": 14524322
    },
    {
      "intent": "Python - How to extract the last x elements from a list",
      "rewritten_intent": "create list `new_list` containing the last 10 elements of list `my_list`",
      "snippet": "new_list = my_list[-10:]",
      "question_id": 8556076
    },
    {
      "intent": "Python - How to extract the last x elements from a list",
      "rewritten_intent": "get the last 10 elements from a list `my_list`",
      "snippet": "my_list[-10:]",
      "question_id": 8556076
    },
    {
      "intent": "How can I convert literal escape sequences in a string to the corresponding bytes?",
      "rewritten_intent": "convert and escape string \"\\\\xc3\\\\x85\u3042\" to UTF-8 code",
      "snippet": "\"\"\"\\\\xc3\\\\x85\u3042\"\"\".encode('utf-8').decode('unicode_escape')",
      "question_id": 41552839
    },
    {
      "intent": "How can I convert literal escape sequences in a string to the corresponding bytes?",
      "rewritten_intent": "encode string \"\\\\xc3\\\\x85\u3042\" to bytes",
      "snippet": "\"\"\"\\\\xc3\\\\x85\u3042\"\"\".encode('utf-8')",
      "question_id": 41552839
    },
    {
      "intent": "How do I merge two lists into a single list?",
      "rewritten_intent": "interleave the elements of two lists `a` and `b`",
      "snippet": "[j for i in zip(a, b) for j in i]",
      "question_id": 3471999
    },
    {
      "intent": "How do I merge two lists into a single list?",
      "rewritten_intent": "merge two lists `a` and `b` into a single list",
      "snippet": "[j for i in zip(a, b) for j in i]",
      "question_id": 3471999
    },
    {
      "intent": "Removing character in list of strings",
      "rewritten_intent": "delete all occureces of `8` in each string `s` in list `lst`",
      "snippet": "print([s.replace('8', '') for s in lst])",
      "question_id": 8282553
    },
    {
      "intent": "How to split a word into letters in Python",
      "rewritten_intent": "Split string `Hello` into a string of letters seperated by `,`",
      "snippet": "\"\"\",\"\"\".join('Hello')",
      "question_id": 14737222
    },
    {
      "intent": "Confusing with the usage of regex in Python",
      "rewritten_intent": "match zero-or-more instances of lower case alphabet characters in a string `f233op `",
      "snippet": "re.findall('([a-z]*)', 'f233op')",
      "question_id": 22229255
    },
    {
      "intent": "Confusing with the usage of regex in Python",
      "rewritten_intent": "match zero-or-more instances of lower case alphabet characters in a string `f233op `",
      "snippet": "re.findall('([a-z])*', 'f233op')",
      "question_id": 22229255
    },
    {
      "intent": "Splitting a string based on a certain set of words",
      "rewritten_intent": "split string 'happy_hats_for_cats' using string '_for_'",
      "snippet": "re.split('_for_', 'happy_hats_for_cats')",
      "question_id": 34410358
    },
    {
      "intent": "Splitting a string based on a certain set of words",
      "rewritten_intent": "Split string 'sad_pandas_and_happy_cats_for_people' based on string 'and', 'or' or 'for'",
      "snippet": "re.split('_(?:for|or|and)_', 'sad_pandas_and_happy_cats_for_people')",
      "question_id": 34410358
    },
    {
      "intent": "Splitting a string based on a certain set of words",
      "rewritten_intent": "Split a string `l` by multiple words `for` or `or` or `and`",
      "snippet": "[re.split('_(?:f?or|and)_', s) for s in l]",
      "question_id": 34410358
    },
    {
      "intent": "How do I zip keys with individual values in my lists in python?",
      "rewritten_intent": "zip keys with individual values in lists `k` and `v`",
      "snippet": "[dict(zip(k, x)) for x in v]",
      "question_id": 13480031
    },
    {
      "intent": "Python how to sort this list?",
      "rewritten_intent": "Sort a list 'lst' in descending order.",
      "snippet": "sorted(lst, reverse=True)",
      "question_id": 4644025
    },
    {
      "intent": "Python: find out whether a list of integers is coherent",
      "rewritten_intent": "check if elements in list `my_list` are coherent in order",
      "snippet": "return my_list == list(range(my_list[0], my_list[-1] + 1))",
      "question_id": 18131741
    },
    {
      "intent": "Double-decoding unicode in python",
      "rewritten_intent": "encode `u'X\\xc3\\xbcY\\xc3\\x9f'` as unicode and decode with utf-8",
      "snippet": "'X\\xc3\\xbcY\\xc3\\x9f'.encode('raw_unicode_escape').decode('utf-8')",
      "question_id": 4267019
    },
    {
      "intent": "Parse String to Float or Int",
      "rewritten_intent": "parse string `a` to float",
      "snippet": "float(a)",
      "question_id": 379906
    },
    {
      "intent": "How do I create a datetime in Python from milliseconds?",
      "rewritten_intent": "convert `ms` milliseconds to a datetime object",
      "snippet": "datetime.datetime.fromtimestamp(ms / 1000.0)",
      "question_id": 748491
    },
    {
      "intent": "find last occurence of multiple characters in a string in Python",
      "rewritten_intent": "get the largest index of the last occurrence of characters '([{' in string `test_string`",
      "snippet": "max(test_string.rfind(i) for i in '([{')",
      "question_id": 31950612
    },
    {
      "intent": "How to print Unicode character in Python?",
      "rewritten_intent": "print 'here is your checkmark: ' plus unicode character u'\\u2713'",
      "snippet": "print('here is your checkmark: ' + '\\u2713')",
      "question_id": 10569438
    },
    {
      "intent": "How to print Unicode character in Python?",
      "rewritten_intent": "print unicode characters in a string `\\u0420\\u043e\\u0441\\u0441\\u0438\\u044f`",
      "snippet": "print('\\u0420\\u043e\\u0441\\u0441\\u0438\\u044f')",
      "question_id": 10569438
    },
    {
      "intent": "in python how do I convert a single digit number into a double digits string?",
      "rewritten_intent": "pads string '5' on the left with 1 zero",
      "snippet": "print('{0}'.format('5'.zfill(2)))",
      "question_id": 3505831
    },
    {
      "intent": "Best / most pythonic way to get an ordered list of unique items",
      "rewritten_intent": "Remove duplicates elements from list `sequences` and sort it in ascending order",
      "snippet": "sorted(set(itertools.chain.from_iterable(sequences)))",
      "question_id": 7458689
    },
    {
      "intent": "Escaping quotes in string",
      "rewritten_intent": "escaping quotes in string",
      "snippet": "replace('\"', '\\\\\"')",
      "question_id": 6275762
    },
    {
      "intent": "How to check if a character is upper-case in Python?",
      "rewritten_intent": "check if all string elements in list `words` are upper-cased",
      "snippet": "print(all(word[0].isupper() for word in words))",
      "question_id": 3668964
    },
    {
      "intent": "What is the best way to remove a dictionary item by value in python?",
      "rewritten_intent": "remove items from dictionary `myDict` if the item's value `val` is equal to 42",
      "snippet": "myDict = {key: val for key, val in list(myDict.items()) if val != 42}",
      "question_id": 29218750
    },
    {
      "intent": "What is the best way to remove a dictionary item by value in python?",
      "rewritten_intent": "Remove all items from a dictionary `myDict` whose values are `42`",
      "snippet": "{key: val for key, val in list(myDict.items()) if val != 42}",
      "question_id": 29218750
    },
    {
      "intent": "How can I determine the byte length of a utf-8 encoded string in Python?",
      "rewritten_intent": "Determine the byte length of a utf-8 encoded string `s`",
      "snippet": "return len(s.encode('utf-8'))",
      "question_id": 6714826
    },
    {
      "intent": "Strip random characters from url",
      "rewritten_intent": "strip everything up to and including the character `&` from url `url`, strip the character `=` from the remaining string and concatenate `.html` to the end",
      "snippet": "url.split('&')[-1].replace('=', '') + '.html'",
      "question_id": 41133414
    },
    {
      "intent": "remove an element from a list by index",
      "rewritten_intent": "remove the last element in list `a`",
      "snippet": "del a[(-1)]",
      "question_id": 627435
    },
    {
      "intent": "remove an element from a list by index",
      "rewritten_intent": "remove the element in list `a` with index 1",
      "snippet": "a.pop(1)",
      "question_id": 627435
    },
    {
      "intent": "remove an element from a list by index",
      "rewritten_intent": "remove the last element in list `a`",
      "snippet": "a.pop()",
      "question_id": 627435
    },
    {
      "intent": "remove an element from a list by index",
      "rewritten_intent": "remove the element in list `a` at index `index`",
      "snippet": "a.pop(index)",
      "question_id": 627435
    },
    {
      "intent": "remove an element from a list by index",
      "rewritten_intent": "remove the element in list `a` at index `index`",
      "snippet": "del a[index]",
      "question_id": 627435
    },

    {
      "intent": "'List of lists' to 'list' without losing empty lists from the original list of lists",
      "rewritten_intent": "convert a list of lists `list_of_lists` into a list of strings keeping empty sub-lists as empty string ''",
      "snippet": "[''.join(l) for l in list_of_lists]",
      "question_id": 18022241
    },
    {
      "intent": "split items in list",
      "rewritten_intent": "Create new list `result` by splitting each item in list `words`",
      "snippet": "result = [item for word in words for item in word.split(',')]",
      "question_id": 12808420
    },
    {
      "intent": "Converting JSON date string to python datetime",
      "rewritten_intent": "convert JSON string '2012-05-29T19:30:03.283Z' into a DateTime object using format '%Y-%m-%dT%H:%M:%S.%fZ'",
      "snippet": "datetime.datetime.strptime('2012-05-29T19:30:03.283Z', '%Y-%m-%dT%H:%M:%S.%fZ')",
      "question_id": 10805589
    },
    {
      "intent": "python comprehension loop for dictionary",
      "rewritten_intent": "count `True` values associated with key 'one' in dictionary `tadas`",
      "snippet": "sum(item['one'] for item in list(tadas.values()))",
      "question_id": 35561743
    },
    {
      "intent": "split a string in python",
      "rewritten_intent": "split string `a` using new-line character '\\n' as separator",
      "snippet": "a.rstrip().split('\\n')",
      "question_id": 2094176
    },
    {
      "intent": "split a string in python",
      "rewritten_intent": "split a string `a` with new line character",
      "snippet": "a.split('\\n')[:-1]",
      "question_id": 2094176
    },
    {
      "intent": "check if a value exist in a list",
      "rewritten_intent": "check if 7 is in `a`",
      "snippet": "(7 in a)",
      "question_id": 7571635
    },
    {
      "intent": "check if a value exist in a list",
      "rewritten_intent": "check if 'a' is in list `a`",
      "snippet": "('a' in a)",
      "question_id": 7571635
    },
    {
      "intent": "Python: Split string with multiple delimiters",
      "rewritten_intent": "split string `str` with delimiter '; ' or delimiter ', '",
      "snippet": "re.split('; |, ', str)",
      "question_id": 4998629
    },
    {
      "intent": "Convert string date to timestamp in Python",
      "rewritten_intent": "convert date string `s` in format pattern '%d/%m/%Y' into a timestamp",
      "snippet": "time.mktime(datetime.datetime.strptime(s, '%d/%m/%Y').timetuple())",
      "question_id": 9637838
    },
    {
      "intent": "Convert string date to timestamp in Python",
      "rewritten_intent": "convert string '01/12/2011' to an integer timestamp",
      "snippet": "int(datetime.datetime.strptime('01/12/2011', '%d/%m/%Y').strftime('%s'))",
      "question_id": 9637838
    },
    {
      "intent": "How do I coalesce a sequence of identical characters into just one?",
      "rewritten_intent": "coalesce non-word-characters in string `a`",
      "snippet": "print(re.sub('(\\\\W)\\\\1+', '\\\\1', a))",
      "question_id": 2813829
    },
    {
      "intent": "Convert a Unicode string to a string",
      "rewritten_intent": "Convert a Unicode string `title` to a 'ascii' string",
      "snippet": "unicodedata.normalize('NFKD', title).encode('ascii', 'ignore')",
      "question_id": 1207457
    },
    {
      "intent": "Convert a Unicode string to a string",
      "rewritten_intent": "Convert a Unicode string `a` to a 'ascii' string",
      "snippet": "a.encode('ascii', 'ignore')",
      "question_id": 1207457
    },
    {
      "intent": "What is the proper way to print a nested list with the highest value in Python",
      "rewritten_intent": "get the list with the highest sum value in list `x`",
      "snippet": "print(max(x, key=sum))",
      "question_id": 29760130
    },
    {
      "intent": "Functional statement in Python to return the sum of certain lists in a list of lists",
      "rewritten_intent": "sum the length of lists in list `x` that are more than 1 item in length",
      "snippet": "sum(len(y) for y in x if len(y) > 1)",
      "question_id": 35707224
    },
    {
      "intent": "Python - Insert numbers in string between quotes",
      "rewritten_intent": "Enclose numbers in quotes in a string `This is number 1 and this is number 22`",
      "snippet": "re.sub('(\\\\d+)', '\"\\\\1\"', 'This is number 1 and this is number 22')",
      "question_id": 42364992
    },
    {
      "intent": "Sort a nested list by two elements",
      "rewritten_intent": "sort a nested list by the inverse of element 2, then by element 1",
      "snippet": "sorted(l, key=lambda x: (-int(x[1]), x[0]))",
      "question_id": 34705205
    },
    {
      "intent": "Python Regex Get String Between Two Substrings",
      "rewritten_intent": "get a string `randomkey123xyz987` between two substrings in a string `api('randomkey123xyz987', 'key', 'text')` using regex",
      "snippet": "re.findall(\"api\\\\('(.*?)'\", \"api('randomkey123xyz987', 'key', 'text')\")",
      "question_id": 29703793
    },
    {
      "intent": "Pythonic way to print list items",
      "rewritten_intent": "print list of items `myList`",
      "snippet": "print('\\n'.join(str(p) for p in myList))",
      "question_id": 15769246
    },
    {
      "intent": "update dictionary with dynamic keys and values in python",
      "rewritten_intent": "update the dictionary `mydic` with dynamic keys `i` and values with key 'name' from dictionary `o`",
      "snippet": "mydic.update({i: o['name']})",
      "question_id": 13860026
    },
    {
      "intent": "How do I divide the members of a list by the corresponding members of another list in Python?",
      "rewritten_intent": "divide the members of a list `conversions` by the corresponding members of another list `trials`",
      "snippet": "[(c / t) for c, t in zip(conversions, trials)]",
      "question_id": 3731426
    },
    {
      "intent": "sort dict by value python",
      "rewritten_intent": "sort dict `data` by value",
      "snippet": "sorted(data, key=data.get)",
      "question_id": 16772071
    },
    {
      "intent": "sort dict by value python",
      "rewritten_intent": "Sort a dictionary `data` by its values",
      "snippet": "sorted(data.values())",
      "question_id": 16772071
    },
    {
      "intent": "sort dict by value python",
      "rewritten_intent": "Get a list of pairs of key-value sorted by values in dictionary `data`",
      "snippet": "sorted(list(data.items()), key=lambda x: x[1])",
      "question_id": 16772071
    },
    {
      "intent": "sort dict by value python",
      "rewritten_intent": null,
      "snippet": "sorted(list(data.items()), key=lambda x: x[1])",
      "question_id": 16772071
    },
    {
      "intent": "How do I display current time using Python + Django?",
      "rewritten_intent": "display current time",
      "snippet": "now = datetime.datetime.now().strftime('%H:%M:%S')",
      "question_id": 5110352
    },
    {
      "intent": "Find the nth occurrence of substring in a string",
      "rewritten_intent": "find the index of the second occurrence of the substring `bar` in string `foo bar bar bar`",
      "snippet": "\"\"\"foo bar bar bar\"\"\".replace('bar', 'XXX', 1).find('bar')",
      "question_id": 1883980
    },
    {
      "intent": "How do you check the presence of many keys in a Python dictinary?",
      "rewritten_intent": "check if key 'stackoverflow' and key 'google' are presented in dictionary `sites`",
      "snippet": "set(['stackoverflow', 'google']).issubset(sites)",
      "question_id": 2813806
    },
    {
      "intent": "Replace part of a string in Python?",
      "rewritten_intent": "replace string ' and ' in string `stuff` with character '/'",
      "snippet": "stuff.replace(' and ', '/')",
      "question_id": 10037742
    },
    {
      "intent": "time offset",
      "rewritten_intent": "substract 1 hour and 10 minutes from current time",
      "snippet": "t = datetime.datetime.now()\n(t - datetime.timedelta(hours=1, minutes=10))",
      "question_id": 14043934
    },
    {
      "intent": "time offset",
      "rewritten_intent": "subtract 1 hour and 10 minutes from time object `t`",
      "snippet": "(t - datetime.timedelta(hours=1, minutes=10))",
      "question_id": 14043934
    },
    {
      "intent": "time offset",
      "rewritten_intent": "add 1 hour and 2 minutes to time object `t`",
      "snippet": "dt = datetime.datetime.combine(datetime.date.today(), t)",
      "question_id": 14043934
    },
    {
      "intent": "time offset",
      "rewritten_intent": "subtract 5 hours from the time object `dt`",
      "snippet": "dt -= datetime.timedelta(hours=5)",
      "question_id": 14043934
    },
    {
      "intent": "python - iterating over a subset of a list of tuples",
      "rewritten_intent": "Get all the items from a list of tuple 'l' where second item in tuple is '1'.",
      "snippet": "[x for x in l if x[1] == 1]",
      "question_id": 18131367
    },
    {
      "intent": "Is there a way to refer to the entire matched expression in re.sub without the use of a group?",
      "rewritten_intent": "place '\\' infront of each non-letter char in string `line`",
      "snippet": "print(re.sub('[_%^$]', '\\\\\\\\\\\\g<0>', line))",
      "question_id": 26155985
    },
    {
      "intent": "Compare elements of a list of lists and return a list",
      "rewritten_intent": "convert a list of lists `a` into list of tuples of appropriate elements form nested lists",
      "snippet": "zip(*a)",
      "question_id": 35017035
    },
    {
      "intent": "Convert list of strings to int",
      "rewritten_intent": "convert a list of strings `lst` to list of integers",
      "snippet": "[map(int, sublist) for sublist in lst]",
      "question_id": 34696853
    },
    {
      "intent": "Convert list of strings to int",
      "rewritten_intent": "convert strings in list-of-lists `lst` to ints",
      "snippet": "[[int(x) for x in sublist] for sublist in lst]",
      "question_id": 34696853
    },
    {
      "intent": "Split dictionary of lists into list of dictionaries",
      "rewritten_intent": "create a list where each element is a dictionary with keys 'key1' and 'key2' and values corresponding to each value in the lists referenced by keys 'key1' and 'key2' in dictionary `d`",
      "snippet": "[{'key1': a, 'key2': b} for a, b in zip(d['key1'], d['key2'])]",
      "question_id": 1780174
    },
    {
      "intent": "Split dictionary of lists into list of dictionaries",
      "rewritten_intent": null,
      "snippet": "map(dict, zip(*[[(k, v) for v in value] for k, value in list(d.items())]))",
      "question_id": 1780174
    },
    {
      "intent": "Get Last Day of the Month",
      "rewritten_intent": "Get Last Day of the first month in 2002",
      "snippet": "calendar.monthrange(2002, 1)",
      "question_id": 42950
    },
    {
      "intent": "Get Last Day of the Month",
      "rewritten_intent": "Get Last Day of the second month in 2002",
      "snippet": "calendar.monthrange(2008, 2)",
      "question_id": 42950
    },
    {
      "intent": "Get Last Day of the Month",
      "rewritten_intent": "Get Last Day of the second month in 2100",
      "snippet": "calendar.monthrange(2100, 2)",
      "question_id": 42950
    },
    {
      "intent": "Get Last Day of the Month",
      "rewritten_intent": "Get Last Day of the month `month` in year `year`",
      "snippet": "calendar.monthrange(year, month)[1]",
      "question_id": 42950
    },
    {
      "intent": "Get Last Day of the Month",
      "rewritten_intent": "Get Last Day of the second month in year 2012",
      "snippet": "monthrange(2012, 2)",
      "question_id": 42950
    },
    {
      "intent": "Get Last Day of the Month",
      "rewritten_intent": "Get Last Day of the first month in year 2000",
      "snippet": "(datetime.date(2000, 2, 1) - datetime.timedelta(days=1))",
      "question_id": 42950
    },
    {
      "intent": "Delete letters from string",
      "rewritten_intent": "delete letters from string '12454v'",
      "snippet": "\"\"\"\"\"\".join(filter(str.isdigit, '12454v'))",
      "question_id": 14750675
    },
    {
      "intent": "Sort tuples based on second parameter",
      "rewritten_intent": "sort a list of tuples `my_list` by second parameter in the tuple",
      "snippet": "my_list.sort(key=lambda x: x[1])",
      "question_id": 8459231
    },
    {
      "intent": "Find all occurrences of a substring in Python",
      "rewritten_intent": "find indexes of all occurrences of a substring `tt` in a string `ttt`",
      "snippet": "[m.start() for m in re.finditer('(?=tt)', 'ttt')]",
      "question_id": 4664850
    },
    {
      "intent": "Find all occurrences of a substring in Python",
      "rewritten_intent": "find all occurrences of a substring in a string",
      "snippet": "[m.start() for m in re.finditer('test', 'test test test test')]",
      "question_id": 4664850
    },
    {
      "intent": "re.split with spaces in python",
      "rewritten_intent": "split string `s` based on white spaces",
      "snippet": "re.findall('\\\\s+|\\\\S+', s)",
      "question_id": 35005907
    },
    {
      "intent": "How to truncate a string using str.format in Python?",
      "rewritten_intent": "display first 5 characters of string 'aaabbbccc'",
      "snippet": "\"\"\"{:.5}\"\"\".format('aaabbbccc')",
      "question_id": 24076297
    },
    {
      "intent": "How do I convert a string of hexadecimal values to a list of integers?",
      "rewritten_intent": "unpack hexadecimal string `s` to a list of integer values",
      "snippet": "struct.unpack('11B', s)",
      "question_id": 14961562
    },
    {
      "intent": "Finding the index of an item given a list containing it in Python",
      "rewritten_intent": "finding the index of an item 'foo' given a list `['foo', 'bar', 'baz']` containing it",
      "snippet": "[i for i, j in enumerate(['foo', 'bar', 'baz']) if j == 'foo']",
      "question_id": 176918
    },
    {
      "intent": "How to generate all permutations of a list in Python",
      "rewritten_intent": "generate all permutations of list `[1, 2, 3]` and list `[4, 5, 6]`",
      "snippet": "print(list(itertools.product([1, 2, 3], [4, 5, 6])))",
      "question_id": 104420
    },
    {
      "intent": "How to generate all permutations of a list in Python",
      "rewritten_intent": "generate all permutations of a list `[1, 2, 3]`",
      "snippet": "itertools.permutations([1, 2, 3])",
      "question_id": 104420
    },
    {
      "intent": "Remove punctuation from Unicode formatted strings",
      "rewritten_intent": "substitute occurrences of unicode regex pattern u'\\\\p{P}+' with empty string '' in string `text`",
      "snippet": "return re.sub('\\\\p{P}+', '', text)",
      "question_id": 11066400
    },
    {
      "intent": "Sum of all values in a Python dict",
      "rewritten_intent": "sum of all values in a python dict `d`",
      "snippet": "sum(d.values())",
      "question_id": 4880960
    },
    {
      "intent": "Sum of all values in a Python dict",
      "rewritten_intent": null,
      "snippet": "sum(d.values())",
      "question_id": 4880960
    },
    {
      "intent": "Sort a list of dictionary provided an order",
      "rewritten_intent": "sort a list of dictionaries `list_of_dct` by values in an order `order`",
      "snippet": "sorted(list_of_dct, key=lambda x: order.index(list(x.values())[0]))",
      "question_id": 35078261
    },
    {
      "intent": "how to change the case of first letter of a string?",
      "rewritten_intent": "change the case of the first letter in string `s`",
      "snippet": "return s[0].upper() + s[1:]",
      "question_id": 4223923
    },
    {
      "intent": "how to change [1,2,3,4] to '1234' using python",
      "rewritten_intent": "join list of numbers `[1,2,3,4] ` to string of numbers.",
      "snippet": "\"\"\"\"\"\".join([1, 2, 3, 4])",
      "question_id": 2597932
    },
    {
      "intent": "Convert a string to datetime object in python",
      "rewritten_intent": "Parse string `datestr` into a datetime object using format pattern '%Y-%m-%d'",
      "snippet": "dateobj = datetime.datetime.strptime(datestr, '%Y-%m-%d').date()",
      "question_id": 5868374
    }
  ]